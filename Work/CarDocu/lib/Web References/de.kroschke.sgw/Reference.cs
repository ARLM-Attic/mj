//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Der Quellcode wurde automatisch mit Microsoft.VSDesigner generiert. Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CarDocu.de.kroschke.sgw {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="https://webservices.dad.de/CarDocu/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IsOnlineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessArchivMeldungOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessVwlKlaerfallMeldungOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessWkdaWiesbadenOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = "http://localhost/CarDocu/Service.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsOnlineCompletedEventHandler IsOnlineCompleted;
        
        /// <remarks/>
        public event ProcessArchivMeldungCompletedEventHandler ProcessArchivMeldungCompleted;
        
        /// <remarks/>
        public event ProcessVwlKlaerfallMeldungCompletedEventHandler ProcessVwlKlaerfallMeldungCompleted;
        
        /// <remarks/>
        public event ProcessWkdaWiesbadenCompletedEventHandler ProcessWkdaWiesbadenCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservices.dad.de/CarDocu/IsOnline", RequestNamespace="https://webservices.dad.de/CarDocu/", ResponseNamespace="https://webservices.dad.de/CarDocu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsOnline() {
            object[] results = this.Invoke("IsOnline", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsOnlineAsync() {
            this.IsOnlineAsync(null);
        }
        
        /// <remarks/>
        public void IsOnlineAsync(object userState) {
            if ((this.IsOnlineOperationCompleted == null)) {
                this.IsOnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsOnlineOperationCompleted);
            }
            this.InvokeAsync("IsOnline", new object[0], this.IsOnlineOperationCompleted, userState);
        }
        
        private void OnIsOnlineOperationCompleted(object arg) {
            if ((this.IsOnlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsOnlineCompleted(this, new IsOnlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservices.dad.de/CarDocu/ProcessArchivMeldung", RequestNamespace="https://webservices.dad.de/CarDocu/", ResponseNamespace="https://webservices.dad.de/CarDocu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProcessArchivMeldung(string kundennr, string documentID, string id, string standortCode, string commaSeparatedDocumentCodes, out string commaSeparatedReturnCodes, out string commaSeparatedReturnMessages) {
            object[] results = this.Invoke("ProcessArchivMeldung", new object[] {
                        kundennr,
                        documentID,
                        id,
                        standortCode,
                        commaSeparatedDocumentCodes});
            commaSeparatedReturnCodes = ((string)(results[1]));
            commaSeparatedReturnMessages = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessArchivMeldungAsync(string kundennr, string documentID, string id, string standortCode, string commaSeparatedDocumentCodes) {
            this.ProcessArchivMeldungAsync(kundennr, documentID, id, standortCode, commaSeparatedDocumentCodes, null);
        }
        
        /// <remarks/>
        public void ProcessArchivMeldungAsync(string kundennr, string documentID, string id, string standortCode, string commaSeparatedDocumentCodes, object userState) {
            if ((this.ProcessArchivMeldungOperationCompleted == null)) {
                this.ProcessArchivMeldungOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessArchivMeldungOperationCompleted);
            }
            this.InvokeAsync("ProcessArchivMeldung", new object[] {
                        kundennr,
                        documentID,
                        id,
                        standortCode,
                        commaSeparatedDocumentCodes}, this.ProcessArchivMeldungOperationCompleted, userState);
        }
        
        private void OnProcessArchivMeldungOperationCompleted(object arg) {
            if ((this.ProcessArchivMeldungCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessArchivMeldungCompleted(this, new ProcessArchivMeldungCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservices.dad.de/CarDocu/ProcessVwlKlaerfallMeldung", RequestNamespace="https://webservices.dad.de/CarDocu/", ResponseNamespace="https://webservices.dad.de/CarDocu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProcessVwlKlaerfallMeldung(string kundennr, string documentID, string id, string standortCode, string commaSeparatedDocumentCodes, out string commaSeparatedReturnCodes, out string commaSeparatedReturnMessages) {
            object[] results = this.Invoke("ProcessVwlKlaerfallMeldung", new object[] {
                        kundennr,
                        documentID,
                        id,
                        standortCode,
                        commaSeparatedDocumentCodes});
            commaSeparatedReturnCodes = ((string)(results[1]));
            commaSeparatedReturnMessages = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessVwlKlaerfallMeldungAsync(string kundennr, string documentID, string id, string standortCode, string commaSeparatedDocumentCodes) {
            this.ProcessVwlKlaerfallMeldungAsync(kundennr, documentID, id, standortCode, commaSeparatedDocumentCodes, null);
        }
        
        /// <remarks/>
        public void ProcessVwlKlaerfallMeldungAsync(string kundennr, string documentID, string id, string standortCode, string commaSeparatedDocumentCodes, object userState) {
            if ((this.ProcessVwlKlaerfallMeldungOperationCompleted == null)) {
                this.ProcessVwlKlaerfallMeldungOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessVwlKlaerfallMeldungOperationCompleted);
            }
            this.InvokeAsync("ProcessVwlKlaerfallMeldung", new object[] {
                        kundennr,
                        documentID,
                        id,
                        standortCode,
                        commaSeparatedDocumentCodes}, this.ProcessVwlKlaerfallMeldungOperationCompleted, userState);
        }
        
        private void OnProcessVwlKlaerfallMeldungOperationCompleted(object arg) {
            if ((this.ProcessVwlKlaerfallMeldungCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessVwlKlaerfallMeldungCompleted(this, new ProcessVwlKlaerfallMeldungCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservices.dad.de/CarDocu/ProcessWkdaWiesbaden", RequestNamespace="https://webservices.dad.de/CarDocu/", ResponseNamespace="https://webservices.dad.de/CarDocu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProcessWkdaWiesbaden(string kundennr, string documentID, string id, string standortCode, string commaSeparatedDocumentCodes, out string commaSeparatedReturnCodes, out string commaSeparatedReturnMessages) {
            object[] results = this.Invoke("ProcessWkdaWiesbaden", new object[] {
                        kundennr,
                        documentID,
                        id,
                        standortCode,
                        commaSeparatedDocumentCodes});
            commaSeparatedReturnCodes = ((string)(results[1]));
            commaSeparatedReturnMessages = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessWkdaWiesbadenAsync(string kundennr, string documentID, string id, string standortCode, string commaSeparatedDocumentCodes) {
            this.ProcessWkdaWiesbadenAsync(kundennr, documentID, id, standortCode, commaSeparatedDocumentCodes, null);
        }
        
        /// <remarks/>
        public void ProcessWkdaWiesbadenAsync(string kundennr, string documentID, string id, string standortCode, string commaSeparatedDocumentCodes, object userState) {
            if ((this.ProcessWkdaWiesbadenOperationCompleted == null)) {
                this.ProcessWkdaWiesbadenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessWkdaWiesbadenOperationCompleted);
            }
            this.InvokeAsync("ProcessWkdaWiesbaden", new object[] {
                        kundennr,
                        documentID,
                        id,
                        standortCode,
                        commaSeparatedDocumentCodes}, this.ProcessWkdaWiesbadenOperationCompleted, userState);
        }
        
        private void OnProcessWkdaWiesbadenOperationCompleted(object arg) {
            if ((this.ProcessWkdaWiesbadenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessWkdaWiesbadenCompleted(this, new ProcessWkdaWiesbadenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void IsOnlineCompletedEventHandler(object sender, IsOnlineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsOnlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsOnlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ProcessArchivMeldungCompletedEventHandler(object sender, ProcessArchivMeldungCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessArchivMeldungCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessArchivMeldungCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string commaSeparatedReturnCodes {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string commaSeparatedReturnMessages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ProcessVwlKlaerfallMeldungCompletedEventHandler(object sender, ProcessVwlKlaerfallMeldungCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessVwlKlaerfallMeldungCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessVwlKlaerfallMeldungCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string commaSeparatedReturnCodes {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string commaSeparatedReturnMessages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ProcessWkdaWiesbadenCompletedEventHandler(object sender, ProcessWkdaWiesbadenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessWkdaWiesbadenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessWkdaWiesbadenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string commaSeparatedReturnCodes {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string commaSeparatedReturnMessages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591