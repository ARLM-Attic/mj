<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    x:Class="WpfTools4.Resources.Styles"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Common="clr-namespace:WpfTools4.Common">

    <Style TargetType="TextBlock">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style TargetType="TextBlock" x:Key="lbBase">
        <Setter Property="Margin" Value="3" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="TextBlock" x:Key="lbHeader" BasedOn="{StaticResource lbBase}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style TargetType="TextBlock" x:Key="lbHeaderBig" BasedOn="{StaticResource lbBase}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#B6000000" />
    </Style>
    <Style TargetType="TextBlock" x:Key="lbHeaderBigBlack" BasedOn="{StaticResource lbHeaderBig}">
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style TargetType="TextBlock" x:Key="lbRight" BasedOn="{StaticResource lbBase}">
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="Width" Value="100" />
    </Style>

    <Style TargetType="TextBlock" x:Key="lbContent" BasedOn="{StaticResource lbBase}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Common:EnterKeyToTab.IsEnabled" Value="True" />
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Common:EnterKeyToTab.IsEnabled" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="true">
                        <Border Background="Red" DockPanel.Dock="Right" Margin="0,0,0,0" Width="11" Height="11" CornerRadius="10" VerticalAlignment="Top"
                                    ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            <TextBlock Text="!" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Foreground="Yellow">
                            </TextBlock>
                        </Border>
                        <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
                            <Border BorderBrush="Red" BorderThickness="1" />
                        </AdornedElementPlaceholder>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--- default style for all images, also toolbar icons, etc 
          ==> if (image-)button is not enabled, the image opacity will be set to a lower value -->
    <Style TargetType="Image">
        <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button},
                                        AncestorLevel=1},Path=IsEnabled}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.35"/>
                <!--
                <Setter Property="Effect">
                    <Setter.Value>
                        <BlurEffect Radius="1" />
                    </Setter.Value>
                </Setter>
                -->
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Opacity" Value="0.95"/>
                <!--
                <Setter Property="Effect">
                    <Setter.Value>
                        <BlurEffect Radius="1" />
                    </Setter.Value>
                </Setter>
                -->
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="Separator" x:Key="SepDotted">
        <Setter Property="Margin" Value="0,15,0,15" />
        <Setter Property="Height" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle x:Name="Rectangle" Fill="Transparent" 
                               Stroke="LightGray" StrokeDashCap="Flat" StrokeThickness="1" SnapsToDevicePixels="True" StrokeDashOffset="2" StrokeDashArray="2.5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SimpleDataGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
        <Setter Property="Background" Value="Transparent" />

        <!--- hide the ugly black border that occurs when datagrid gots focus: -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Grid Background="{TemplateBinding Background}" Margin="5,0,5,0">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="brGradientDataGridCell" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="LightGray" Offset="0"/>
        <GradientStop Color="#FFFFFFE6" Offset="0.02"/>
        <GradientStop Color="#FFFFFFD6" Offset="0.49"/>
        <GradientStop Color="#FFFFFFB0" Offset="0.50"/>
        <GradientStop Color="#FFFFFFA0" Offset="0.98"/>
        <GradientStop Color="LightGray" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="GradientDataGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
        <Setter Property="Background" Value="Transparent" />

        <!--- hide the ugly black border that occurs when datagrid gots focus: -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Grid Background="{TemplateBinding Background}" Margin="0,0,0,0">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource brGradientDataGridCell}" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GradientDataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="RowHeight" Value="25" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="CellStyle" Value="{DynamicResource GradientDataGridCell}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <Style x:Key="GradientEditableDataGrid" BasedOn="{StaticResource GradientDataGrid}" TargetType="{x:Type DataGrid}">
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <!-- Your DataGrid Cell style definition goes here -->
                    <!-- Single Click Editing -->
                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridCellPreviewMouseLeftButtonDown" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Flat Button Style -->

    <SolidColorBrush x:Key="DefaultBrush" Color="Transparent" />
    <SolidColorBrush x:Key="HighlightBrush" Color="Transparent" />
    <SolidColorBrush x:Key="PressedBrush" Color="Transparent" />

    <Style TargetType="Button" x:Key="bFlatImage">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource DefaultBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="0">
                        <ContentControl Content="{TemplateBinding Content}" KeyboardNavigation.IsTabStop="False" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- End Flat Button Style -->

    <Style TargetType="ItemsControl">
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
    </Style>

    <Style x:Key="HyperLinkSmall" TargetType="Button">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="#202020"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel Orientation="Horizontal" Margin="0">
                        <TextBlock
                                Text="{TemplateBinding Content}"  
                                TextDecorations="Underline"
                                FontWeight="{TemplateBinding FontWeight}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                Background="{TemplateBinding Background}" Margin="0,0,0,0" Padding="0" VerticalAlignment="Top" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Image x:Shared="False" x:Key="image/10x10/go2" Source="pack://application:,,,/WpfTools4;component/Images/10x10/go.png" SnapsToDevicePixels="True" Width="10" Height="10" />
    <Style x:Key="HyperLinkSmallGO" TargetType="Button">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="#202020"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel Orientation="Horizontal" Margin="0" Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{StaticResource image/10x10/go2}"  />
                        <TextBlock  
                                Text="{TemplateBinding Content}" FontSize="11" TextDecorations="Underline"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Margin="0,0,3,0" Padding="3,5,0,0" VerticalAlignment="Top" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Image x:Shared="False" x:Key="image/10x10/delete2" Source="pack://application:,,,/WpfTools4;component/Images/10x10/delete.png" SnapsToDevicePixels="True" Width="10" Height="10" />
    <Style x:Key="HyperLinkSmallDELETE" TargetType="Button">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="#202020"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel Orientation="Horizontal" Margin="0" Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{StaticResource image/10x10/delete2}"  />
                        <TextBlock  
                                Text="{TemplateBinding Content}" FontSize="11" TextDecorations="Underline"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Margin="0,0,3,0" Padding="3,5,0,0" VerticalAlignment="Top" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Image x:Shared="False" x:Key="image/10x10/remove2" Source="pack://application:,,,/WpfTools4;component/Images/10x10/remove.png" SnapsToDevicePixels="True" Width="10" Height="10" />
    <Style x:Key="HyperLinkSmallREMOVE" TargetType="Button">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="#202020"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel Orientation="Horizontal" Margin="0" Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{StaticResource image/10x10/remove2}"  />
                        <TextBlock  
                                Text="{TemplateBinding Content}" FontSize="11" TextDecorations="Underline"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Margin="0,0,3,0" Padding="3,5,0,0" VerticalAlignment="Top" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HyperLinkSmallImage" TargetType="Button">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="#202020"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Opacity" Value="0.99"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel Orientation="Horizontal" Margin="0" Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}"  />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ItemsControl" x:Key="ItemsControlHorizontal">
        <Setter Property="ItemsControl.ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ItemsControl" x:Key="ItemsControlHorizontal2Cols">
        <Setter Property="ItemsControl.ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="2" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ItemsControl" x:Key="ItemsControlHorizontal3Cols">
        <Setter Property="ItemsControl.ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="3" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox" x:Key="ListBoxHorizontal">
        <Setter Property="ListBox.ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="CheckBox" x:Key="CheckBoxHighlightedBold">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Background" Value="Yellow" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="CheckBox" x:Key="CheckBoxHighlightedBoldRed">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="Background" Value="Yellow" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="CheckBox" x:Key="CheckBoxHighlightedBoldBlue">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="Blue" />
                <Setter Property="Background" Value="Yellow" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <LinearGradientBrush x:Key="brLbItemYellowCheckGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFE6" Offset="0"/>
        <GradientStop Color="#FFFFFFD6" Offset="0.49"/>
        <GradientStop Color="#FFFFFFB0" Offset="0.50"/>
        <GradientStop Color="#FFFFFFA0" Offset="1"/>
    </LinearGradientBrush>
    <Style TargetType="ListBoxItem" x:Key="lbItemYellowCheckGradient">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <StackPanel Name="SP" Orientation="Horizontal" Cursor="Hand" Margin="0,0,15,0">
                        <ContentPresenter Name="Image"  Content="{StaticResource image/16x16/NONE}" Margin="5,0,0,0" />
                        <ContentPresenter Name="TB" Margin="5,0,0,0" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Image" Property="Content" Value="{StaticResource image/16x16/OK}" />
                            <Setter TargetName="SP" Property="Background" Value="{StaticResource brLbItemYellowCheckGradient}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter TargetName="Image" Property="Content" Value="{StaticResource image/16x16/NONE}" />
                            <Setter TargetName="SP" Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ListBox" x:Key="lbGreenCheckGradient">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="Transparent" />
        </Style.Resources>
        <Setter Property="ItemContainerStyle" Value="{StaticResource lbItemYellowCheckGradient}" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <Style TargetType="ListBox" x:Key="lbGreenCheckGradientHorizontal" BasedOn="{StaticResource lbGreenCheckGradient}">
        <Setter Property="ListBox.ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="lbItemYellowCheck">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <StackPanel Name="SP" Orientation="Horizontal" Cursor="Hand" Margin="0,0,15,0">
                        <ContentPresenter Name="Image"  Content="{StaticResource image/16x16/NONE}" />
                        <ContentPresenter Margin="5,0,0,0" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Image" Property="Content" Value="{StaticResource image/16x16/OK}" />
                            <Setter TargetName="SP" Property="Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter TargetName="Image" Property="Content" Value="{StaticResource image/16x16/NONE}" />
                            <Setter TargetName="SP" Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ListBox" x:Key="lbGreenCheck">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="Transparent" />
        </Style.Resources>
        <Setter Property="ItemContainerStyle" Value="{StaticResource lbItemYellowCheck}" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <Style TargetType="ListBox" x:Key="lbGreenCheckHorizontal" BasedOn="{StaticResource lbGreenCheck}">
        <Setter Property="ListBox.ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="brSolidGreen" Color="#FF00BB00" />
    <LinearGradientBrush x:Key="brGradientGreen" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF8FD488" Offset="0"/>
        <GradientStop Color="#FF5FC64F" Offset="0.50"/>
        <GradientStop Color="#FF2AA200" Offset="0.50"/>
        <GradientStop Color="#FF116A00" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="brSolidRed" Color="#FFC50000" />
    <LinearGradientBrush x:Key="brGradientRed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD28785" Offset="0"/>
        <GradientStop Color="#FFC85B57" Offset="0.50"/>
        <GradientStop Color="#FFA22115" Offset="0.50"/>
        <GradientStop Color="#FF650700" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="brSolidLightGray" Color="#FFD2D2D2" />
    <LinearGradientBrush x:Key="brGradientLightGray" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD2D2D2" Offset="0"/>
        <GradientStop Color="#FFB8B8B8" Offset="0.50"/>
        <GradientStop Color="#FF929292" Offset="0.51"/>
        <GradientStop Color="#FF555555" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="brGradientSuperLightGray" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#2FF6F6F6" Offset="0"/>
        <GradientStop Color="#2FF0F0F0" Offset="0.50"/>
        <GradientStop Color="#2FC6C6C6" Offset="0.51"/>
        <GradientStop Color="#2FB6B6B6" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="brGradientLightGrayInverse" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#6FD2D2D2" Offset="1"/>
        <GradientStop Color="#6FB8B8B8" Offset="0.51"/>
        <GradientStop Color="#6F929292" Offset="0.50"/>
        <GradientStop Color="#6F555555" Offset="0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="brGradientSuperLightGrayInverse" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#2FD2D2D2" Offset="1"/>
        <GradientStop Color="#2FB8B8B8" Offset="0.51"/>
        <GradientStop Color="#0F929292" Offset="0.50"/>
        <GradientStop Color="#0F555555" Offset="0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="brGradientWhiteInverse" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#6FD2D2D2" Offset="1"/>
        <GradientStop Color="#6FB8B8B8" Offset="0.51"/>
        <GradientStop Color="#3F929292" Offset="0.50"/>
        <GradientStop Color="#3F555555" Offset="0"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="brSolidGray" Color="#FF444444" />
    <LinearGradientBrush x:Key="brGradientGray" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF505050" Offset="0"/>
        <GradientStop Color="#FF404040" Offset="0.45"/>
        <GradientStop Color="#FF303030" Offset="0.55"/>
        <GradientStop Color="#FF101010" Offset="1"/>
    </LinearGradientBrush>



    <Style x:Key="cpGlowImage" TargetType="ContentPresenter">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="2.0" Opacity="0" ShadowDepth="0" Color="White" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Effect).Opacity" From="0.0" To="1.0" Duration="0:0:0.1" AutoReverse="False" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Effect).Opacity" From="1.0" To="0.0" Duration="0:0:0.1" AutoReverse="False" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="HyperLinkGlowImage" TargetType="Button">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="#202020"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Opacity" Value="0.99"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter Content="{TemplateBinding Content}" Style="{StaticResource cpGlowImage}"  />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HyperLinkCheckBoxImage" TargetType="CheckBox">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel>
                        <ContentPresenter Content="{TemplateBinding Content}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HyperLinkCheckBoxGlowImage" TargetType="CheckBox">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel>
                        <ContentPresenter Style="{StaticResource cpGlowImage}" Content="{TemplateBinding Content}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="brLbItemYellowCheckHardGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFF6" Offset="0"/>
        <GradientStop Color="#FFFFFFF6" Offset="0.50"/>
        <GradientStop Color="#FFFFFFA0" Offset="0.51"/>
        <GradientStop Color="#FFFFFF70" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="brLbItemYellowCheckHardGradientInverse" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFF6" Offset="1"/>
        <GradientStop Color="#FFFFFFF6" Offset="0.51"/>
        <GradientStop Color="#FFFFFF70" Offset="0.50"/>
        <GradientStop Color="#FFFFFF50" Offset="0"/>
    </LinearGradientBrush>

    <Style x:Key="lbRadioButtonListHorizontal" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Background="Transparent" Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}" >
                    <Setter Property="Margin" Value="2" />
                    <Setter Property="Tag" Value="{Binding Name}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border Name="Border" BorderThickness="1" BorderBrush="Transparent" Background="Transparent" CornerRadius="13" Padding="8,1,5,0" ToolTip="{Binding Tag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}">
                                    <RadioButton Name="rb" Focusable="False" IsHitTestVisible="False" IsChecked="{TemplateBinding IsSelected}" VerticalAlignment="Center" VerticalContentAlignment="Center">
                                        <ContentPresenter />
                                    </RadioButton>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource brLbItemYellowCheckHardGradient}" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="#c6c6c6" />
                                        <Setter TargetName="rb" Property="Foreground" Value="Blue" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border BorderThickness="0" Padding="0" BorderBrush="Transparent" Background="Transparent" Name="Bd" SnapsToDevicePixels="True">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="lbRadioButtonListHorizontalSmall" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Background="Transparent" Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}" >
                    <Setter Property="Margin" Value="1" />
                    <Setter Property="FontSize" Value="7" />
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Tag" Value="{Binding Name}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border Name="Border" BorderThickness="1" BorderBrush="{DynamicResource brGradientSuperLightGrayInverse}" Background="{DynamicResource brGradientSuperLightGray}" CornerRadius="7" Padding="3,1,3,1" ToolTip="{Binding Tag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}">
                                    <TextBlock Name="rb" Focusable="False" IsHitTestVisible="False" VerticalAlignment="Center">
                                        <ContentPresenter />
                                    </TextBlock>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource brLbItemYellowCheckHardGradient}" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource brGradientLightGrayInverse}" />
                                        <Setter TargetName="rb" Property="Foreground" Value="DarkRed" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border BorderThickness="0" Padding="0" BorderBrush="Transparent" Background="Transparent" Name="Bd" SnapsToDevicePixels="True">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>