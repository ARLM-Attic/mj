//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcTools.Views.Shared
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using System.Collections;
    using System.Collections.Specialized;
    using System.ComponentModel.DataAnnotations;
    using System.Configuration;
    using System.Text;
    using System.Text.RegularExpressions;
    using System.Web.Caching;
    using System.Web.DynamicData;
    using System.Web.SessionState;
    using System.Web.Profile;
    using System.Web.UI.WebControls;
    using System.Web.UI.WebControls.WebParts;
    using System.Web.UI.HtmlControls;
    using System.Xml.Linq;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MvcRazorClassGenerator", "1.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Shared/JQueryHelper.cshtml")]
    public class _Page_Views_Shared_JQueryHelper_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {
#line hidden

        public _Page_Views_Shared_JQueryHelper_cshtml()
        {
        }
        protected System.Web.HttpApplication ApplicationInstance
        {
            get
            {
                return ((System.Web.HttpApplication)(Context.ApplicationInstance));
            }
        }
        public override void Execute()
        {
WriteLiteral("<script type=\"text/javascript\">\r\n\r\n    // Enthält allg. Hilfsfunktionen für JQuer" +
"y Anwendungen\r\n\r\n    // Für die Werktagsermittlung weiter unten\r\n    var listeFe" +
"steFeiertage = [\r\n      [1, 1],\r\n      [5, 1],\r\n      [10, 3],\r\n      [12, 25],\r" +
"\n      [12, 26]\r\n    ];\r\n\r\n    // Bindet einen Script-Block im Page-Head ein\r\n  " +
"  function includeJS(scriptPath) {\r\n        var script = document.createElement(" +
"\'script\');\r\n        script.type = \'text/javascript\';\r\n        script.src = scrip" +
"tPath;\r\n        $(\"head\").append(script);\r\n    }\r\n\r\n    // Prüft, ob die Datumsk" +
"omponente des angegebenen timestamps dem heutigen Datum entspricht\r\n    function" +
" IstHeute(zeitstempel) {\r\n        var jetzt = new Date();\r\n        if ((jetzt.ge" +
"tFullYear() == zeitstempel.getFullYear()) && (jetzt.getMonth() == zeitstempel.ge" +
"tMonth()) && (jetzt.getDate() == zeitstempel.getDate())) {\r\n            return t" +
"rue;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Prüft, ob der verwendete" +
" Browser LocalStorage unterstützt\r\n    function BrowserSupportsLocalStorage() {\r" +
"\n        if (!Modernizr.localstorage) {\r\n            return false;\r\n        }\r\n " +
"       return true;\r\n    }\r\n\r\n    // Prüft, ob der verwendete Browser JSON-Struk" +
"turen unterstützt\r\n    function BrowserSupportsJSON() {\r\n        if (typeof JSON" +
" == \"undefined\") {\r\n            return false;\r\n        }\r\n        return true;\r\n" +
"    }\r\n\r\n    // Prüft, ob der verwendete Browser JSON-Strukturen unterstützt, un" +
"d bindet ggf. \r\n    // die JSON-Funktionalität explizit als .js-File ein, wenn i" +
"m Browser nicht vordefiniert \r\n    // (erforderlich bei alten Browsern bzw. im K" +
"ompatibilitätsmodus)\r\n    function EnsureJSONFunctionality() {\r\n        if (Brow" +
"serSupportsJSON() == false) {\r\n            includeJS(\"/ZLDMobile/Scripts/json2.j" +
"s\");\r\n        }\r\n    }\r\n\r\n    // Lädt die Daten zum angegebenen Key aus dem Loca" +
"lStorage und gibt sie zurück\r\n    function LoadFromLocalStorage(schluessel) {\r\n " +
"       return JSON.parse(localStorage.getItem(schluessel));\r\n    }\r\n\r\n    // Spe" +
"ichert/ersetzt die übergebenen Daten unter dem angegebenen Key im LocalStorage\r\n" +
"    function SaveInLocalStorage(schluessel, daten) {\r\n        localStorage.setIt" +
"em(schluessel, JSON.stringify(daten));\r\n    }\r\n\r\n    // Entfernt die Daten zum a" +
"ngegebenen Key aus dem LocalStorage\r\n    function RemoveFromLocalStorage(schlues" +
"sel) {\r\n        localStorage.removeItem(schluessel);\r\n    }\r\n\r\n    // Compare-Fu" +
"nktion für Sortierung nach Element-values\r\n    function SortSelectOptionsByValue" +
"(a, b) {\r\n        return (a.value > b.value) ? 1 : -1;\r\n    }\r\n\r\n    // String l" +
"inks mit angegebenem Zeichen auf die gewünschte Gesamtlänge auffüllen\r\n    funct" +
"ion PadLeft(strText, laenge, zeichen) {\r\n        var erg = strText;\r\n        for" +
" (var i = 0; i < (laenge - strText.length); i++) {\r\n            erg = zeichen + " +
"erg;\r\n        }\r\n        return erg;\r\n    }\r\n\r\n    // String recht mit angegeben" +
"em Zeichen auf die gewünschte Gesamtlänge auffüllen\r\n    function PadRight(strTe" +
"xt, laenge, zeichen) {\r\n        var erg = strText;\r\n        for (var i = 0; i < " +
"(laenge - strText.length); i++) {\r\n            erg = erg + zeichen;\r\n        }\r\n" +
"        return erg;\r\n    }\r\n\r\n    // Entfernt alle Vorkommen des angegebenen Zei" +
"chens vom Ende des Textes\r\n    function TrimEnd(strText, strZeichen) {\r\n        " +
"var s = strText;\r\n        while (s.length > 0 && s.substr(s.length - 1, 1) == st" +
"rZeichen) {\r\n            s = s.substr(0, s.length - 1);\r\n        }\r\n        retu" +
"rn s;\r\n    }\r\n\r\n    // Entfernt alle Vorkommen des angegebenen Zeichens vom Begi" +
"nn des Textes\r\n    function TrimStart(strText, strZeichen) {\r\n        var s = st" +
"rText;\r\n        while (s.length > 0 && s.substr(0, 1) == strZeichen) {\r\n        " +
"    s = s.substr(1);\r\n        }\r\n        return s;\r\n    }\r\n\r\n    // Entfernt all" +
"e Vorkommen des angegebenen Zeichens vom Beginn und Ende des Textes\r\n    functio" +
"n TrimText(strText, strZeichen) {\r\n        return TrimEnd(TrimStart(strText));\r\n" +
"    }\r\n\r\n    // Entfernt alle Nullen vom Beginn des Textes\r\n    function RemoveL" +
"eadingZeroes(strText) {\r\n        var s = strText;\r\n        while (s.length > 0 &" +
"& s.substr(0, 1) == \"0\") {\r\n            s = s.substr(1);\r\n        }\r\n        ret" +
"urn s;\r\n    }\r\n\r\n    // Gibt true zurück, wenn der Text den Filtertext enthält, " +
"sonst false\r\n    function ContainsIgnoreCase(strText, strFilter) {\r\n        retu" +
"rn (strText.toUpperCase().indexOf(strFilter.toUpperCase()) >= 0);\r\n    }\r\n\r\n    " +
"// Prüft, ob ein Control existiert\r\n    function ControlExists(controlId) {\r\n   " +
"     if ($(\"#\" + controlId).length) {\r\n            return true;\r\n        }\r\n    " +
"    return false;\r\n    }\r\n\r\n    // Prüft das Kennzeichenformat (je nach Dienstle" +
"istungsart bzw. -nummer unterschiedliche Prüfkriterien)\r\n    function CheckForma" +
"tKennzeichen(strKennz, dienstleistung) {\r\n        var expr;\r\n\r\n        switch (d" +
"ienstleistung) {\r\n            case \"6\":\r\n                // Funkennzeichen\r\n    " +
"            // --> keine Prüfung\r\n                break;\r\n            case \"573\"" +
":\r\n                // Abmeldung\r\n                expr = /^[A-ZÄÖÜ]{1,3}-[A-Z]{1," +
"2}\\d{1,4}H?$/; \r\n                if (!expr.test(strKennz)) {\r\n                  " +
"  return false;\r\n                }\r\n                break;\r\n            case \"57" +
"4\":\r\n                // Dauerkennz. Neuzul.\r\n                expr = /^[A-ZÄÖÜ]{1" +
",3}-\\d{1,18}$/;\r\n                if (!expr.test(strKennz)) {\r\n                  " +
"  return false;\r\n                }\r\n                break;\r\n            case \"58" +
"4\":\r\n                // Abmeldung außerhalb\r\n                expr = /^[A-ZÄÖÜ]{1" +
",3}-[A-Z]{1,2}\\d{1,4}H?$/;\r\n                if (!expr.test(strKennz)) {\r\n       " +
"             return false;\r\n                }\r\n                break;\r\n         " +
"   case \"588\":\r\n                // Gebrauchtzulassung\r\n                expr = /^" +
"[A-ZÄÖÜ]{1,3}-[A-Z]{1,2}\\d{1,4}H?$/;\r\n                if (!expr.test(strKennz)) " +
"{\r\n                    return false;\r\n                }\r\n                break;\r" +
"\n            case \"589\":\r\n                // Gebrauchtzul. von außerhalb\r\n      " +
"          expr = /^[A-ZÄÖÜ]{1,3}-[A-Z]{1,2}\\d{1,4}H?$/;\r\n                if (!ex" +
"pr.test(strKennz)) {\r\n                    return false;\r\n                }\r\n    " +
"            break;\r\n            case \"592\":\r\n                // Kurzzeitzulassun" +
"g\r\n                expr = /^[A-ZÄÖÜ]{1,3}-\\d{1,18}$/;\r\n                if (!expr" +
".test(strKennz)) {\r\n                    return false;\r\n                }\r\n      " +
"          break;\r\n            case \"600\":\r\n                // Zollzulassung\r\n   " +
"             expr = /^[A-ZÄÖÜ]{1,3}-[A-Z0-9]{1,18}$/;\r\n                if (!expr" +
".test(strKennz)) {\r\n                    return false;\r\n                }\r\n      " +
"          break;\r\n            case \"605\":\r\n                // Dauerkennz. verl.\r" +
"\n                expr = /^[A-ZÄÖÜ]{1,3}-\\d{1,18}$/;\r\n                if (!expr.t" +
"est(strKennz)) {\r\n                    return false;\r\n                }\r\n        " +
"        break;\r\n            case \"679\":\r\n                // Rotes Heft\r\n        " +
"        expr = /^[A-ZÄÖÜ]{1,3}-\\d{1,18}$/;\r\n                if (!expr.test(strKe" +
"nnz)) {\r\n                    return false;\r\n                }\r\n                b" +
"reak;\r\n            default:\r\n                // Standard-Kennzeichen\r\n          " +
"      expr = /^[A-ZÄÖÜ]{1,3}-[A-Z]{1,2}\\d{1,4}$/;\r\n                if (!expr.tes" +
"t(strKennz)) {\r\n                    return false;\r\n                }\r\n          " +
"      break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Prüft das Datum (" +
"string)\r\n    function CheckFormatDatum(strDatum) {\r\n        if (strDatum != null" +
" && strDatum != \"\") {\r\n            var expr = /^[0-3][0-9].[0-1][0-9].\\d{4}$/;\r\n" +
"            if (!expr.test(strDatum)) {\r\n                return false;\r\n        " +
"    }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Prüft, ob das angegebene" +
"n Datum (string) vor oder nach dem Referenzdatum (string) liegt, \r\n    // gibt 1" +
" (größer), 0 (gleich), -1 (kleiner) oder -2 (Fehler) zurück\r\n    function Vergle" +
"icheDatum(strRefDatum, strDatum) {\r\n        if (CheckFormatDatum(strRefDatum) ==" +
" false || CheckFormatDatum(strDatum) == false) {\r\n            return -2;\r\n      " +
"  }\r\n        var datePartsRef = strRefDatum.split(\".\");\r\n        var datumRef = " +
"new Date(datePartsRef[2], (datePartsRef[1] - 1), datePartsRef[0]);\r\n        var " +
"dateParts = strDatum.split(\".\");\r\n        var datum = new Date(dateParts[2], (da" +
"teParts[1] - 1), dateParts[0]);\r\n        var jahrRef = datumRef.getFullYear();\r\n" +
"        var monatRef = datumRef.getMonth();\r\n        var tagRef = datumRef.getDa" +
"te();\r\n        var jahr = datum.getFullYear();\r\n        var monat = datum.getMon" +
"th();\r\n        var tag = datum.getDate();\r\n        if (jahr == jahrRef) {\r\n     " +
"       if (monat == monatRef) {\r\n                if (tag == tagRef) {\r\n         " +
"           return 0;\r\n                } else {\r\n                    if (tag < ta" +
"gRef) {\r\n                        return -1;\r\n                    } else {\r\n     " +
"                   return 1;\r\n                    }\r\n                }\r\n        " +
"    } else {\r\n                if (monat < monatRef) {\r\n                    retur" +
"n -1;\r\n                } else {\r\n                    return 1;\r\n                " +
"}\r\n            }\r\n        } else {\r\n            if (jahr < jahrRef) {\r\n         " +
"       return -1;\r\n            } else {\r\n                return 1;\r\n            " +
"}\r\n        }\r\n    }\r\n\r\n    // div-Operation\r\n    function berechneDiv(zahl1, zah" +
"l2) {\r\n        if (zahl1 * zahl2 > 0) {\r\n            return Math.floor(zahl1 / z" +
"ahl2);\r\n        }\r\n        else {\r\n            return Math.ceil(zahl1 / zahl2);\r" +
"\n        }\r\n    }\r\n\r\n    // Erweiterte Gaußsche Osterformel\r\n    function berech" +
"neOstersonntag(jahr) {\r\n        var k = berechneDiv(jahr, 100);\r\n        var m =" +
" 15 + berechneDiv(3 * k + 3, 4) - berechneDiv(8 * k + 13, 25);\r\n        var s = " +
"2 - berechneDiv(3 * k + 3, 4);\r\n        var a = jahr % 19;\r\n        var d = (19 " +
"* a + m) % 30;\r\n        var r = berechneDiv(berechneDiv(d + a, 11), 29);\r\n      " +
"  var og = 21 + d - r;\r\n        var sz = 7 - ((jahr + berechneDiv(jahr, 4) + s) " +
"% 7);\r\n        var oe = 7 - ((og - sz) % 7);\r\n        var os = og + oe;\r\n       " +
" // Monat auch hier wieder 0..11\r\n        if (os > 31) {\r\n            return new" +
" Date(2013, 3, os - 31);\r\n        }\r\n        else {\r\n            return new Date" +
"(2013, 2, os);\r\n        }\r\n    }\r\n\r\n    // Stellt sicher, dass das angegebene Da" +
"tum kein Feiertag ist\r\n    function keinFeiertag(date) {\r\n        var jahr = dat" +
"e.getFullYear();\r\n        var monat = date.getMonth();\r\n        var tag = date.g" +
"etDate();\r\n        // statische Feiertage\r\n        for (i = 0; i < listeFesteFei" +
"ertage.length; i++) {\r\n            // getMonth liefert 0..11, deshalb -1\r\n      " +
"      if ((monat == listeFesteFeiertage[i][0] - 1)\r\n          && (tag == listeFe" +
"steFeiertage[i][1])) {\r\n                return [false, \'\'];\r\n            }\r\n    " +
"    }\r\n        // dynamische Feiertage\r\n        // Ostersonntag\r\n        var ost" +
"ersonntag = berechneOstersonntag(jahr);\r\n        if ((monat == ostersonntag.getM" +
"onth())\r\n          && (tag == ostersonntag.getDate())) {\r\n            return [fa" +
"lse, \'\'];\r\n        }\r\n        // Karfreitag\r\n        var feiertag = new Date(ost" +
"ersonntag.getFullYear(), ostersonntag.getMonth(), ostersonntag.getDate());\r\n    " +
"    feiertag.setDate(ostersonntag.getDate() - 2);\r\n        if ((monat == feierta" +
"g.getMonth())\r\n          && (tag == feiertag.getDate())) {\r\n            return [" +
"false, \'\'];\r\n        }\r\n        // Ostermontag\r\n        feiertag = new Date(oste" +
"rsonntag.getFullYear(), ostersonntag.getMonth(), ostersonntag.getDate());\r\n     " +
"   feiertag.setDate(ostersonntag.getDate() + 1);\r\n        if ((monat == feiertag" +
".getMonth())\r\n              && (tag == feiertag.getDate())) {\r\n            retur" +
"n [false, \'\'];\r\n        }\r\n        // Christi Himmelfahrt\r\n        feiertag = ne" +
"w Date(ostersonntag.getFullYear(), ostersonntag.getMonth(), ostersonntag.getDate" +
"());\r\n        feiertag.setDate(ostersonntag.getDate() + 39);\r\n        if ((monat" +
" == feiertag.getMonth())\r\n              && (tag == feiertag.getDate())) {\r\n     " +
"       return [false, \'\'];\r\n        }\r\n        // Pfingstmontag\r\n        feierta" +
"g = new Date(ostersonntag.getFullYear(), ostersonntag.getMonth(), ostersonntag.g" +
"etDate());\r\n        feiertag.setDate(ostersonntag.getDate() + 50);\r\n        if (" +
"(monat == feiertag.getMonth())\r\n              && (tag == feiertag.getDate())) {\r" +
"\n            return [false, \'\'];\r\n        }\r\n        return [true, \'\'];\r\n    }\r\n" +
"\r\n    // Stellt sicher, dass das angegebene Datum kein Samstag oder Sonntag ist\r" +
"\n    function istKeinWochenende(date) {\r\n        var wochentag = date.getDay();\r" +
"\n        if ((wochentag == 0) || (wochentag == 6)) {\r\n            return [false," +
" \'\'];\r\n        }\r\n        return [true, \'\'];\r\n    }\r\n\r\n    // Werktagsermittlung" +
" (verarbeitet Dates oder Texte im Format \"TTMMJJ\")\r\n    function nurWerktage(dat" +
"e) {\r\n        if ((date != null) && (date != \"\")) {\r\n            var tempDate;\r\n" +
"            if (date instanceof Date) {\r\n                tempDate = date;\r\n     " +
"       }\r\n            else {\r\n                jahr = 2000 + parseInt(date.substr" +
"ing(4, 6), 10);\r\n                monat = parseInt(date.substring(2, 4), 10) - 1;" +
"\r\n                tag = parseInt(date.substring(0, 2), 10);\r\n                tem" +
"pDate = new Date(jahr, monat, tag);\r\n            }\r\n            var keinWochenen" +
"de = istKeinWochenende(tempDate);\r\n            if (keinWochenende[0]) {\r\n       " +
"         return keinFeiertag(tempDate);\r\n            } else {\r\n                r" +
"eturn keinWochenende;\r\n            }\r\n        }\r\n        return [true, \'\'];\r\n   " +
" }\r\n\r\n </script>");


        }
    }
}
