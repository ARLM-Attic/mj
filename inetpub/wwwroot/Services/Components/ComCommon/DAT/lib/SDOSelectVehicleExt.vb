'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.261
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace SilverDAT
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", ConfigurationName:="SilverDAT.SDOSelectVehicleExtPortType")>  _
    Friend Interface SDOSelectVehicleExtPortType
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function getVersion(ByVal request As SilverDAT.getVersionRequest) As SilverDAT.getVersionResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetVersion(ByVal request As SilverDAT.getVersionRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetVersion(ByVal result As System.IAsyncResult) As SilverDAT.getVersionResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getVehicleTypes(ByVal request As SilverDAT.getVehicleTypesRequest) As SilverDAT.getVehicleTypesResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetVehicleTypes(ByVal request As SilverDAT.getVehicleTypesRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetVehicleTypes(ByVal result As System.IAsyncResult) As SilverDAT.getVehicleTypesResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getManufacturers(ByVal request As SilverDAT.getManufacturersRequest) As SilverDAT.getManufacturersResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetManufacturers(ByVal request As SilverDAT.getManufacturersRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetManufacturers(ByVal result As System.IAsyncResult) As SilverDAT.getManufacturersResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getBaseModels(ByVal request As SilverDAT.getBaseModelsRequest) As SilverDAT.getBaseModelsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetBaseModels(ByVal request As SilverDAT.getBaseModelsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetBaseModels(ByVal result As System.IAsyncResult) As SilverDAT.getBaseModelsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getSubModels(ByVal request As SilverDAT.getSubModelsRequest) As SilverDAT.getSubModelsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetSubModels(ByVal request As SilverDAT.getSubModelsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetSubModels(ByVal result As System.IAsyncResult) As SilverDAT.getSubModelsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getClassificationGroups(ByVal request As SilverDAT.getClassificationGroupsRequest) As SilverDAT.getClassificationGroupsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetClassificationGroups(ByVal request As SilverDAT.getClassificationGroupsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetClassificationGroups(ByVal result As System.IAsyncResult) As SilverDAT.getClassificationGroupsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getEngineOptions(ByVal request As SilverDAT.getEngineOptionsRequest) As SilverDAT.getEngineOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetEngineOptions(ByVal request As SilverDAT.getEngineOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetEngineOptions(ByVal result As System.IAsyncResult) As SilverDAT.getEngineOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getBodyOptions(ByVal request As SilverDAT.getBodyOptionsRequest) As SilverDAT.getBodyOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetBodyOptions(ByVal request As SilverDAT.getBodyOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetBodyOptions(ByVal result As System.IAsyncResult) As SilverDAT.getBodyOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getWheelbaseOptions(ByVal request As SilverDAT.getWheelbaseOptionsRequest) As SilverDAT.getWheelbaseOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetWheelbaseOptions(ByVal request As SilverDAT.getWheelbaseOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetWheelbaseOptions(ByVal result As System.IAsyncResult) As SilverDAT.getWheelbaseOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getPropulsionOptions(ByVal request As SilverDAT.getPropulsionOptionsRequest) As SilverDAT.getPropulsionOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetPropulsionOptions(ByVal request As SilverDAT.getPropulsionOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetPropulsionOptions(ByVal result As System.IAsyncResult) As SilverDAT.getPropulsionOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getDrivingCabOptions(ByVal request As SilverDAT.getDrivingCabOptionsRequest) As SilverDAT.getDrivingCabOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetDrivingCabOptions(ByVal request As SilverDAT.getDrivingCabOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetDrivingCabOptions(ByVal result As System.IAsyncResult) As SilverDAT.getDrivingCabOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getMaximumTotalWeightOptions(ByVal request As SilverDAT.getMaximumTotalWeightOptionsRequest) As SilverDAT.getMaximumTotalWeightOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetMaximumTotalWeightOptions(ByVal request As SilverDAT.getMaximumTotalWeightOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetMaximumTotalWeightOptions(ByVal result As System.IAsyncResult) As SilverDAT.getMaximumTotalWeightOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getConstructionOptions(ByVal request As SilverDAT.getConstructionOptionsRequest) As SilverDAT.getConstructionOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetConstructionOptions(ByVal request As SilverDAT.getConstructionOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetConstructionOptions(ByVal result As System.IAsyncResult) As SilverDAT.getConstructionOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getSuspensionOptions(ByVal request As SilverDAT.getSuspensionOptionsRequest) As SilverDAT.getSuspensionOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetSuspensionOptions(ByVal request As SilverDAT.getSuspensionOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetSuspensionOptions(ByVal result As System.IAsyncResult) As SilverDAT.getSuspensionOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getAxleOptions(ByVal request As SilverDAT.getAxleOptionsRequest) As SilverDAT.getAxleOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetAxleOptions(ByVal request As SilverDAT.getAxleOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetAxleOptions(ByVal result As System.IAsyncResult) As SilverDAT.getAxleOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getEquipmentLineOptions(ByVal request As SilverDAT.getEquipmentLineOptionsRequest) As SilverDAT.getEquipmentLineOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetEquipmentLineOptions(ByVal request As SilverDAT.getEquipmentLineOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetEquipmentLineOptions(ByVal result As System.IAsyncResult) As SilverDAT.getEquipmentLineOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getGearingOptions(ByVal request As SilverDAT.getGearingOptionsRequest) As SilverDAT.getGearingOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetGearingOptions(ByVal request As SilverDAT.getGearingOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetGearingOptions(ByVal result As System.IAsyncResult) As SilverDAT.getGearingOptionsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function compileDatECode(ByVal request As SilverDAT.compileDatECodeRequest) As SilverDAT.compileDatECodeResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegincompileDatECode(ByVal request As SilverDAT.compileDatECodeRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndcompileDatECode(ByVal result As System.IAsyncResult) As SilverDAT.compileDatECodeResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getPriceDiscoveryContainers(ByVal request As SilverDAT.getPriceDiscoveryContainersRequest) As SilverDAT.getPriceDiscoveryContainersResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetPriceDiscoveryContainers(ByVal request As SilverDAT.getPriceDiscoveryContainersRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetPriceDiscoveryContainers(ByVal result As System.IAsyncResult) As SilverDAT.getPriceDiscoveryContainersResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getPriceDiscoveryContainers1(ByVal request As SilverDAT.getPriceDiscoveryContainersRequest1) As SilverDAT.getPriceDiscoveryContainersResponse1
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetPriceDiscoveryContainers1(ByVal request As SilverDAT.getPriceDiscoveryContainersRequest1, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetPriceDiscoveryContainers1(ByVal result As System.IAsyncResult) As SilverDAT.getPriceDiscoveryContainersResponse1
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getPriceDiscoveryConstructionYears(ByVal request As SilverDAT.getPriceDiscoveryConstructionYearsRequest) As SilverDAT.getPriceDiscoveryConstructionYearsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetPriceDiscoveryConstructionYears(ByVal request As SilverDAT.getPriceDiscoveryConstructionYearsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetPriceDiscoveryConstructionYears(ByVal result As System.IAsyncResult) As SilverDAT.getPriceDiscoveryConstructionYearsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getConstructionPeriod(ByVal request As SilverDAT.getConstructionPeriodRequest) As SilverDAT.getConstructionPeriodResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetConstructionPeriod(ByVal request As SilverDAT.getConstructionPeriodRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetConstructionPeriod(ByVal result As System.IAsyncResult) As SilverDAT.getConstructionPeriodResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function mapEdvCode2ValueCode(ByVal request As SilverDAT.mapEdvCode2ValueCodeRequest) As SilverDAT.mapEdvCode2ValueCodeResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginmapEdvCode2ValueCode(ByVal request As SilverDAT.mapEdvCode2ValueCodeRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndmapEdvCode2ValueCode(ByVal result As System.IAsyncResult) As SilverDAT.mapEdvCode2ValueCodeResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function kba2ValueCode(ByVal request As SilverDAT.kba2ValueCodeRequest) As SilverDAT.kba2ValueCodeResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function Beginkba2ValueCode(ByVal request As SilverDAT.kba2ValueCodeRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function Endkba2ValueCode(ByVal result As System.IAsyncResult) As SilverDAT.kba2ValueCodeResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function kba2ValueCodeWithDesc(ByVal request As SilverDAT.kba2ValueCodeWithDescRequest) As SilverDAT.kba2ValueCodeWithDescResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function Beginkba2ValueCodeWithDesc(ByVal request As SilverDAT.kba2ValueCodeWithDescRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function Endkba2ValueCodeWithDesc(ByVal result As System.IAsyncResult) As SilverDAT.kba2ValueCodeWithDescResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function getPriceDiscoveryLabels(ByVal request As SilverDAT.getPriceDiscoveryLabelsRequest) As SilverDAT.getPriceDiscoveryLabelsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetPriceDiscoveryLabels(ByVal request As SilverDAT.getPriceDiscoveryLabelsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetPriceDiscoveryLabels(ByVal result As System.IAsyncResult) As SilverDAT.getPriceDiscoveryLabelsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function valueCode2Description(ByVal request As SilverDAT.valueCode2DescriptionRequest) As SilverDAT.valueCode2DescriptionResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginvalueCode2Description(ByVal request As SilverDAT.valueCode2DescriptionRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndvalueCode2Description(ByVal result As System.IAsyncResult) As SilverDAT.valueCode2DescriptionResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function date2ConstructionTime(ByVal request As SilverDAT.date2ConstructionTimeRequest) As SilverDAT.date2ConstructionTimeResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function Begindate2ConstructionTime(ByVal request As SilverDAT.date2ConstructionTimeRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function Enddate2ConstructionTime(ByVal result As System.IAsyncResult) As SilverDAT.date2ConstructionTimeResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodeAvKeyContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainerExtendedBean)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(DatECodePlusContainer)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyStringValueStringPair)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(keyIntValueStringPair))>  _
        Function constructionTime2Date(ByVal request As SilverDAT.constructionTime2DateRequest) As SilverDAT.constructionTime2DateResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginconstructionTime2Date(ByVal request As SilverDAT.constructionTime2DateRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndconstructionTime2Date(ByVal result As System.IAsyncResult) As SilverDAT.constructionTime2DateResponse
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getVersion", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getVersionRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getVersionResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getVersionResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getVersionReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getVersionReturn As String)
            MyBase.New
            Me.getVersionReturn = getVersionReturn
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.dat.de/u3/services/SDOSelectVehicleExt")>  _
    Partial Public Class keyIntValueStringPair
        
        Private keyField As Integer
        
        Private valueField As String
        
        '''<remarks/>
        Public Property key() As Integer
            Get
                Return Me.keyField
            End Get
            Set
                Me.keyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.dat.de/u3/services/SDOSelectVehicleExt")>  _
    Partial Public Class DatECodeDescriptionContainerBean
        
        Private clfAvArrayField() As DatECodeAvKeyContainer
        
        Private containerDescrField As String
        
        Private fzaDescrField As String
        
        Private hstDescrField As String
        
        Private htDescrField As String
        
        Private utDescrField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property clfAvArray() As DatECodeAvKeyContainer()
            Get
                Return Me.clfAvArrayField
            End Get
            Set
                Me.clfAvArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property containerDescr() As String
            Get
                Return Me.containerDescrField
            End Get
            Set
                Me.containerDescrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property fzaDescr() As String
            Get
                Return Me.fzaDescrField
            End Get
            Set
                Me.fzaDescrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property hstDescr() As String
            Get
                Return Me.hstDescrField
            End Get
            Set
                Me.hstDescrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property htDescr() As String
            Get
                Return Me.htDescrField
            End Get
            Set
                Me.htDescrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property utDescr() As String
            Get
                Return Me.utDescrField
            End Get
            Set
                Me.utDescrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.dat.de/u3/services/SDOSelectVehicleExt")>  _
    Partial Public Class DatECodeAvKeyContainer
        
        Private avDescrField As String
        
        Private avKeyField As System.Nullable(Of Decimal)
        
        Private clfGrpKeyField As System.Nullable(Of Decimal)
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property avDescr() As String
            Get
                Return Me.avDescrField
            End Get
            Set
                Me.avDescrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property avKey() As System.Nullable(Of Decimal)
            Get
                Return Me.avKeyField
            End Get
            Set
                Me.avKeyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property clfGrpKey() As System.Nullable(Of Decimal)
            Get
                Return Me.clfGrpKeyField
            End Get
            Set
                Me.clfGrpKeyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.dat.de/u3/services/SDOSelectVehicleExt")>  _
    Partial Public Class PriceDiscoveryLabelsBean
        
        Private fzaDescrField As String
        
        Private hstDescrField As String
        
        Private htDescrField As String
        
        Private utDescrField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property fzaDescr() As String
            Get
                Return Me.fzaDescrField
            End Get
            Set
                Me.fzaDescrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property hstDescr() As String
            Get
                Return Me.hstDescrField
            End Get
            Set
                Me.hstDescrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property htDescr() As String
            Get
                Return Me.htDescrField
            End Get
            Set
                Me.htDescrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property utDescr() As String
            Get
                Return Me.utDescrField
            End Get
            Set
                Me.utDescrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.dat.de/u3/services/SDOSelectVehicleExt")>  _
    Partial Public Class UtvKeyContainer
        
        Private clfAvArrayField() As DatECodeAvKeyContainer
        
        Private utvKeyField As System.Nullable(Of Decimal)
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property clfAvArray() As DatECodeAvKeyContainer()
            Get
                Return Me.clfAvArrayField
            End Get
            Set
                Me.clfAvArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property utvKey() As System.Nullable(Of Decimal)
            Get
                Return Me.utvKeyField
            End Get
            Set
                Me.utvKeyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.dat.de/u3/services/SDOSelectVehicleExt")>  _
    Partial Public Class KeyContainer
        
        Private descriptionField As String
        
        Private keyField As System.Nullable(Of Decimal)
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property key() As System.Nullable(Of Decimal)
            Get
                Return Me.keyField
            End Get
            Set
                Me.keyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.dat.de/u3/services/SDOSelectVehicleExt")>  _
    Partial Public Class DatECodePlusContainerExtendedBean
        
        Private containerField As String
        
        Private datECodeField As String
        
        Private fzaField As KeyContainer
        
        Private hstField As KeyContainer
        
        Private htField As KeyContainer
        
        Private utField As KeyContainer
        
        Private utvField As UtvKeyContainer
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property container() As String
            Get
                Return Me.containerField
            End Get
            Set
                Me.containerField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property datECode() As String
            Get
                Return Me.datECodeField
            End Get
            Set
                Me.datECodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property fza() As KeyContainer
            Get
                Return Me.fzaField
            End Get
            Set
                Me.fzaField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property hst() As KeyContainer
            Get
                Return Me.hstField
            End Get
            Set
                Me.hstField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property ht() As KeyContainer
            Get
                Return Me.htField
            End Get
            Set
                Me.htField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property ut() As KeyContainer
            Get
                Return Me.utField
            End Get
            Set
                Me.utField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property utv() As UtvKeyContainer
            Get
                Return Me.utvField
            End Get
            Set
                Me.utvField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.dat.de/u3/services/SDOSelectVehicleExt")>  _
    Partial Public Class DatECodePlusContainer
        
        Private containerField As String
        
        Private datECodeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property container() As String
            Get
                Return Me.containerField
            End Get
            Set
                Me.containerField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property datECode() As String
            Get
                Return Me.datECodeField
            End Get
            Set
                Me.datECodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.dat.de/u3/services/SDOSelectVehicleExt")>  _
    Partial Public Class datECodeConstructionTimeContainerBean
        
        Private constructionTimeField As Integer
        
        Private containerField As String
        
        Private datECodeField As String
        
        '''<remarks/>
        Public Property constructionTime() As Integer
            Get
                Return Me.constructionTimeField
            End Get
            Set
                Me.constructionTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property container() As String
            Get
                Return Me.containerField
            End Get
            Set
                Me.containerField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property datECode() As String
            Get
                Return Me.datECodeField
            End Get
            Set
                Me.datECodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.dat.de/u3/services/SDOSelectVehicleExt")>  _
    Partial Public Class constructionTimePeriod
        
        Private constructionTimeMaxField As Integer
        
        Private constructionTimeMinField As Integer
        
        '''<remarks/>
        Public Property constructionTimeMax() As Integer
            Get
                Return Me.constructionTimeMaxField
            End Get
            Set
                Me.constructionTimeMaxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property constructionTimeMin() As Integer
            Get
                Return Me.constructionTimeMinField
            End Get
            Set
                Me.constructionTimeMinField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.dat.de/u3/services/SDOSelectVehicleExt")>  _
    Partial Public Class keyStringValueStringPair
        
        Private keyField As String
        
        Private valueField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property key() As String
            Get
                Return Me.keyField
            End Get
            Set
                Me.keyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getVehicleTypes", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getVehicleTypesRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public restriction As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal restriction As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.restriction = restriction
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getVehicleTypesResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getVehicleTypesResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getVehicleTypesReturn() As keyIntValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getVehicleTypesReturn() As keyIntValueStringPair)
            MyBase.New
            Me.getVehicleTypesReturn = getVehicleTypesReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getManufacturers", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getManufacturersRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public restriction As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public vehicleType As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal restriction As Integer, ByVal vehicleType As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.restriction = restriction
            Me.vehicleType = vehicleType
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getManufacturersResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getManufacturersResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getManufacturersReturn() As keyIntValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getManufacturersReturn() As keyIntValueStringPair)
            MyBase.New
            Me.getManufacturersReturn = getManufacturersReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getBaseModels", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getBaseModelsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public restriction As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public vehicleType As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public manufacturer As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public constructionTimeFrom As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public constructionTimeTo As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal restriction As Integer, ByVal vehicleType As Integer, ByVal manufacturer As Integer, ByVal constructionTimeFrom As Integer, ByVal constructionTimeTo As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.restriction = restriction
            Me.vehicleType = vehicleType
            Me.manufacturer = manufacturer
            Me.constructionTimeFrom = constructionTimeFrom
            Me.constructionTimeTo = constructionTimeTo
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getBaseModelsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getBaseModelsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getBaseModelsReturn() As keyIntValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getBaseModelsReturn() As keyIntValueStringPair)
            MyBase.New
            Me.getBaseModelsReturn = getBaseModelsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSubModels", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getSubModelsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public restriction As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public vehicleType As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public manufacturer As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public baseModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public constructionTimeFrom As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public constructionTimeTo As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal restriction As Integer, ByVal vehicleType As Integer, ByVal manufacturer As Integer, ByVal baseModel As Integer, ByVal constructionTimeFrom As Integer, ByVal constructionTimeTo As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.restriction = restriction
            Me.vehicleType = vehicleType
            Me.manufacturer = manufacturer
            Me.baseModel = baseModel
            Me.constructionTimeFrom = constructionTimeFrom
            Me.constructionTimeTo = constructionTimeTo
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSubModelsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getSubModelsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getSubModelsReturn() As keyIntValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getSubModelsReturn() As keyIntValueStringPair)
            MyBase.New
            Me.getSubModelsReturn = getSubModelsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getClassificationGroups", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getClassificationGroupsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public vehicleType As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public manufacturer As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public baseModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public subModel As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal vehicleType As Integer, ByVal manufacturer As Integer, ByVal baseModel As Integer, ByVal subModel As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.vehicleType = vehicleType
            Me.manufacturer = manufacturer
            Me.baseModel = baseModel
            Me.subModel = subModel
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getClassificationGroupsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getClassificationGroupsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getClassificationGroupsReturn() As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getClassificationGroupsReturn() As Integer)
            MyBase.New
            Me.getClassificationGroupsReturn = getClassificationGroupsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getEngineOptions", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getEngineOptionsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public restriction As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public vehicleType As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public manufacturer As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public baseModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public subModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public availableOptions() As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal restriction As Integer, ByVal vehicleType As Integer, ByVal manufacturer As Integer, ByVal baseModel As Integer, ByVal subModel As Integer, ByVal availableOptions() As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.restriction = restriction
            Me.vehicleType = vehicleType
            Me.manufacturer = manufacturer
            Me.baseModel = baseModel
            Me.subModel = subModel
            Me.availableOptions = availableOptions
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getEngineOptionsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getEngineOptionsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getEngineOptionsReturn() As keyIntValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getEngineOptionsReturn() As keyIntValueStringPair)
            MyBase.New
            Me.getEngineOptionsReturn = getEngineOptionsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getBodyOptions", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getBodyOptionsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public restriction As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public vehicleType As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public manufacturer As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public baseModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public subModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public availableOptions() As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal restriction As Integer, ByVal vehicleType As Integer, ByVal manufacturer As Integer, ByVal baseModel As Integer, ByVal subModel As Integer, ByVal availableOptions() As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.restriction = restriction
            Me.vehicleType = vehicleType
            Me.manufacturer = manufacturer
            Me.baseModel = baseModel
            Me.subModel = subModel
            Me.availableOptions = availableOptions
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getBodyOptionsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getBodyOptionsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getBodyOptionsReturn() As keyIntValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getBodyOptionsReturn() As keyIntValueStringPair)
            MyBase.New
            Me.getBodyOptionsReturn = getBodyOptionsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getWheelbaseOptions", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getWheelbaseOptionsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public restriction As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public vehicleType As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public manufacturer As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public baseModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public subModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public availableOptions() As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal restriction As Integer, ByVal vehicleType As Integer, ByVal manufacturer As Integer, ByVal baseModel As Integer, ByVal subModel As Integer, ByVal availableOptions() As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.restriction = restriction
            Me.vehicleType = vehicleType
            Me.manufacturer = manufacturer
            Me.baseModel = baseModel
            Me.subModel = subModel
            Me.availableOptions = availableOptions
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getWheelbaseOptionsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getWheelbaseOptionsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getWheelbaseOptionsReturn() As keyIntValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getWheelbaseOptionsReturn() As keyIntValueStringPair)
            MyBase.New
            Me.getWheelbaseOptionsReturn = getWheelbaseOptionsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getPropulsionOptions", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getPropulsionOptionsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public restriction As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public vehicleType As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public manufacturer As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public baseModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public subModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public availableOptions() As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal restriction As Integer, ByVal vehicleType As Integer, ByVal manufacturer As Integer, ByVal baseModel As Integer, ByVal subModel As Integer, ByVal availableOptions() As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.restriction = restriction
            Me.vehicleType = vehicleType
            Me.manufacturer = manufacturer
            Me.baseModel = baseModel
            Me.subModel = subModel
            Me.availableOptions = availableOptions
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getPropulsionOptionsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getPropulsionOptionsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getPropulsionOptionsReturn() As keyIntValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getPropulsionOptionsReturn() As keyIntValueStringPair)
            MyBase.New
            Me.getPropulsionOptionsReturn = getPropulsionOptionsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getDrivingCabOptions", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getDrivingCabOptionsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public restriction As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public vehicleType As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public manufacturer As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public baseModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public subModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public availableOptions() As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal restriction As Integer, ByVal vehicleType As Integer, ByVal manufacturer As Integer, ByVal baseModel As Integer, ByVal subModel As Integer, ByVal availableOptions() As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.restriction = restriction
            Me.vehicleType = vehicleType
            Me.manufacturer = manufacturer
            Me.baseModel = baseModel
            Me.subModel = subModel
            Me.availableOptions = availableOptions
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getDrivingCabOptionsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getDrivingCabOptionsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getDrivingCabOptionsReturn() As keyIntValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getDrivingCabOptionsReturn() As keyIntValueStringPair)
            MyBase.New
            Me.getDrivingCabOptionsReturn = getDrivingCabOptionsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getMaximumTotalWeightOptions", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getMaximumTotalWeightOptionsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public restriction As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public vehicleType As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public manufacturer As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public baseModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public subModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public availableOptions() As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal restriction As Integer, ByVal vehicleType As Integer, ByVal manufacturer As Integer, ByVal baseModel As Integer, ByVal subModel As Integer, ByVal availableOptions() As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.restriction = restriction
            Me.vehicleType = vehicleType
            Me.manufacturer = manufacturer
            Me.baseModel = baseModel
            Me.subModel = subModel
            Me.availableOptions = availableOptions
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getMaximumTotalWeightOptionsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getMaximumTotalWeightOptionsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getMaximumTotalWeightOptionsReturn() As keyIntValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getMaximumTotalWeightOptionsReturn() As keyIntValueStringPair)
            MyBase.New
            Me.getMaximumTotalWeightOptionsReturn = getMaximumTotalWeightOptionsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getConstructionOptions", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getConstructionOptionsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public restriction As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public vehicleType As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public manufacturer As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public baseModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public subModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public availableOptions() As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal restriction As Integer, ByVal vehicleType As Integer, ByVal manufacturer As Integer, ByVal baseModel As Integer, ByVal subModel As Integer, ByVal availableOptions() As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.restriction = restriction
            Me.vehicleType = vehicleType
            Me.manufacturer = manufacturer
            Me.baseModel = baseModel
            Me.subModel = subModel
            Me.availableOptions = availableOptions
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getConstructionOptionsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getConstructionOptionsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getConstructionOptionsReturn() As keyIntValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getConstructionOptionsReturn() As keyIntValueStringPair)
            MyBase.New
            Me.getConstructionOptionsReturn = getConstructionOptionsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSuspensionOptions", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getSuspensionOptionsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public restriction As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public vehicleType As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public manufacturer As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public baseModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public subModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public availableOptions() As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal restriction As Integer, ByVal vehicleType As Integer, ByVal manufacturer As Integer, ByVal baseModel As Integer, ByVal subModel As Integer, ByVal availableOptions() As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.restriction = restriction
            Me.vehicleType = vehicleType
            Me.manufacturer = manufacturer
            Me.baseModel = baseModel
            Me.subModel = subModel
            Me.availableOptions = availableOptions
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSuspensionOptionsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getSuspensionOptionsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getSuspensionOptionsReturn() As keyIntValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getSuspensionOptionsReturn() As keyIntValueStringPair)
            MyBase.New
            Me.getSuspensionOptionsReturn = getSuspensionOptionsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getAxleOptions", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getAxleOptionsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public restriction As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public vehicleType As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public manufacturer As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public baseModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public subModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public availableOptions() As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal restriction As Integer, ByVal vehicleType As Integer, ByVal manufacturer As Integer, ByVal baseModel As Integer, ByVal subModel As Integer, ByVal availableOptions() As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.restriction = restriction
            Me.vehicleType = vehicleType
            Me.manufacturer = manufacturer
            Me.baseModel = baseModel
            Me.subModel = subModel
            Me.availableOptions = availableOptions
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getAxleOptionsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getAxleOptionsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getAxleOptionsReturn() As keyIntValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getAxleOptionsReturn() As keyIntValueStringPair)
            MyBase.New
            Me.getAxleOptionsReturn = getAxleOptionsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getEquipmentLineOptions", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getEquipmentLineOptionsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public restriction As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public vehicleType As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public manufacturer As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public baseModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public subModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public availableOptions() As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal restriction As Integer, ByVal vehicleType As Integer, ByVal manufacturer As Integer, ByVal baseModel As Integer, ByVal subModel As Integer, ByVal availableOptions() As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.restriction = restriction
            Me.vehicleType = vehicleType
            Me.manufacturer = manufacturer
            Me.baseModel = baseModel
            Me.subModel = subModel
            Me.availableOptions = availableOptions
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getEquipmentLineOptionsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getEquipmentLineOptionsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getEquipmentLineOptionsReturn() As keyIntValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getEquipmentLineOptionsReturn() As keyIntValueStringPair)
            MyBase.New
            Me.getEquipmentLineOptionsReturn = getEquipmentLineOptionsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getGearingOptions", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getGearingOptionsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public restriction As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public vehicleType As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public manufacturer As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public baseModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public subModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public availableOptions() As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal restriction As Integer, ByVal vehicleType As Integer, ByVal manufacturer As Integer, ByVal baseModel As Integer, ByVal subModel As Integer, ByVal availableOptions() As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.restriction = restriction
            Me.vehicleType = vehicleType
            Me.manufacturer = manufacturer
            Me.baseModel = baseModel
            Me.subModel = subModel
            Me.availableOptions = availableOptions
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getGearingOptionsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getGearingOptionsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getGearingOptionsReturn() As keyIntValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getGearingOptionsReturn() As keyIntValueStringPair)
            MyBase.New
            Me.getGearingOptionsReturn = getGearingOptionsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="compileDatECode", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class compileDatECodeRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public vehicleType As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public manufacturer As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public baseModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public subModel As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public availableOptions() As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal vehicleType As Integer, ByVal manufacturer As Integer, ByVal baseModel As Integer, ByVal subModel As Integer, ByVal availableOptions() As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.vehicleType = vehicleType
            Me.manufacturer = manufacturer
            Me.baseModel = baseModel
            Me.subModel = subModel
            Me.availableOptions = availableOptions
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="compileDatECodeResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class compileDatECodeResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public compileDatECodeReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal compileDatECodeReturn As String)
            MyBase.New
            Me.compileDatECodeReturn = compileDatECodeReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getPriceDiscoveryContainers", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getPriceDiscoveryContainersRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public datECode As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal datECode As String)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.datECode = datECode
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getPriceDiscoveryContainersResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getPriceDiscoveryContainersResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getPriceDiscoveryContainersReturn() As keyStringValueStringPair
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getPriceDiscoveryContainersReturn() As keyStringValueStringPair)
            MyBase.New
            Me.getPriceDiscoveryContainersReturn = getPriceDiscoveryContainersReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"), _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getPriceDiscoveryContainers1", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=True)> _
    Partial Friend Class getPriceDiscoveryContainersRequest1

        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)> _
        Public datCustomerNumber As String

        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)> _
        Public userName As String

        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)> _
        Public password As String

        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)> _
        Public datECode As String

        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)> _
        Public constructionYear As Integer

        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)> _
        Public restrictionFilter As Integer

        Public Sub New()
            MyBase.New()
        End Sub

        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal datECode As String, ByVal constructionYear As Integer, ByVal restrictionFilter As Integer)
            MyBase.New()
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.datECode = datECode
            Me.constructionYear = constructionYear
            Me.restrictionFilter = restrictionFilter
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"), _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getPriceDiscoveryContainers1Response", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=True)> _
    Partial Friend Class getPriceDiscoveryContainersResponse1

        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)> _
        Public getPriceDiscoveryContainersReturn() As keyStringValueStringPair

        Public Sub New()
            MyBase.New()
        End Sub

        Public Sub New(ByVal getPriceDiscoveryContainersReturn() As keyStringValueStringPair)
            MyBase.New()
            Me.getPriceDiscoveryContainersReturn = getPriceDiscoveryContainersReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getPriceDiscoveryConstructionYears", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getPriceDiscoveryConstructionYearsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public datECode As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal datECode As String)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.datECode = datECode
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getPriceDiscoveryConstructionYearsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getPriceDiscoveryConstructionYearsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getPriceDiscoveryConstructionYearsReturn() As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getPriceDiscoveryConstructionYearsReturn() As Integer)
            MyBase.New
            Me.getPriceDiscoveryConstructionYearsReturn = getPriceDiscoveryConstructionYearsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getConstructionPeriod", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getConstructionPeriodRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public datECode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public container As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal datECode As String, ByVal container As String)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.datECode = datECode
            Me.container = container
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getConstructionPeriodResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getConstructionPeriodResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getConstructionPeriodReturn As SilverDAT.constructionTimePeriod
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getConstructionPeriodReturn As SilverDAT.constructionTimePeriod)
            MyBase.New
            Me.getConstructionPeriodReturn = getConstructionPeriodReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="mapEdvCode2ValueCode", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class mapEdvCode2ValueCodeRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public edvCode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public datECode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public constructionTime As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal edvCode As String, ByVal datECode As String, ByVal constructionTime As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.edvCode = edvCode
            Me.datECode = datECode
            Me.constructionTime = constructionTime
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="mapEdvCode2ValueCodeResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class mapEdvCode2ValueCodeResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public mapEdvCode2ValueCodeReturn As SilverDAT.datECodeConstructionTimeContainerBean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal mapEdvCode2ValueCodeReturn As SilverDAT.datECodeConstructionTimeContainerBean)
            MyBase.New
            Me.mapEdvCode2ValueCodeReturn = mapEdvCode2ValueCodeReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="kba2ValueCode", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class kba2ValueCodeRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public hsn As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public tsn As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public constructionTime As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal hsn As String, ByVal tsn As String, ByVal constructionTime As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.hsn = hsn
            Me.tsn = tsn
            Me.constructionTime = constructionTime
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="kba2ValueCodeResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class kba2ValueCodeResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public kba2ValueCodeReturn() As DatECodePlusContainer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal kba2ValueCodeReturn() As DatECodePlusContainer)
            MyBase.New
            Me.kba2ValueCodeReturn = kba2ValueCodeReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="kba2ValueCodeWithDesc", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class kba2ValueCodeWithDescRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public hsn As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public tsn As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public constructionTime As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal hsn As String, ByVal tsn As String, ByVal constructionTime As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.hsn = hsn
            Me.tsn = tsn
            Me.constructionTime = constructionTime
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="kba2ValueCodeWithDescResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class kba2ValueCodeWithDescResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public kba2ValueCodeWithDescReturn() As DatECodePlusContainerExtendedBean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal kba2ValueCodeWithDescReturn() As DatECodePlusContainerExtendedBean)
            MyBase.New
            Me.kba2ValueCodeWithDescReturn = kba2ValueCodeWithDescReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getPriceDiscoveryLabels", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class getPriceDiscoveryLabelsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public eCode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public eCodeContainer As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal eCode As String, ByVal eCodeContainer As String)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.eCode = eCode
            Me.eCodeContainer = eCodeContainer
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getPriceDiscoveryLabelsResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class getPriceDiscoveryLabelsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getPriceDiscoveryLabelsReturn As SilverDAT.PriceDiscoveryLabelsBean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getPriceDiscoveryLabelsReturn As SilverDAT.PriceDiscoveryLabelsBean)
            MyBase.New
            Me.getPriceDiscoveryLabelsReturn = getPriceDiscoveryLabelsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="valueCode2Description", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class valueCode2DescriptionRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public eCode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public eCodeContainer As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal eCode As String, ByVal eCodeContainer As String)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.eCode = eCode
            Me.eCodeContainer = eCodeContainer
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="valueCode2DescriptionResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class valueCode2DescriptionResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public valueCode2DescriptionReturn As SilverDAT.DatECodeDescriptionContainerBean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal valueCode2DescriptionReturn As SilverDAT.DatECodeDescriptionContainerBean)
            MyBase.New
            Me.valueCode2DescriptionReturn = valueCode2DescriptionReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="date2ConstructionTime", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class date2ConstructionTimeRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public calendar As Date
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal calendar As Date)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.calendar = calendar
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="date2ConstructionTimeResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class date2ConstructionTimeResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public date2ConstructionTimeReturn As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal date2ConstructionTimeReturn As Integer)
            MyBase.New
            Me.date2ConstructionTimeReturn = date2ConstructionTimeReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="constructionTime2Date", WrapperNamespace:="http://soap.u3.dat.de", IsWrapped:=true)>  _
    Partial Friend Class constructionTime2DateRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public constructionTime As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal constructionTime As Integer)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.constructionTime = constructionTime
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="constructionTime2DateResponse", WrapperNamespace:="http://www.dat.de/u3/services/SDOSelectVehicleExtService", IsWrapped:=true)>  _
    Partial Friend Class constructionTime2DateResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public constructionTime2DateReturn As Date
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal constructionTime2DateReturn As Date)
            MyBase.New
            Me.constructionTime2DateReturn = constructionTime2DateReturn
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Friend Interface SDOSelectVehicleExtPortTypeChannel
        Inherits SilverDAT.SDOSelectVehicleExtPortType, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getVersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getVersionResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getVersionResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getVehicleTypesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getVehicleTypesResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getVehicleTypesResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getManufacturersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getManufacturersResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getManufacturersResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getBaseModelsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getBaseModelsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getBaseModelsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getSubModelsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getSubModelsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getSubModelsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getClassificationGroupsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getClassificationGroupsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getClassificationGroupsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getEngineOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getEngineOptionsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getEngineOptionsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getBodyOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getBodyOptionsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getBodyOptionsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getWheelbaseOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getWheelbaseOptionsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getWheelbaseOptionsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getPropulsionOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getPropulsionOptionsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getPropulsionOptionsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getDrivingCabOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getDrivingCabOptionsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getDrivingCabOptionsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getMaximumTotalWeightOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getMaximumTotalWeightOptionsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getMaximumTotalWeightOptionsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getConstructionOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getConstructionOptionsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getConstructionOptionsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getSuspensionOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getSuspensionOptionsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getSuspensionOptionsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getAxleOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getAxleOptionsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getAxleOptionsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getEquipmentLineOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getEquipmentLineOptionsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getEquipmentLineOptionsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getGearingOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getGearingOptionsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getGearingOptionsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class compileDatECodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.compileDatECodeResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.compileDatECodeResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getPriceDiscoveryContainersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getPriceDiscoveryContainersResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getPriceDiscoveryContainersResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getPriceDiscoveryContainers1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getPriceDiscoveryContainersResponse1
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getPriceDiscoveryContainersResponse1)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getPriceDiscoveryConstructionYearsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getPriceDiscoveryConstructionYearsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getPriceDiscoveryConstructionYearsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getConstructionPeriodCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getConstructionPeriodResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getConstructionPeriodResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class mapEdvCode2ValueCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.mapEdvCode2ValueCodeResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.mapEdvCode2ValueCodeResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class kba2ValueCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.kba2ValueCodeResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.kba2ValueCodeResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class kba2ValueCodeWithDescCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.kba2ValueCodeWithDescResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.kba2ValueCodeWithDescResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getPriceDiscoveryLabelsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getPriceDiscoveryLabelsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getPriceDiscoveryLabelsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class valueCode2DescriptionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.valueCode2DescriptionResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.valueCode2DescriptionResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class date2ConstructionTimeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.date2ConstructionTimeResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.date2ConstructionTimeResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class constructionTime2DateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.constructionTime2DateResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.constructionTime2DateResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class SDOSelectVehicleExtPortTypeClient
        Inherits System.ServiceModel.ClientBase(Of SilverDAT.SDOSelectVehicleExtPortType)
        Implements SilverDAT.SDOSelectVehicleExtPortType
        
        Private onBegingetVersionDelegate As BeginOperationDelegate
        
        Private onEndgetVersionDelegate As EndOperationDelegate
        
        Private ongetVersionCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetVehicleTypesDelegate As BeginOperationDelegate
        
        Private onEndgetVehicleTypesDelegate As EndOperationDelegate
        
        Private ongetVehicleTypesCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetManufacturersDelegate As BeginOperationDelegate
        
        Private onEndgetManufacturersDelegate As EndOperationDelegate
        
        Private ongetManufacturersCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetBaseModelsDelegate As BeginOperationDelegate
        
        Private onEndgetBaseModelsDelegate As EndOperationDelegate
        
        Private ongetBaseModelsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetSubModelsDelegate As BeginOperationDelegate
        
        Private onEndgetSubModelsDelegate As EndOperationDelegate
        
        Private ongetSubModelsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetClassificationGroupsDelegate As BeginOperationDelegate
        
        Private onEndgetClassificationGroupsDelegate As EndOperationDelegate
        
        Private ongetClassificationGroupsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetEngineOptionsDelegate As BeginOperationDelegate
        
        Private onEndgetEngineOptionsDelegate As EndOperationDelegate
        
        Private ongetEngineOptionsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetBodyOptionsDelegate As BeginOperationDelegate
        
        Private onEndgetBodyOptionsDelegate As EndOperationDelegate
        
        Private ongetBodyOptionsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetWheelbaseOptionsDelegate As BeginOperationDelegate
        
        Private onEndgetWheelbaseOptionsDelegate As EndOperationDelegate
        
        Private ongetWheelbaseOptionsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetPropulsionOptionsDelegate As BeginOperationDelegate
        
        Private onEndgetPropulsionOptionsDelegate As EndOperationDelegate
        
        Private ongetPropulsionOptionsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetDrivingCabOptionsDelegate As BeginOperationDelegate
        
        Private onEndgetDrivingCabOptionsDelegate As EndOperationDelegate
        
        Private ongetDrivingCabOptionsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetMaximumTotalWeightOptionsDelegate As BeginOperationDelegate
        
        Private onEndgetMaximumTotalWeightOptionsDelegate As EndOperationDelegate
        
        Private ongetMaximumTotalWeightOptionsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetConstructionOptionsDelegate As BeginOperationDelegate
        
        Private onEndgetConstructionOptionsDelegate As EndOperationDelegate
        
        Private ongetConstructionOptionsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetSuspensionOptionsDelegate As BeginOperationDelegate
        
        Private onEndgetSuspensionOptionsDelegate As EndOperationDelegate
        
        Private ongetSuspensionOptionsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetAxleOptionsDelegate As BeginOperationDelegate
        
        Private onEndgetAxleOptionsDelegate As EndOperationDelegate
        
        Private ongetAxleOptionsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetEquipmentLineOptionsDelegate As BeginOperationDelegate
        
        Private onEndgetEquipmentLineOptionsDelegate As EndOperationDelegate
        
        Private ongetEquipmentLineOptionsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetGearingOptionsDelegate As BeginOperationDelegate
        
        Private onEndgetGearingOptionsDelegate As EndOperationDelegate
        
        Private ongetGearingOptionsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegincompileDatECodeDelegate As BeginOperationDelegate
        
        Private onEndcompileDatECodeDelegate As EndOperationDelegate
        
        Private oncompileDatECodeCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetPriceDiscoveryContainersDelegate As BeginOperationDelegate
        
        Private onEndgetPriceDiscoveryContainersDelegate As EndOperationDelegate
        
        Private ongetPriceDiscoveryContainersCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetPriceDiscoveryContainers1Delegate As BeginOperationDelegate
        
        Private onEndgetPriceDiscoveryContainers1Delegate As EndOperationDelegate
        
        Private ongetPriceDiscoveryContainers1CompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetPriceDiscoveryConstructionYearsDelegate As BeginOperationDelegate
        
        Private onEndgetPriceDiscoveryConstructionYearsDelegate As EndOperationDelegate
        
        Private ongetPriceDiscoveryConstructionYearsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetConstructionPeriodDelegate As BeginOperationDelegate
        
        Private onEndgetConstructionPeriodDelegate As EndOperationDelegate
        
        Private ongetConstructionPeriodCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginmapEdvCode2ValueCodeDelegate As BeginOperationDelegate
        
        Private onEndmapEdvCode2ValueCodeDelegate As EndOperationDelegate
        
        Private onmapEdvCode2ValueCodeCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginkba2ValueCodeDelegate As BeginOperationDelegate
        
        Private onEndkba2ValueCodeDelegate As EndOperationDelegate
        
        Private onkba2ValueCodeCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginkba2ValueCodeWithDescDelegate As BeginOperationDelegate
        
        Private onEndkba2ValueCodeWithDescDelegate As EndOperationDelegate
        
        Private onkba2ValueCodeWithDescCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetPriceDiscoveryLabelsDelegate As BeginOperationDelegate
        
        Private onEndgetPriceDiscoveryLabelsDelegate As EndOperationDelegate
        
        Private ongetPriceDiscoveryLabelsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginvalueCode2DescriptionDelegate As BeginOperationDelegate
        
        Private onEndvalueCode2DescriptionDelegate As EndOperationDelegate
        
        Private onvalueCode2DescriptionCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegindate2ConstructionTimeDelegate As BeginOperationDelegate
        
        Private onEnddate2ConstructionTimeDelegate As EndOperationDelegate
        
        Private ondate2ConstructionTimeCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginconstructionTime2DateDelegate As BeginOperationDelegate
        
        Private onEndconstructionTime2DateDelegate As EndOperationDelegate
        
        Private onconstructionTime2DateCompletedDelegate As System.Threading.SendOrPostCallback
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Event getVersionCompleted As System.EventHandler(Of getVersionCompletedEventArgs)
        
        Public Event getVehicleTypesCompleted As System.EventHandler(Of getVehicleTypesCompletedEventArgs)
        
        Public Event getManufacturersCompleted As System.EventHandler(Of getManufacturersCompletedEventArgs)
        
        Public Event getBaseModelsCompleted As System.EventHandler(Of getBaseModelsCompletedEventArgs)
        
        Public Event getSubModelsCompleted As System.EventHandler(Of getSubModelsCompletedEventArgs)
        
        Public Event getClassificationGroupsCompleted As System.EventHandler(Of getClassificationGroupsCompletedEventArgs)
        
        Public Event getEngineOptionsCompleted As System.EventHandler(Of getEngineOptionsCompletedEventArgs)
        
        Public Event getBodyOptionsCompleted As System.EventHandler(Of getBodyOptionsCompletedEventArgs)
        
        Public Event getWheelbaseOptionsCompleted As System.EventHandler(Of getWheelbaseOptionsCompletedEventArgs)
        
        Public Event getPropulsionOptionsCompleted As System.EventHandler(Of getPropulsionOptionsCompletedEventArgs)
        
        Public Event getDrivingCabOptionsCompleted As System.EventHandler(Of getDrivingCabOptionsCompletedEventArgs)
        
        Public Event getMaximumTotalWeightOptionsCompleted As System.EventHandler(Of getMaximumTotalWeightOptionsCompletedEventArgs)
        
        Public Event getConstructionOptionsCompleted As System.EventHandler(Of getConstructionOptionsCompletedEventArgs)
        
        Public Event getSuspensionOptionsCompleted As System.EventHandler(Of getSuspensionOptionsCompletedEventArgs)
        
        Public Event getAxleOptionsCompleted As System.EventHandler(Of getAxleOptionsCompletedEventArgs)
        
        Public Event getEquipmentLineOptionsCompleted As System.EventHandler(Of getEquipmentLineOptionsCompletedEventArgs)
        
        Public Event getGearingOptionsCompleted As System.EventHandler(Of getGearingOptionsCompletedEventArgs)
        
        Public Event compileDatECodeCompleted As System.EventHandler(Of compileDatECodeCompletedEventArgs)
        
        Public Event getPriceDiscoveryContainersCompleted As System.EventHandler(Of getPriceDiscoveryContainersCompletedEventArgs)
        
        Public Event getPriceDiscoveryContainers1Completed As System.EventHandler(Of getPriceDiscoveryContainers1CompletedEventArgs)
        
        Public Event getPriceDiscoveryConstructionYearsCompleted As System.EventHandler(Of getPriceDiscoveryConstructionYearsCompletedEventArgs)
        
        Public Event getConstructionPeriodCompleted As System.EventHandler(Of getConstructionPeriodCompletedEventArgs)
        
        Public Event mapEdvCode2ValueCodeCompleted As System.EventHandler(Of mapEdvCode2ValueCodeCompletedEventArgs)
        
        Public Event kba2ValueCodeCompleted As System.EventHandler(Of kba2ValueCodeCompletedEventArgs)
        
        Public Event kba2ValueCodeWithDescCompleted As System.EventHandler(Of kba2ValueCodeWithDescCompletedEventArgs)
        
        Public Event getPriceDiscoveryLabelsCompleted As System.EventHandler(Of getPriceDiscoveryLabelsCompletedEventArgs)
        
        Public Event valueCode2DescriptionCompleted As System.EventHandler(Of valueCode2DescriptionCompletedEventArgs)
        
        Public Event date2ConstructionTimeCompleted As System.EventHandler(Of date2ConstructionTimeCompletedEventArgs)
        
        Public Event constructionTime2DateCompleted As System.EventHandler(Of constructionTime2DateCompletedEventArgs)
        
        Public Function getVersion(ByVal request As SilverDAT.getVersionRequest) As SilverDAT.getVersionResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getVersion
            Return MyBase.Channel.getVersion(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetVersion(ByVal request As SilverDAT.getVersionRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetVersion
            Return MyBase.Channel.BegingetVersion(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetVersion(ByVal result As System.IAsyncResult) As SilverDAT.getVersionResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetVersion
            Return MyBase.Channel.EndgetVersion(result)
        End Function
        
        Private Function OnBegingetVersion(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getVersionRequest = CType(inValues(0),SilverDAT.getVersionRequest)
            Return Me.BegingetVersion(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetVersion(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getVersionResponse = Me.EndgetVersion(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetVersionCompleted(ByVal state As Object)
            If (Not (Me.getVersionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getVersionCompleted(Me, New getVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getVersionAsync(ByVal request As SilverDAT.getVersionRequest)
            Me.getVersionAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getVersionAsync(ByVal request As SilverDAT.getVersionRequest, ByVal userState As Object)
            If (Me.onBegingetVersionDelegate Is Nothing) Then
                Me.onBegingetVersionDelegate = AddressOf Me.OnBegingetVersion
            End If
            If (Me.onEndgetVersionDelegate Is Nothing) Then
                Me.onEndgetVersionDelegate = AddressOf Me.OnEndgetVersion
            End If
            If (Me.ongetVersionCompletedDelegate Is Nothing) Then
                Me.ongetVersionCompletedDelegate = AddressOf Me.OngetVersionCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetVersionDelegate, New Object() {request}, Me.onEndgetVersionDelegate, Me.ongetVersionCompletedDelegate, userState)
        End Sub
        
        Public Function getVehicleTypes(ByVal request As SilverDAT.getVehicleTypesRequest) As SilverDAT.getVehicleTypesResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getVehicleTypes
            Return MyBase.Channel.getVehicleTypes(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetVehicleTypes(ByVal request As SilverDAT.getVehicleTypesRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetVehicleTypes
            Return MyBase.Channel.BegingetVehicleTypes(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetVehicleTypes(ByVal result As System.IAsyncResult) As SilverDAT.getVehicleTypesResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetVehicleTypes
            Return MyBase.Channel.EndgetVehicleTypes(result)
        End Function
        
        Private Function OnBegingetVehicleTypes(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getVehicleTypesRequest = CType(inValues(0),SilverDAT.getVehicleTypesRequest)
            Return Me.BegingetVehicleTypes(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetVehicleTypes(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getVehicleTypesResponse = Me.EndgetVehicleTypes(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetVehicleTypesCompleted(ByVal state As Object)
            If (Not (Me.getVehicleTypesCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getVehicleTypesCompleted(Me, New getVehicleTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getVehicleTypesAsync(ByVal request As SilverDAT.getVehicleTypesRequest)
            Me.getVehicleTypesAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getVehicleTypesAsync(ByVal request As SilverDAT.getVehicleTypesRequest, ByVal userState As Object)
            If (Me.onBegingetVehicleTypesDelegate Is Nothing) Then
                Me.onBegingetVehicleTypesDelegate = AddressOf Me.OnBegingetVehicleTypes
            End If
            If (Me.onEndgetVehicleTypesDelegate Is Nothing) Then
                Me.onEndgetVehicleTypesDelegate = AddressOf Me.OnEndgetVehicleTypes
            End If
            If (Me.ongetVehicleTypesCompletedDelegate Is Nothing) Then
                Me.ongetVehicleTypesCompletedDelegate = AddressOf Me.OngetVehicleTypesCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetVehicleTypesDelegate, New Object() {request}, Me.onEndgetVehicleTypesDelegate, Me.ongetVehicleTypesCompletedDelegate, userState)
        End Sub
        
        Public Function getManufacturers(ByVal request As SilverDAT.getManufacturersRequest) As SilverDAT.getManufacturersResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getManufacturers
            Return MyBase.Channel.getManufacturers(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetManufacturers(ByVal request As SilverDAT.getManufacturersRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetManufacturers
            Return MyBase.Channel.BegingetManufacturers(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetManufacturers(ByVal result As System.IAsyncResult) As SilverDAT.getManufacturersResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetManufacturers
            Return MyBase.Channel.EndgetManufacturers(result)
        End Function
        
        Private Function OnBegingetManufacturers(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getManufacturersRequest = CType(inValues(0),SilverDAT.getManufacturersRequest)
            Return Me.BegingetManufacturers(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetManufacturers(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getManufacturersResponse = Me.EndgetManufacturers(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetManufacturersCompleted(ByVal state As Object)
            If (Not (Me.getManufacturersCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getManufacturersCompleted(Me, New getManufacturersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getManufacturersAsync(ByVal request As SilverDAT.getManufacturersRequest)
            Me.getManufacturersAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getManufacturersAsync(ByVal request As SilverDAT.getManufacturersRequest, ByVal userState As Object)
            If (Me.onBegingetManufacturersDelegate Is Nothing) Then
                Me.onBegingetManufacturersDelegate = AddressOf Me.OnBegingetManufacturers
            End If
            If (Me.onEndgetManufacturersDelegate Is Nothing) Then
                Me.onEndgetManufacturersDelegate = AddressOf Me.OnEndgetManufacturers
            End If
            If (Me.ongetManufacturersCompletedDelegate Is Nothing) Then
                Me.ongetManufacturersCompletedDelegate = AddressOf Me.OngetManufacturersCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetManufacturersDelegate, New Object() {request}, Me.onEndgetManufacturersDelegate, Me.ongetManufacturersCompletedDelegate, userState)
        End Sub
        
        Public Function getBaseModels(ByVal request As SilverDAT.getBaseModelsRequest) As SilverDAT.getBaseModelsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getBaseModels
            Return MyBase.Channel.getBaseModels(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetBaseModels(ByVal request As SilverDAT.getBaseModelsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetBaseModels
            Return MyBase.Channel.BegingetBaseModels(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetBaseModels(ByVal result As System.IAsyncResult) As SilverDAT.getBaseModelsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetBaseModels
            Return MyBase.Channel.EndgetBaseModels(result)
        End Function
        
        Private Function OnBegingetBaseModels(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getBaseModelsRequest = CType(inValues(0),SilverDAT.getBaseModelsRequest)
            Return Me.BegingetBaseModels(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetBaseModels(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getBaseModelsResponse = Me.EndgetBaseModels(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetBaseModelsCompleted(ByVal state As Object)
            If (Not (Me.getBaseModelsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getBaseModelsCompleted(Me, New getBaseModelsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getBaseModelsAsync(ByVal request As SilverDAT.getBaseModelsRequest)
            Me.getBaseModelsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getBaseModelsAsync(ByVal request As SilverDAT.getBaseModelsRequest, ByVal userState As Object)
            If (Me.onBegingetBaseModelsDelegate Is Nothing) Then
                Me.onBegingetBaseModelsDelegate = AddressOf Me.OnBegingetBaseModels
            End If
            If (Me.onEndgetBaseModelsDelegate Is Nothing) Then
                Me.onEndgetBaseModelsDelegate = AddressOf Me.OnEndgetBaseModels
            End If
            If (Me.ongetBaseModelsCompletedDelegate Is Nothing) Then
                Me.ongetBaseModelsCompletedDelegate = AddressOf Me.OngetBaseModelsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetBaseModelsDelegate, New Object() {request}, Me.onEndgetBaseModelsDelegate, Me.ongetBaseModelsCompletedDelegate, userState)
        End Sub
        
        Public Function getSubModels(ByVal request As SilverDAT.getSubModelsRequest) As SilverDAT.getSubModelsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getSubModels
            Return MyBase.Channel.getSubModels(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetSubModels(ByVal request As SilverDAT.getSubModelsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetSubModels
            Return MyBase.Channel.BegingetSubModels(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetSubModels(ByVal result As System.IAsyncResult) As SilverDAT.getSubModelsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetSubModels
            Return MyBase.Channel.EndgetSubModels(result)
        End Function
        
        Private Function OnBegingetSubModels(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getSubModelsRequest = CType(inValues(0),SilverDAT.getSubModelsRequest)
            Return Me.BegingetSubModels(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetSubModels(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getSubModelsResponse = Me.EndgetSubModels(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetSubModelsCompleted(ByVal state As Object)
            If (Not (Me.getSubModelsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getSubModelsCompleted(Me, New getSubModelsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getSubModelsAsync(ByVal request As SilverDAT.getSubModelsRequest)
            Me.getSubModelsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getSubModelsAsync(ByVal request As SilverDAT.getSubModelsRequest, ByVal userState As Object)
            If (Me.onBegingetSubModelsDelegate Is Nothing) Then
                Me.onBegingetSubModelsDelegate = AddressOf Me.OnBegingetSubModels
            End If
            If (Me.onEndgetSubModelsDelegate Is Nothing) Then
                Me.onEndgetSubModelsDelegate = AddressOf Me.OnEndgetSubModels
            End If
            If (Me.ongetSubModelsCompletedDelegate Is Nothing) Then
                Me.ongetSubModelsCompletedDelegate = AddressOf Me.OngetSubModelsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetSubModelsDelegate, New Object() {request}, Me.onEndgetSubModelsDelegate, Me.ongetSubModelsCompletedDelegate, userState)
        End Sub
        
        Public Function getClassificationGroups(ByVal request As SilverDAT.getClassificationGroupsRequest) As SilverDAT.getClassificationGroupsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getClassificationGroups
            Return MyBase.Channel.getClassificationGroups(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetClassificationGroups(ByVal request As SilverDAT.getClassificationGroupsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetClassificationGroups
            Return MyBase.Channel.BegingetClassificationGroups(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetClassificationGroups(ByVal result As System.IAsyncResult) As SilverDAT.getClassificationGroupsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetClassificationGroups
            Return MyBase.Channel.EndgetClassificationGroups(result)
        End Function
        
        Private Function OnBegingetClassificationGroups(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getClassificationGroupsRequest = CType(inValues(0),SilverDAT.getClassificationGroupsRequest)
            Return Me.BegingetClassificationGroups(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetClassificationGroups(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getClassificationGroupsResponse = Me.EndgetClassificationGroups(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetClassificationGroupsCompleted(ByVal state As Object)
            If (Not (Me.getClassificationGroupsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getClassificationGroupsCompleted(Me, New getClassificationGroupsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getClassificationGroupsAsync(ByVal request As SilverDAT.getClassificationGroupsRequest)
            Me.getClassificationGroupsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getClassificationGroupsAsync(ByVal request As SilverDAT.getClassificationGroupsRequest, ByVal userState As Object)
            If (Me.onBegingetClassificationGroupsDelegate Is Nothing) Then
                Me.onBegingetClassificationGroupsDelegate = AddressOf Me.OnBegingetClassificationGroups
            End If
            If (Me.onEndgetClassificationGroupsDelegate Is Nothing) Then
                Me.onEndgetClassificationGroupsDelegate = AddressOf Me.OnEndgetClassificationGroups
            End If
            If (Me.ongetClassificationGroupsCompletedDelegate Is Nothing) Then
                Me.ongetClassificationGroupsCompletedDelegate = AddressOf Me.OngetClassificationGroupsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetClassificationGroupsDelegate, New Object() {request}, Me.onEndgetClassificationGroupsDelegate, Me.ongetClassificationGroupsCompletedDelegate, userState)
        End Sub
        
        Public Function getEngineOptions(ByVal request As SilverDAT.getEngineOptionsRequest) As SilverDAT.getEngineOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getEngineOptions
            Return MyBase.Channel.getEngineOptions(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetEngineOptions(ByVal request As SilverDAT.getEngineOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetEngineOptions
            Return MyBase.Channel.BegingetEngineOptions(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetEngineOptions(ByVal result As System.IAsyncResult) As SilverDAT.getEngineOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetEngineOptions
            Return MyBase.Channel.EndgetEngineOptions(result)
        End Function
        
        Private Function OnBegingetEngineOptions(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getEngineOptionsRequest = CType(inValues(0),SilverDAT.getEngineOptionsRequest)
            Return Me.BegingetEngineOptions(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetEngineOptions(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getEngineOptionsResponse = Me.EndgetEngineOptions(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetEngineOptionsCompleted(ByVal state As Object)
            If (Not (Me.getEngineOptionsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getEngineOptionsCompleted(Me, New getEngineOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getEngineOptionsAsync(ByVal request As SilverDAT.getEngineOptionsRequest)
            Me.getEngineOptionsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getEngineOptionsAsync(ByVal request As SilverDAT.getEngineOptionsRequest, ByVal userState As Object)
            If (Me.onBegingetEngineOptionsDelegate Is Nothing) Then
                Me.onBegingetEngineOptionsDelegate = AddressOf Me.OnBegingetEngineOptions
            End If
            If (Me.onEndgetEngineOptionsDelegate Is Nothing) Then
                Me.onEndgetEngineOptionsDelegate = AddressOf Me.OnEndgetEngineOptions
            End If
            If (Me.ongetEngineOptionsCompletedDelegate Is Nothing) Then
                Me.ongetEngineOptionsCompletedDelegate = AddressOf Me.OngetEngineOptionsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetEngineOptionsDelegate, New Object() {request}, Me.onEndgetEngineOptionsDelegate, Me.ongetEngineOptionsCompletedDelegate, userState)
        End Sub
        
        Public Function getBodyOptions(ByVal request As SilverDAT.getBodyOptionsRequest) As SilverDAT.getBodyOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getBodyOptions
            Return MyBase.Channel.getBodyOptions(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetBodyOptions(ByVal request As SilverDAT.getBodyOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetBodyOptions
            Return MyBase.Channel.BegingetBodyOptions(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetBodyOptions(ByVal result As System.IAsyncResult) As SilverDAT.getBodyOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetBodyOptions
            Return MyBase.Channel.EndgetBodyOptions(result)
        End Function
        
        Private Function OnBegingetBodyOptions(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getBodyOptionsRequest = CType(inValues(0),SilverDAT.getBodyOptionsRequest)
            Return Me.BegingetBodyOptions(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetBodyOptions(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getBodyOptionsResponse = Me.EndgetBodyOptions(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetBodyOptionsCompleted(ByVal state As Object)
            If (Not (Me.getBodyOptionsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getBodyOptionsCompleted(Me, New getBodyOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getBodyOptionsAsync(ByVal request As SilverDAT.getBodyOptionsRequest)
            Me.getBodyOptionsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getBodyOptionsAsync(ByVal request As SilverDAT.getBodyOptionsRequest, ByVal userState As Object)
            If (Me.onBegingetBodyOptionsDelegate Is Nothing) Then
                Me.onBegingetBodyOptionsDelegate = AddressOf Me.OnBegingetBodyOptions
            End If
            If (Me.onEndgetBodyOptionsDelegate Is Nothing) Then
                Me.onEndgetBodyOptionsDelegate = AddressOf Me.OnEndgetBodyOptions
            End If
            If (Me.ongetBodyOptionsCompletedDelegate Is Nothing) Then
                Me.ongetBodyOptionsCompletedDelegate = AddressOf Me.OngetBodyOptionsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetBodyOptionsDelegate, New Object() {request}, Me.onEndgetBodyOptionsDelegate, Me.ongetBodyOptionsCompletedDelegate, userState)
        End Sub
        
        Public Function getWheelbaseOptions(ByVal request As SilverDAT.getWheelbaseOptionsRequest) As SilverDAT.getWheelbaseOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getWheelbaseOptions
            Return MyBase.Channel.getWheelbaseOptions(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetWheelbaseOptions(ByVal request As SilverDAT.getWheelbaseOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetWheelbaseOptions
            Return MyBase.Channel.BegingetWheelbaseOptions(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetWheelbaseOptions(ByVal result As System.IAsyncResult) As SilverDAT.getWheelbaseOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetWheelbaseOptions
            Return MyBase.Channel.EndgetWheelbaseOptions(result)
        End Function
        
        Private Function OnBegingetWheelbaseOptions(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getWheelbaseOptionsRequest = CType(inValues(0),SilverDAT.getWheelbaseOptionsRequest)
            Return Me.BegingetWheelbaseOptions(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetWheelbaseOptions(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getWheelbaseOptionsResponse = Me.EndgetWheelbaseOptions(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetWheelbaseOptionsCompleted(ByVal state As Object)
            If (Not (Me.getWheelbaseOptionsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getWheelbaseOptionsCompleted(Me, New getWheelbaseOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getWheelbaseOptionsAsync(ByVal request As SilverDAT.getWheelbaseOptionsRequest)
            Me.getWheelbaseOptionsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getWheelbaseOptionsAsync(ByVal request As SilverDAT.getWheelbaseOptionsRequest, ByVal userState As Object)
            If (Me.onBegingetWheelbaseOptionsDelegate Is Nothing) Then
                Me.onBegingetWheelbaseOptionsDelegate = AddressOf Me.OnBegingetWheelbaseOptions
            End If
            If (Me.onEndgetWheelbaseOptionsDelegate Is Nothing) Then
                Me.onEndgetWheelbaseOptionsDelegate = AddressOf Me.OnEndgetWheelbaseOptions
            End If
            If (Me.ongetWheelbaseOptionsCompletedDelegate Is Nothing) Then
                Me.ongetWheelbaseOptionsCompletedDelegate = AddressOf Me.OngetWheelbaseOptionsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetWheelbaseOptionsDelegate, New Object() {request}, Me.onEndgetWheelbaseOptionsDelegate, Me.ongetWheelbaseOptionsCompletedDelegate, userState)
        End Sub
        
        Public Function getPropulsionOptions(ByVal request As SilverDAT.getPropulsionOptionsRequest) As SilverDAT.getPropulsionOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getPropulsionOptions
            Return MyBase.Channel.getPropulsionOptions(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetPropulsionOptions(ByVal request As SilverDAT.getPropulsionOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetPropulsionOptions
            Return MyBase.Channel.BegingetPropulsionOptions(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetPropulsionOptions(ByVal result As System.IAsyncResult) As SilverDAT.getPropulsionOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetPropulsionOptions
            Return MyBase.Channel.EndgetPropulsionOptions(result)
        End Function
        
        Private Function OnBegingetPropulsionOptions(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getPropulsionOptionsRequest = CType(inValues(0),SilverDAT.getPropulsionOptionsRequest)
            Return Me.BegingetPropulsionOptions(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetPropulsionOptions(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getPropulsionOptionsResponse = Me.EndgetPropulsionOptions(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetPropulsionOptionsCompleted(ByVal state As Object)
            If (Not (Me.getPropulsionOptionsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getPropulsionOptionsCompleted(Me, New getPropulsionOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getPropulsionOptionsAsync(ByVal request As SilverDAT.getPropulsionOptionsRequest)
            Me.getPropulsionOptionsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getPropulsionOptionsAsync(ByVal request As SilverDAT.getPropulsionOptionsRequest, ByVal userState As Object)
            If (Me.onBegingetPropulsionOptionsDelegate Is Nothing) Then
                Me.onBegingetPropulsionOptionsDelegate = AddressOf Me.OnBegingetPropulsionOptions
            End If
            If (Me.onEndgetPropulsionOptionsDelegate Is Nothing) Then
                Me.onEndgetPropulsionOptionsDelegate = AddressOf Me.OnEndgetPropulsionOptions
            End If
            If (Me.ongetPropulsionOptionsCompletedDelegate Is Nothing) Then
                Me.ongetPropulsionOptionsCompletedDelegate = AddressOf Me.OngetPropulsionOptionsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetPropulsionOptionsDelegate, New Object() {request}, Me.onEndgetPropulsionOptionsDelegate, Me.ongetPropulsionOptionsCompletedDelegate, userState)
        End Sub
        
        Public Function getDrivingCabOptions(ByVal request As SilverDAT.getDrivingCabOptionsRequest) As SilverDAT.getDrivingCabOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getDrivingCabOptions
            Return MyBase.Channel.getDrivingCabOptions(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetDrivingCabOptions(ByVal request As SilverDAT.getDrivingCabOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetDrivingCabOptions
            Return MyBase.Channel.BegingetDrivingCabOptions(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetDrivingCabOptions(ByVal result As System.IAsyncResult) As SilverDAT.getDrivingCabOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetDrivingCabOptions
            Return MyBase.Channel.EndgetDrivingCabOptions(result)
        End Function
        
        Private Function OnBegingetDrivingCabOptions(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getDrivingCabOptionsRequest = CType(inValues(0),SilverDAT.getDrivingCabOptionsRequest)
            Return Me.BegingetDrivingCabOptions(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetDrivingCabOptions(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getDrivingCabOptionsResponse = Me.EndgetDrivingCabOptions(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetDrivingCabOptionsCompleted(ByVal state As Object)
            If (Not (Me.getDrivingCabOptionsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getDrivingCabOptionsCompleted(Me, New getDrivingCabOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getDrivingCabOptionsAsync(ByVal request As SilverDAT.getDrivingCabOptionsRequest)
            Me.getDrivingCabOptionsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getDrivingCabOptionsAsync(ByVal request As SilverDAT.getDrivingCabOptionsRequest, ByVal userState As Object)
            If (Me.onBegingetDrivingCabOptionsDelegate Is Nothing) Then
                Me.onBegingetDrivingCabOptionsDelegate = AddressOf Me.OnBegingetDrivingCabOptions
            End If
            If (Me.onEndgetDrivingCabOptionsDelegate Is Nothing) Then
                Me.onEndgetDrivingCabOptionsDelegate = AddressOf Me.OnEndgetDrivingCabOptions
            End If
            If (Me.ongetDrivingCabOptionsCompletedDelegate Is Nothing) Then
                Me.ongetDrivingCabOptionsCompletedDelegate = AddressOf Me.OngetDrivingCabOptionsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetDrivingCabOptionsDelegate, New Object() {request}, Me.onEndgetDrivingCabOptionsDelegate, Me.ongetDrivingCabOptionsCompletedDelegate, userState)
        End Sub
        
        Public Function getMaximumTotalWeightOptions(ByVal request As SilverDAT.getMaximumTotalWeightOptionsRequest) As SilverDAT.getMaximumTotalWeightOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getMaximumTotalWeightOptions
            Return MyBase.Channel.getMaximumTotalWeightOptions(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetMaximumTotalWeightOptions(ByVal request As SilverDAT.getMaximumTotalWeightOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetMaximumTotalWeightOptions
            Return MyBase.Channel.BegingetMaximumTotalWeightOptions(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetMaximumTotalWeightOptions(ByVal result As System.IAsyncResult) As SilverDAT.getMaximumTotalWeightOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetMaximumTotalWeightOptions
            Return MyBase.Channel.EndgetMaximumTotalWeightOptions(result)
        End Function
        
        Private Function OnBegingetMaximumTotalWeightOptions(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getMaximumTotalWeightOptionsRequest = CType(inValues(0),SilverDAT.getMaximumTotalWeightOptionsRequest)
            Return Me.BegingetMaximumTotalWeightOptions(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetMaximumTotalWeightOptions(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getMaximumTotalWeightOptionsResponse = Me.EndgetMaximumTotalWeightOptions(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetMaximumTotalWeightOptionsCompleted(ByVal state As Object)
            If (Not (Me.getMaximumTotalWeightOptionsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getMaximumTotalWeightOptionsCompleted(Me, New getMaximumTotalWeightOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getMaximumTotalWeightOptionsAsync(ByVal request As SilverDAT.getMaximumTotalWeightOptionsRequest)
            Me.getMaximumTotalWeightOptionsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getMaximumTotalWeightOptionsAsync(ByVal request As SilverDAT.getMaximumTotalWeightOptionsRequest, ByVal userState As Object)
            If (Me.onBegingetMaximumTotalWeightOptionsDelegate Is Nothing) Then
                Me.onBegingetMaximumTotalWeightOptionsDelegate = AddressOf Me.OnBegingetMaximumTotalWeightOptions
            End If
            If (Me.onEndgetMaximumTotalWeightOptionsDelegate Is Nothing) Then
                Me.onEndgetMaximumTotalWeightOptionsDelegate = AddressOf Me.OnEndgetMaximumTotalWeightOptions
            End If
            If (Me.ongetMaximumTotalWeightOptionsCompletedDelegate Is Nothing) Then
                Me.ongetMaximumTotalWeightOptionsCompletedDelegate = AddressOf Me.OngetMaximumTotalWeightOptionsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetMaximumTotalWeightOptionsDelegate, New Object() {request}, Me.onEndgetMaximumTotalWeightOptionsDelegate, Me.ongetMaximumTotalWeightOptionsCompletedDelegate, userState)
        End Sub
        
        Public Function getConstructionOptions(ByVal request As SilverDAT.getConstructionOptionsRequest) As SilverDAT.getConstructionOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getConstructionOptions
            Return MyBase.Channel.getConstructionOptions(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetConstructionOptions(ByVal request As SilverDAT.getConstructionOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetConstructionOptions
            Return MyBase.Channel.BegingetConstructionOptions(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetConstructionOptions(ByVal result As System.IAsyncResult) As SilverDAT.getConstructionOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetConstructionOptions
            Return MyBase.Channel.EndgetConstructionOptions(result)
        End Function
        
        Private Function OnBegingetConstructionOptions(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getConstructionOptionsRequest = CType(inValues(0),SilverDAT.getConstructionOptionsRequest)
            Return Me.BegingetConstructionOptions(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetConstructionOptions(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getConstructionOptionsResponse = Me.EndgetConstructionOptions(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetConstructionOptionsCompleted(ByVal state As Object)
            If (Not (Me.getConstructionOptionsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getConstructionOptionsCompleted(Me, New getConstructionOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getConstructionOptionsAsync(ByVal request As SilverDAT.getConstructionOptionsRequest)
            Me.getConstructionOptionsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getConstructionOptionsAsync(ByVal request As SilverDAT.getConstructionOptionsRequest, ByVal userState As Object)
            If (Me.onBegingetConstructionOptionsDelegate Is Nothing) Then
                Me.onBegingetConstructionOptionsDelegate = AddressOf Me.OnBegingetConstructionOptions
            End If
            If (Me.onEndgetConstructionOptionsDelegate Is Nothing) Then
                Me.onEndgetConstructionOptionsDelegate = AddressOf Me.OnEndgetConstructionOptions
            End If
            If (Me.ongetConstructionOptionsCompletedDelegate Is Nothing) Then
                Me.ongetConstructionOptionsCompletedDelegate = AddressOf Me.OngetConstructionOptionsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetConstructionOptionsDelegate, New Object() {request}, Me.onEndgetConstructionOptionsDelegate, Me.ongetConstructionOptionsCompletedDelegate, userState)
        End Sub
        
        Public Function getSuspensionOptions(ByVal request As SilverDAT.getSuspensionOptionsRequest) As SilverDAT.getSuspensionOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getSuspensionOptions
            Return MyBase.Channel.getSuspensionOptions(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetSuspensionOptions(ByVal request As SilverDAT.getSuspensionOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetSuspensionOptions
            Return MyBase.Channel.BegingetSuspensionOptions(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetSuspensionOptions(ByVal result As System.IAsyncResult) As SilverDAT.getSuspensionOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetSuspensionOptions
            Return MyBase.Channel.EndgetSuspensionOptions(result)
        End Function
        
        Private Function OnBegingetSuspensionOptions(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getSuspensionOptionsRequest = CType(inValues(0),SilverDAT.getSuspensionOptionsRequest)
            Return Me.BegingetSuspensionOptions(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetSuspensionOptions(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getSuspensionOptionsResponse = Me.EndgetSuspensionOptions(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetSuspensionOptionsCompleted(ByVal state As Object)
            If (Not (Me.getSuspensionOptionsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getSuspensionOptionsCompleted(Me, New getSuspensionOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getSuspensionOptionsAsync(ByVal request As SilverDAT.getSuspensionOptionsRequest)
            Me.getSuspensionOptionsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getSuspensionOptionsAsync(ByVal request As SilverDAT.getSuspensionOptionsRequest, ByVal userState As Object)
            If (Me.onBegingetSuspensionOptionsDelegate Is Nothing) Then
                Me.onBegingetSuspensionOptionsDelegate = AddressOf Me.OnBegingetSuspensionOptions
            End If
            If (Me.onEndgetSuspensionOptionsDelegate Is Nothing) Then
                Me.onEndgetSuspensionOptionsDelegate = AddressOf Me.OnEndgetSuspensionOptions
            End If
            If (Me.ongetSuspensionOptionsCompletedDelegate Is Nothing) Then
                Me.ongetSuspensionOptionsCompletedDelegate = AddressOf Me.OngetSuspensionOptionsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetSuspensionOptionsDelegate, New Object() {request}, Me.onEndgetSuspensionOptionsDelegate, Me.ongetSuspensionOptionsCompletedDelegate, userState)
        End Sub
        
        Public Function getAxleOptions(ByVal request As SilverDAT.getAxleOptionsRequest) As SilverDAT.getAxleOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getAxleOptions
            Return MyBase.Channel.getAxleOptions(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetAxleOptions(ByVal request As SilverDAT.getAxleOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetAxleOptions
            Return MyBase.Channel.BegingetAxleOptions(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetAxleOptions(ByVal result As System.IAsyncResult) As SilverDAT.getAxleOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetAxleOptions
            Return MyBase.Channel.EndgetAxleOptions(result)
        End Function
        
        Private Function OnBegingetAxleOptions(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getAxleOptionsRequest = CType(inValues(0),SilverDAT.getAxleOptionsRequest)
            Return Me.BegingetAxleOptions(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetAxleOptions(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getAxleOptionsResponse = Me.EndgetAxleOptions(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetAxleOptionsCompleted(ByVal state As Object)
            If (Not (Me.getAxleOptionsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getAxleOptionsCompleted(Me, New getAxleOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getAxleOptionsAsync(ByVal request As SilverDAT.getAxleOptionsRequest)
            Me.getAxleOptionsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getAxleOptionsAsync(ByVal request As SilverDAT.getAxleOptionsRequest, ByVal userState As Object)
            If (Me.onBegingetAxleOptionsDelegate Is Nothing) Then
                Me.onBegingetAxleOptionsDelegate = AddressOf Me.OnBegingetAxleOptions
            End If
            If (Me.onEndgetAxleOptionsDelegate Is Nothing) Then
                Me.onEndgetAxleOptionsDelegate = AddressOf Me.OnEndgetAxleOptions
            End If
            If (Me.ongetAxleOptionsCompletedDelegate Is Nothing) Then
                Me.ongetAxleOptionsCompletedDelegate = AddressOf Me.OngetAxleOptionsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetAxleOptionsDelegate, New Object() {request}, Me.onEndgetAxleOptionsDelegate, Me.ongetAxleOptionsCompletedDelegate, userState)
        End Sub
        
        Public Function getEquipmentLineOptions(ByVal request As SilverDAT.getEquipmentLineOptionsRequest) As SilverDAT.getEquipmentLineOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getEquipmentLineOptions
            Return MyBase.Channel.getEquipmentLineOptions(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetEquipmentLineOptions(ByVal request As SilverDAT.getEquipmentLineOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetEquipmentLineOptions
            Return MyBase.Channel.BegingetEquipmentLineOptions(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetEquipmentLineOptions(ByVal result As System.IAsyncResult) As SilverDAT.getEquipmentLineOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetEquipmentLineOptions
            Return MyBase.Channel.EndgetEquipmentLineOptions(result)
        End Function
        
        Private Function OnBegingetEquipmentLineOptions(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getEquipmentLineOptionsRequest = CType(inValues(0),SilverDAT.getEquipmentLineOptionsRequest)
            Return Me.BegingetEquipmentLineOptions(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetEquipmentLineOptions(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getEquipmentLineOptionsResponse = Me.EndgetEquipmentLineOptions(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetEquipmentLineOptionsCompleted(ByVal state As Object)
            If (Not (Me.getEquipmentLineOptionsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getEquipmentLineOptionsCompleted(Me, New getEquipmentLineOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getEquipmentLineOptionsAsync(ByVal request As SilverDAT.getEquipmentLineOptionsRequest)
            Me.getEquipmentLineOptionsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getEquipmentLineOptionsAsync(ByVal request As SilverDAT.getEquipmentLineOptionsRequest, ByVal userState As Object)
            If (Me.onBegingetEquipmentLineOptionsDelegate Is Nothing) Then
                Me.onBegingetEquipmentLineOptionsDelegate = AddressOf Me.OnBegingetEquipmentLineOptions
            End If
            If (Me.onEndgetEquipmentLineOptionsDelegate Is Nothing) Then
                Me.onEndgetEquipmentLineOptionsDelegate = AddressOf Me.OnEndgetEquipmentLineOptions
            End If
            If (Me.ongetEquipmentLineOptionsCompletedDelegate Is Nothing) Then
                Me.ongetEquipmentLineOptionsCompletedDelegate = AddressOf Me.OngetEquipmentLineOptionsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetEquipmentLineOptionsDelegate, New Object() {request}, Me.onEndgetEquipmentLineOptionsDelegate, Me.ongetEquipmentLineOptionsCompletedDelegate, userState)
        End Sub
        
        Public Function getGearingOptions(ByVal request As SilverDAT.getGearingOptionsRequest) As SilverDAT.getGearingOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getGearingOptions
            Return MyBase.Channel.getGearingOptions(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetGearingOptions(ByVal request As SilverDAT.getGearingOptionsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetGearingOptions
            Return MyBase.Channel.BegingetGearingOptions(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetGearingOptions(ByVal result As System.IAsyncResult) As SilverDAT.getGearingOptionsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetGearingOptions
            Return MyBase.Channel.EndgetGearingOptions(result)
        End Function
        
        Private Function OnBegingetGearingOptions(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getGearingOptionsRequest = CType(inValues(0),SilverDAT.getGearingOptionsRequest)
            Return Me.BegingetGearingOptions(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetGearingOptions(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getGearingOptionsResponse = Me.EndgetGearingOptions(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetGearingOptionsCompleted(ByVal state As Object)
            If (Not (Me.getGearingOptionsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getGearingOptionsCompleted(Me, New getGearingOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getGearingOptionsAsync(ByVal request As SilverDAT.getGearingOptionsRequest)
            Me.getGearingOptionsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getGearingOptionsAsync(ByVal request As SilverDAT.getGearingOptionsRequest, ByVal userState As Object)
            If (Me.onBegingetGearingOptionsDelegate Is Nothing) Then
                Me.onBegingetGearingOptionsDelegate = AddressOf Me.OnBegingetGearingOptions
            End If
            If (Me.onEndgetGearingOptionsDelegate Is Nothing) Then
                Me.onEndgetGearingOptionsDelegate = AddressOf Me.OnEndgetGearingOptions
            End If
            If (Me.ongetGearingOptionsCompletedDelegate Is Nothing) Then
                Me.ongetGearingOptionsCompletedDelegate = AddressOf Me.OngetGearingOptionsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetGearingOptionsDelegate, New Object() {request}, Me.onEndgetGearingOptionsDelegate, Me.ongetGearingOptionsCompletedDelegate, userState)
        End Sub
        
        Public Function compileDatECode(ByVal request As SilverDAT.compileDatECodeRequest) As SilverDAT.compileDatECodeResponse Implements SilverDAT.SDOSelectVehicleExtPortType.compileDatECode
            Return MyBase.Channel.compileDatECode(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegincompileDatECode(ByVal request As SilverDAT.compileDatECodeRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegincompileDatECode
            Return MyBase.Channel.BegincompileDatECode(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndcompileDatECode(ByVal result As System.IAsyncResult) As SilverDAT.compileDatECodeResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndcompileDatECode
            Return MyBase.Channel.EndcompileDatECode(result)
        End Function
        
        Private Function OnBegincompileDatECode(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.compileDatECodeRequest = CType(inValues(0),SilverDAT.compileDatECodeRequest)
            Return Me.BegincompileDatECode(request, callback, asyncState)
        End Function
        
        Private Function OnEndcompileDatECode(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.compileDatECodeResponse = Me.EndcompileDatECode(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OncompileDatECodeCompleted(ByVal state As Object)
            If (Not (Me.compileDatECodeCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent compileDatECodeCompleted(Me, New compileDatECodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub compileDatECodeAsync(ByVal request As SilverDAT.compileDatECodeRequest)
            Me.compileDatECodeAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub compileDatECodeAsync(ByVal request As SilverDAT.compileDatECodeRequest, ByVal userState As Object)
            If (Me.onBegincompileDatECodeDelegate Is Nothing) Then
                Me.onBegincompileDatECodeDelegate = AddressOf Me.OnBegincompileDatECode
            End If
            If (Me.onEndcompileDatECodeDelegate Is Nothing) Then
                Me.onEndcompileDatECodeDelegate = AddressOf Me.OnEndcompileDatECode
            End If
            If (Me.oncompileDatECodeCompletedDelegate Is Nothing) Then
                Me.oncompileDatECodeCompletedDelegate = AddressOf Me.OncompileDatECodeCompleted
            End If
            MyBase.InvokeAsync(Me.onBegincompileDatECodeDelegate, New Object() {request}, Me.onEndcompileDatECodeDelegate, Me.oncompileDatECodeCompletedDelegate, userState)
        End Sub
        
        Public Function getPriceDiscoveryContainers(ByVal request As SilverDAT.getPriceDiscoveryContainersRequest) As SilverDAT.getPriceDiscoveryContainersResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getPriceDiscoveryContainers
            Return MyBase.Channel.getPriceDiscoveryContainers(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetPriceDiscoveryContainers(ByVal request As SilverDAT.getPriceDiscoveryContainersRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetPriceDiscoveryContainers
            Return MyBase.Channel.BegingetPriceDiscoveryContainers(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetPriceDiscoveryContainers(ByVal result As System.IAsyncResult) As SilverDAT.getPriceDiscoveryContainersResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetPriceDiscoveryContainers
            Return MyBase.Channel.EndgetPriceDiscoveryContainers(result)
        End Function
        
        Private Function OnBegingetPriceDiscoveryContainers(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getPriceDiscoveryContainersRequest = CType(inValues(0),SilverDAT.getPriceDiscoveryContainersRequest)
            Return Me.BegingetPriceDiscoveryContainers(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetPriceDiscoveryContainers(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getPriceDiscoveryContainersResponse = Me.EndgetPriceDiscoveryContainers(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetPriceDiscoveryContainersCompleted(ByVal state As Object)
            If (Not (Me.getPriceDiscoveryContainersCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getPriceDiscoveryContainersCompleted(Me, New getPriceDiscoveryContainersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getPriceDiscoveryContainersAsync(ByVal request As SilverDAT.getPriceDiscoveryContainersRequest)
            Me.getPriceDiscoveryContainersAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getPriceDiscoveryContainersAsync(ByVal request As SilverDAT.getPriceDiscoveryContainersRequest, ByVal userState As Object)
            If (Me.onBegingetPriceDiscoveryContainersDelegate Is Nothing) Then
                Me.onBegingetPriceDiscoveryContainersDelegate = AddressOf Me.OnBegingetPriceDiscoveryContainers
            End If
            If (Me.onEndgetPriceDiscoveryContainersDelegate Is Nothing) Then
                Me.onEndgetPriceDiscoveryContainersDelegate = AddressOf Me.OnEndgetPriceDiscoveryContainers
            End If
            If (Me.ongetPriceDiscoveryContainersCompletedDelegate Is Nothing) Then
                Me.ongetPriceDiscoveryContainersCompletedDelegate = AddressOf Me.OngetPriceDiscoveryContainersCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetPriceDiscoveryContainersDelegate, New Object() {request}, Me.onEndgetPriceDiscoveryContainersDelegate, Me.ongetPriceDiscoveryContainersCompletedDelegate, userState)
        End Sub
        
        Public Function getPriceDiscoveryContainers1(ByVal request As SilverDAT.getPriceDiscoveryContainersRequest1) As SilverDAT.getPriceDiscoveryContainersResponse1 Implements SilverDAT.SDOSelectVehicleExtPortType.getPriceDiscoveryContainers1
            Return MyBase.Channel.getPriceDiscoveryContainers1(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetPriceDiscoveryContainers1(ByVal request As SilverDAT.getPriceDiscoveryContainersRequest1, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetPriceDiscoveryContainers1
            Return MyBase.Channel.BegingetPriceDiscoveryContainers1(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetPriceDiscoveryContainers1(ByVal result As System.IAsyncResult) As SilverDAT.getPriceDiscoveryContainersResponse1 Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetPriceDiscoveryContainers1
            Return MyBase.Channel.EndgetPriceDiscoveryContainers1(result)
        End Function
        
        Private Function OnBegingetPriceDiscoveryContainers1(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getPriceDiscoveryContainersRequest1 = CType(inValues(0),SilverDAT.getPriceDiscoveryContainersRequest1)
            Return Me.BegingetPriceDiscoveryContainers1(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetPriceDiscoveryContainers1(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getPriceDiscoveryContainersResponse1 = Me.EndgetPriceDiscoveryContainers1(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetPriceDiscoveryContainers1Completed(ByVal state As Object)
            If (Not (Me.getPriceDiscoveryContainers1CompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getPriceDiscoveryContainers1Completed(Me, New getPriceDiscoveryContainers1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getPriceDiscoveryContainers1Async(ByVal request As SilverDAT.getPriceDiscoveryContainersRequest1)
            Me.getPriceDiscoveryContainers1Async(request, Nothing)
        End Sub
        
        Public Overloads Sub getPriceDiscoveryContainers1Async(ByVal request As SilverDAT.getPriceDiscoveryContainersRequest1, ByVal userState As Object)
            If (Me.onBegingetPriceDiscoveryContainers1Delegate Is Nothing) Then
                Me.onBegingetPriceDiscoveryContainers1Delegate = AddressOf Me.OnBegingetPriceDiscoveryContainers1
            End If
            If (Me.onEndgetPriceDiscoveryContainers1Delegate Is Nothing) Then
                Me.onEndgetPriceDiscoveryContainers1Delegate = AddressOf Me.OnEndgetPriceDiscoveryContainers1
            End If
            If (Me.ongetPriceDiscoveryContainers1CompletedDelegate Is Nothing) Then
                Me.ongetPriceDiscoveryContainers1CompletedDelegate = AddressOf Me.OngetPriceDiscoveryContainers1Completed
            End If
            MyBase.InvokeAsync(Me.onBegingetPriceDiscoveryContainers1Delegate, New Object() {request}, Me.onEndgetPriceDiscoveryContainers1Delegate, Me.ongetPriceDiscoveryContainers1CompletedDelegate, userState)
        End Sub
        
        Public Function getPriceDiscoveryConstructionYears(ByVal request As SilverDAT.getPriceDiscoveryConstructionYearsRequest) As SilverDAT.getPriceDiscoveryConstructionYearsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getPriceDiscoveryConstructionYears
            Return MyBase.Channel.getPriceDiscoveryConstructionYears(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetPriceDiscoveryConstructionYears(ByVal request As SilverDAT.getPriceDiscoveryConstructionYearsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetPriceDiscoveryConstructionYears
            Return MyBase.Channel.BegingetPriceDiscoveryConstructionYears(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetPriceDiscoveryConstructionYears(ByVal result As System.IAsyncResult) As SilverDAT.getPriceDiscoveryConstructionYearsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetPriceDiscoveryConstructionYears
            Return MyBase.Channel.EndgetPriceDiscoveryConstructionYears(result)
        End Function
        
        Private Function OnBegingetPriceDiscoveryConstructionYears(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getPriceDiscoveryConstructionYearsRequest = CType(inValues(0),SilverDAT.getPriceDiscoveryConstructionYearsRequest)
            Return Me.BegingetPriceDiscoveryConstructionYears(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetPriceDiscoveryConstructionYears(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getPriceDiscoveryConstructionYearsResponse = Me.EndgetPriceDiscoveryConstructionYears(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetPriceDiscoveryConstructionYearsCompleted(ByVal state As Object)
            If (Not (Me.getPriceDiscoveryConstructionYearsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getPriceDiscoveryConstructionYearsCompleted(Me, New getPriceDiscoveryConstructionYearsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getPriceDiscoveryConstructionYearsAsync(ByVal request As SilverDAT.getPriceDiscoveryConstructionYearsRequest)
            Me.getPriceDiscoveryConstructionYearsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getPriceDiscoveryConstructionYearsAsync(ByVal request As SilverDAT.getPriceDiscoveryConstructionYearsRequest, ByVal userState As Object)
            If (Me.onBegingetPriceDiscoveryConstructionYearsDelegate Is Nothing) Then
                Me.onBegingetPriceDiscoveryConstructionYearsDelegate = AddressOf Me.OnBegingetPriceDiscoveryConstructionYears
            End If
            If (Me.onEndgetPriceDiscoveryConstructionYearsDelegate Is Nothing) Then
                Me.onEndgetPriceDiscoveryConstructionYearsDelegate = AddressOf Me.OnEndgetPriceDiscoveryConstructionYears
            End If
            If (Me.ongetPriceDiscoveryConstructionYearsCompletedDelegate Is Nothing) Then
                Me.ongetPriceDiscoveryConstructionYearsCompletedDelegate = AddressOf Me.OngetPriceDiscoveryConstructionYearsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetPriceDiscoveryConstructionYearsDelegate, New Object() {request}, Me.onEndgetPriceDiscoveryConstructionYearsDelegate, Me.ongetPriceDiscoveryConstructionYearsCompletedDelegate, userState)
        End Sub
        
        Public Function getConstructionPeriod(ByVal request As SilverDAT.getConstructionPeriodRequest) As SilverDAT.getConstructionPeriodResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getConstructionPeriod
            Return MyBase.Channel.getConstructionPeriod(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetConstructionPeriod(ByVal request As SilverDAT.getConstructionPeriodRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetConstructionPeriod
            Return MyBase.Channel.BegingetConstructionPeriod(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetConstructionPeriod(ByVal result As System.IAsyncResult) As SilverDAT.getConstructionPeriodResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetConstructionPeriod
            Return MyBase.Channel.EndgetConstructionPeriod(result)
        End Function
        
        Private Function OnBegingetConstructionPeriod(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getConstructionPeriodRequest = CType(inValues(0),SilverDAT.getConstructionPeriodRequest)
            Return Me.BegingetConstructionPeriod(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetConstructionPeriod(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getConstructionPeriodResponse = Me.EndgetConstructionPeriod(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetConstructionPeriodCompleted(ByVal state As Object)
            If (Not (Me.getConstructionPeriodCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getConstructionPeriodCompleted(Me, New getConstructionPeriodCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getConstructionPeriodAsync(ByVal request As SilverDAT.getConstructionPeriodRequest)
            Me.getConstructionPeriodAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getConstructionPeriodAsync(ByVal request As SilverDAT.getConstructionPeriodRequest, ByVal userState As Object)
            If (Me.onBegingetConstructionPeriodDelegate Is Nothing) Then
                Me.onBegingetConstructionPeriodDelegate = AddressOf Me.OnBegingetConstructionPeriod
            End If
            If (Me.onEndgetConstructionPeriodDelegate Is Nothing) Then
                Me.onEndgetConstructionPeriodDelegate = AddressOf Me.OnEndgetConstructionPeriod
            End If
            If (Me.ongetConstructionPeriodCompletedDelegate Is Nothing) Then
                Me.ongetConstructionPeriodCompletedDelegate = AddressOf Me.OngetConstructionPeriodCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetConstructionPeriodDelegate, New Object() {request}, Me.onEndgetConstructionPeriodDelegate, Me.ongetConstructionPeriodCompletedDelegate, userState)
        End Sub
        
        Public Function mapEdvCode2ValueCode(ByVal request As SilverDAT.mapEdvCode2ValueCodeRequest) As SilverDAT.mapEdvCode2ValueCodeResponse Implements SilverDAT.SDOSelectVehicleExtPortType.mapEdvCode2ValueCode
            Return MyBase.Channel.mapEdvCode2ValueCode(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginmapEdvCode2ValueCode(ByVal request As SilverDAT.mapEdvCode2ValueCodeRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BeginmapEdvCode2ValueCode
            Return MyBase.Channel.BeginmapEdvCode2ValueCode(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndmapEdvCode2ValueCode(ByVal result As System.IAsyncResult) As SilverDAT.mapEdvCode2ValueCodeResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndmapEdvCode2ValueCode
            Return MyBase.Channel.EndmapEdvCode2ValueCode(result)
        End Function
        
        Private Function OnBeginmapEdvCode2ValueCode(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.mapEdvCode2ValueCodeRequest = CType(inValues(0),SilverDAT.mapEdvCode2ValueCodeRequest)
            Return Me.BeginmapEdvCode2ValueCode(request, callback, asyncState)
        End Function
        
        Private Function OnEndmapEdvCode2ValueCode(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.mapEdvCode2ValueCodeResponse = Me.EndmapEdvCode2ValueCode(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnmapEdvCode2ValueCodeCompleted(ByVal state As Object)
            If (Not (Me.mapEdvCode2ValueCodeCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent mapEdvCode2ValueCodeCompleted(Me, New mapEdvCode2ValueCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub mapEdvCode2ValueCodeAsync(ByVal request As SilverDAT.mapEdvCode2ValueCodeRequest)
            Me.mapEdvCode2ValueCodeAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub mapEdvCode2ValueCodeAsync(ByVal request As SilverDAT.mapEdvCode2ValueCodeRequest, ByVal userState As Object)
            If (Me.onBeginmapEdvCode2ValueCodeDelegate Is Nothing) Then
                Me.onBeginmapEdvCode2ValueCodeDelegate = AddressOf Me.OnBeginmapEdvCode2ValueCode
            End If
            If (Me.onEndmapEdvCode2ValueCodeDelegate Is Nothing) Then
                Me.onEndmapEdvCode2ValueCodeDelegate = AddressOf Me.OnEndmapEdvCode2ValueCode
            End If
            If (Me.onmapEdvCode2ValueCodeCompletedDelegate Is Nothing) Then
                Me.onmapEdvCode2ValueCodeCompletedDelegate = AddressOf Me.OnmapEdvCode2ValueCodeCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginmapEdvCode2ValueCodeDelegate, New Object() {request}, Me.onEndmapEdvCode2ValueCodeDelegate, Me.onmapEdvCode2ValueCodeCompletedDelegate, userState)
        End Sub
        
        Public Function kba2ValueCode(ByVal request As SilverDAT.kba2ValueCodeRequest) As SilverDAT.kba2ValueCodeResponse Implements SilverDAT.SDOSelectVehicleExtPortType.kba2ValueCode
            Return MyBase.Channel.kba2ValueCode(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function Beginkba2ValueCode(ByVal request As SilverDAT.kba2ValueCodeRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.Beginkba2ValueCode
            Return MyBase.Channel.Beginkba2ValueCode(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function Endkba2ValueCode(ByVal result As System.IAsyncResult) As SilverDAT.kba2ValueCodeResponse Implements SilverDAT.SDOSelectVehicleExtPortType.Endkba2ValueCode
            Return MyBase.Channel.Endkba2ValueCode(result)
        End Function
        
        Private Function OnBeginkba2ValueCode(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.kba2ValueCodeRequest = CType(inValues(0),SilverDAT.kba2ValueCodeRequest)
            Return Me.Beginkba2ValueCode(request, callback, asyncState)
        End Function
        
        Private Function OnEndkba2ValueCode(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.kba2ValueCodeResponse = Me.Endkba2ValueCode(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub Onkba2ValueCodeCompleted(ByVal state As Object)
            If (Not (Me.kba2ValueCodeCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent kba2ValueCodeCompleted(Me, New kba2ValueCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub kba2ValueCodeAsync(ByVal request As SilverDAT.kba2ValueCodeRequest)
            Me.kba2ValueCodeAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub kba2ValueCodeAsync(ByVal request As SilverDAT.kba2ValueCodeRequest, ByVal userState As Object)
            If (Me.onBeginkba2ValueCodeDelegate Is Nothing) Then
                Me.onBeginkba2ValueCodeDelegate = AddressOf Me.OnBeginkba2ValueCode
            End If
            If (Me.onEndkba2ValueCodeDelegate Is Nothing) Then
                Me.onEndkba2ValueCodeDelegate = AddressOf Me.OnEndkba2ValueCode
            End If
            If (Me.onkba2ValueCodeCompletedDelegate Is Nothing) Then
                Me.onkba2ValueCodeCompletedDelegate = AddressOf Me.Onkba2ValueCodeCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginkba2ValueCodeDelegate, New Object() {request}, Me.onEndkba2ValueCodeDelegate, Me.onkba2ValueCodeCompletedDelegate, userState)
        End Sub
        
        Public Function kba2ValueCodeWithDesc(ByVal request As SilverDAT.kba2ValueCodeWithDescRequest) As SilverDAT.kba2ValueCodeWithDescResponse Implements SilverDAT.SDOSelectVehicleExtPortType.kba2ValueCodeWithDesc
            Return MyBase.Channel.kba2ValueCodeWithDesc(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function Beginkba2ValueCodeWithDesc(ByVal request As SilverDAT.kba2ValueCodeWithDescRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.Beginkba2ValueCodeWithDesc
            Return MyBase.Channel.Beginkba2ValueCodeWithDesc(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function Endkba2ValueCodeWithDesc(ByVal result As System.IAsyncResult) As SilverDAT.kba2ValueCodeWithDescResponse Implements SilverDAT.SDOSelectVehicleExtPortType.Endkba2ValueCodeWithDesc
            Return MyBase.Channel.Endkba2ValueCodeWithDesc(result)
        End Function
        
        Private Function OnBeginkba2ValueCodeWithDesc(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.kba2ValueCodeWithDescRequest = CType(inValues(0),SilverDAT.kba2ValueCodeWithDescRequest)
            Return Me.Beginkba2ValueCodeWithDesc(request, callback, asyncState)
        End Function
        
        Private Function OnEndkba2ValueCodeWithDesc(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.kba2ValueCodeWithDescResponse = Me.Endkba2ValueCodeWithDesc(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub Onkba2ValueCodeWithDescCompleted(ByVal state As Object)
            If (Not (Me.kba2ValueCodeWithDescCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent kba2ValueCodeWithDescCompleted(Me, New kba2ValueCodeWithDescCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub kba2ValueCodeWithDescAsync(ByVal request As SilverDAT.kba2ValueCodeWithDescRequest)
            Me.kba2ValueCodeWithDescAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub kba2ValueCodeWithDescAsync(ByVal request As SilverDAT.kba2ValueCodeWithDescRequest, ByVal userState As Object)
            If (Me.onBeginkba2ValueCodeWithDescDelegate Is Nothing) Then
                Me.onBeginkba2ValueCodeWithDescDelegate = AddressOf Me.OnBeginkba2ValueCodeWithDesc
            End If
            If (Me.onEndkba2ValueCodeWithDescDelegate Is Nothing) Then
                Me.onEndkba2ValueCodeWithDescDelegate = AddressOf Me.OnEndkba2ValueCodeWithDesc
            End If
            If (Me.onkba2ValueCodeWithDescCompletedDelegate Is Nothing) Then
                Me.onkba2ValueCodeWithDescCompletedDelegate = AddressOf Me.Onkba2ValueCodeWithDescCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginkba2ValueCodeWithDescDelegate, New Object() {request}, Me.onEndkba2ValueCodeWithDescDelegate, Me.onkba2ValueCodeWithDescCompletedDelegate, userState)
        End Sub
        
        Public Function getPriceDiscoveryLabels(ByVal request As SilverDAT.getPriceDiscoveryLabelsRequest) As SilverDAT.getPriceDiscoveryLabelsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.getPriceDiscoveryLabels
            Return MyBase.Channel.getPriceDiscoveryLabels(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetPriceDiscoveryLabels(ByVal request As SilverDAT.getPriceDiscoveryLabelsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BegingetPriceDiscoveryLabels
            Return MyBase.Channel.BegingetPriceDiscoveryLabels(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetPriceDiscoveryLabels(ByVal result As System.IAsyncResult) As SilverDAT.getPriceDiscoveryLabelsResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndgetPriceDiscoveryLabels
            Return MyBase.Channel.EndgetPriceDiscoveryLabels(result)
        End Function
        
        Private Function OnBegingetPriceDiscoveryLabels(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getPriceDiscoveryLabelsRequest = CType(inValues(0),SilverDAT.getPriceDiscoveryLabelsRequest)
            Return Me.BegingetPriceDiscoveryLabels(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetPriceDiscoveryLabels(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getPriceDiscoveryLabelsResponse = Me.EndgetPriceDiscoveryLabels(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetPriceDiscoveryLabelsCompleted(ByVal state As Object)
            If (Not (Me.getPriceDiscoveryLabelsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getPriceDiscoveryLabelsCompleted(Me, New getPriceDiscoveryLabelsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getPriceDiscoveryLabelsAsync(ByVal request As SilverDAT.getPriceDiscoveryLabelsRequest)
            Me.getPriceDiscoveryLabelsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getPriceDiscoveryLabelsAsync(ByVal request As SilverDAT.getPriceDiscoveryLabelsRequest, ByVal userState As Object)
            If (Me.onBegingetPriceDiscoveryLabelsDelegate Is Nothing) Then
                Me.onBegingetPriceDiscoveryLabelsDelegate = AddressOf Me.OnBegingetPriceDiscoveryLabels
            End If
            If (Me.onEndgetPriceDiscoveryLabelsDelegate Is Nothing) Then
                Me.onEndgetPriceDiscoveryLabelsDelegate = AddressOf Me.OnEndgetPriceDiscoveryLabels
            End If
            If (Me.ongetPriceDiscoveryLabelsCompletedDelegate Is Nothing) Then
                Me.ongetPriceDiscoveryLabelsCompletedDelegate = AddressOf Me.OngetPriceDiscoveryLabelsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetPriceDiscoveryLabelsDelegate, New Object() {request}, Me.onEndgetPriceDiscoveryLabelsDelegate, Me.ongetPriceDiscoveryLabelsCompletedDelegate, userState)
        End Sub
        
        Public Function valueCode2Description(ByVal request As SilverDAT.valueCode2DescriptionRequest) As SilverDAT.valueCode2DescriptionResponse Implements SilverDAT.SDOSelectVehicleExtPortType.valueCode2Description
            Return MyBase.Channel.valueCode2Description(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginvalueCode2Description(ByVal request As SilverDAT.valueCode2DescriptionRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BeginvalueCode2Description
            Return MyBase.Channel.BeginvalueCode2Description(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndvalueCode2Description(ByVal result As System.IAsyncResult) As SilverDAT.valueCode2DescriptionResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndvalueCode2Description
            Return MyBase.Channel.EndvalueCode2Description(result)
        End Function
        
        Private Function OnBeginvalueCode2Description(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.valueCode2DescriptionRequest = CType(inValues(0),SilverDAT.valueCode2DescriptionRequest)
            Return Me.BeginvalueCode2Description(request, callback, asyncState)
        End Function
        
        Private Function OnEndvalueCode2Description(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.valueCode2DescriptionResponse = Me.EndvalueCode2Description(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnvalueCode2DescriptionCompleted(ByVal state As Object)
            If (Not (Me.valueCode2DescriptionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent valueCode2DescriptionCompleted(Me, New valueCode2DescriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub valueCode2DescriptionAsync(ByVal request As SilverDAT.valueCode2DescriptionRequest)
            Me.valueCode2DescriptionAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub valueCode2DescriptionAsync(ByVal request As SilverDAT.valueCode2DescriptionRequest, ByVal userState As Object)
            If (Me.onBeginvalueCode2DescriptionDelegate Is Nothing) Then
                Me.onBeginvalueCode2DescriptionDelegate = AddressOf Me.OnBeginvalueCode2Description
            End If
            If (Me.onEndvalueCode2DescriptionDelegate Is Nothing) Then
                Me.onEndvalueCode2DescriptionDelegate = AddressOf Me.OnEndvalueCode2Description
            End If
            If (Me.onvalueCode2DescriptionCompletedDelegate Is Nothing) Then
                Me.onvalueCode2DescriptionCompletedDelegate = AddressOf Me.OnvalueCode2DescriptionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginvalueCode2DescriptionDelegate, New Object() {request}, Me.onEndvalueCode2DescriptionDelegate, Me.onvalueCode2DescriptionCompletedDelegate, userState)
        End Sub
        
        Public Function date2ConstructionTime(ByVal request As SilverDAT.date2ConstructionTimeRequest) As SilverDAT.date2ConstructionTimeResponse Implements SilverDAT.SDOSelectVehicleExtPortType.date2ConstructionTime
            Return MyBase.Channel.date2ConstructionTime(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function Begindate2ConstructionTime(ByVal request As SilverDAT.date2ConstructionTimeRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.Begindate2ConstructionTime
            Return MyBase.Channel.Begindate2ConstructionTime(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function Enddate2ConstructionTime(ByVal result As System.IAsyncResult) As SilverDAT.date2ConstructionTimeResponse Implements SilverDAT.SDOSelectVehicleExtPortType.Enddate2ConstructionTime
            Return MyBase.Channel.Enddate2ConstructionTime(result)
        End Function
        
        Private Function OnBegindate2ConstructionTime(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.date2ConstructionTimeRequest = CType(inValues(0),SilverDAT.date2ConstructionTimeRequest)
            Return Me.Begindate2ConstructionTime(request, callback, asyncState)
        End Function
        
        Private Function OnEnddate2ConstructionTime(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.date2ConstructionTimeResponse = Me.Enddate2ConstructionTime(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub Ondate2ConstructionTimeCompleted(ByVal state As Object)
            If (Not (Me.date2ConstructionTimeCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent date2ConstructionTimeCompleted(Me, New date2ConstructionTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub date2ConstructionTimeAsync(ByVal request As SilverDAT.date2ConstructionTimeRequest)
            Me.date2ConstructionTimeAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub date2ConstructionTimeAsync(ByVal request As SilverDAT.date2ConstructionTimeRequest, ByVal userState As Object)
            If (Me.onBegindate2ConstructionTimeDelegate Is Nothing) Then
                Me.onBegindate2ConstructionTimeDelegate = AddressOf Me.OnBegindate2ConstructionTime
            End If
            If (Me.onEnddate2ConstructionTimeDelegate Is Nothing) Then
                Me.onEnddate2ConstructionTimeDelegate = AddressOf Me.OnEnddate2ConstructionTime
            End If
            If (Me.ondate2ConstructionTimeCompletedDelegate Is Nothing) Then
                Me.ondate2ConstructionTimeCompletedDelegate = AddressOf Me.Ondate2ConstructionTimeCompleted
            End If
            MyBase.InvokeAsync(Me.onBegindate2ConstructionTimeDelegate, New Object() {request}, Me.onEnddate2ConstructionTimeDelegate, Me.ondate2ConstructionTimeCompletedDelegate, userState)
        End Sub
        
        Public Function constructionTime2Date(ByVal request As SilverDAT.constructionTime2DateRequest) As SilverDAT.constructionTime2DateResponse Implements SilverDAT.SDOSelectVehicleExtPortType.constructionTime2Date
            Return MyBase.Channel.constructionTime2Date(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginconstructionTime2Date(ByVal request As SilverDAT.constructionTime2DateRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOSelectVehicleExtPortType.BeginconstructionTime2Date
            Return MyBase.Channel.BeginconstructionTime2Date(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndconstructionTime2Date(ByVal result As System.IAsyncResult) As SilverDAT.constructionTime2DateResponse Implements SilverDAT.SDOSelectVehicleExtPortType.EndconstructionTime2Date
            Return MyBase.Channel.EndconstructionTime2Date(result)
        End Function
        
        Private Function OnBeginconstructionTime2Date(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.constructionTime2DateRequest = CType(inValues(0),SilverDAT.constructionTime2DateRequest)
            Return Me.BeginconstructionTime2Date(request, callback, asyncState)
        End Function
        
        Private Function OnEndconstructionTime2Date(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.constructionTime2DateResponse = Me.EndconstructionTime2Date(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnconstructionTime2DateCompleted(ByVal state As Object)
            If (Not (Me.constructionTime2DateCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent constructionTime2DateCompleted(Me, New constructionTime2DateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub constructionTime2DateAsync(ByVal request As SilverDAT.constructionTime2DateRequest)
            Me.constructionTime2DateAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub constructionTime2DateAsync(ByVal request As SilverDAT.constructionTime2DateRequest, ByVal userState As Object)
            If (Me.onBeginconstructionTime2DateDelegate Is Nothing) Then
                Me.onBeginconstructionTime2DateDelegate = AddressOf Me.OnBeginconstructionTime2Date
            End If
            If (Me.onEndconstructionTime2DateDelegate Is Nothing) Then
                Me.onEndconstructionTime2DateDelegate = AddressOf Me.OnEndconstructionTime2Date
            End If
            If (Me.onconstructionTime2DateCompletedDelegate Is Nothing) Then
                Me.onconstructionTime2DateCompletedDelegate = AddressOf Me.OnconstructionTime2DateCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginconstructionTime2DateDelegate, New Object() {request}, Me.onEndconstructionTime2DateDelegate, Me.onconstructionTime2DateCompletedDelegate, userState)
        End Sub
    End Class
End Namespace
