'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.261
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace SilverDAT
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://www.dat.de/u3/SDOnlineService.jws", ConfigurationName:="SilverDAT.SDOnlineService")>  _
    Friend Interface SDOnlineService
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function addFileReferenceImage(ByVal request As SilverDAT.addFileReferenceImageRequest) As SilverDAT.addFileReferenceImageResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginaddFileReferenceImage(ByVal request As SilverDAT.addFileReferenceImageRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndaddFileReferenceImage(ByVal result As System.IAsyncResult) As SilverDAT.addFileReferenceImageResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function getFileReference(ByVal request As SilverDAT.getFileReferenceRequest) As SilverDAT.getFileReferenceResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetFileReference(ByVal request As SilverDAT.getFileReferenceRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetFileReference(ByVal result As System.IAsyncResult) As SilverDAT.getFileReferenceResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function reEvaluateByPid(ByVal request As SilverDAT.reEvaluateByPidRequest) As SilverDAT.reEvaluateByPidResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginreEvaluateByPid(ByVal request As SilverDAT.reEvaluateByPidRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndreEvaluateByPid(ByVal result As System.IAsyncResult) As SilverDAT.reEvaluateByPidResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function reEvaluate(ByVal request As SilverDAT.reEvaluateRequest) As SilverDAT.reEvaluateResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginreEvaluate(ByVal request As SilverDAT.reEvaluateRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndreEvaluate(ByVal result As System.IAsyncResult) As SilverDAT.reEvaluateResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function minimalEvaluate(ByVal request As SilverDAT.minimalEvaluateRequest) As SilverDAT.minimalEvaluateResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginminimalEvaluate(ByVal request As SilverDAT.minimalEvaluateRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndminimalEvaluate(ByVal result As System.IAsyncResult) As SilverDAT.minimalEvaluateResponse


        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function minimalEvaluateByKba(ByVal request As SilverDAT.minimalEvaluateByKbaRequest) As SilverDAT.minimalEvaluateByKbaResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginminimalEvaluateByKba(ByVal request As SilverDAT.minimalEvaluateByKbaRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndminimalEvaluateByKba(ByVal result As System.IAsyncResult) As SilverDAT.minimalEvaluateByKbaResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function minimalEvaluateByPid(ByVal request As SilverDAT.minimalEvaluateByPidRequest) As SilverDAT.minimalEvaluateByPidResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginminimalEvaluateByPid(ByVal request As SilverDAT.minimalEvaluateByPidRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndminimalEvaluateByPid(ByVal result As System.IAsyncResult) As SilverDAT.minimalEvaluateByPidResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function reEvaluateWithDATDefaultsByPid(ByVal request As SilverDAT.reEvaluateWithDATDefaultsByPidRequest) As SilverDAT.reEvaluateWithDATDefaultsByPidResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginreEvaluateWithDATDefaultsByPid(ByVal request As SilverDAT.reEvaluateWithDATDefaultsByPidRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndreEvaluateWithDATDefaultsByPid(ByVal result As System.IAsyncResult) As SilverDAT.reEvaluateWithDATDefaultsByPidResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function reEvaluateWithDATDefaults(ByVal request As SilverDAT.reEvaluateWithDATDefaultsRequest) As SilverDAT.reEvaluateWithDATDefaultsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginreEvaluateWithDATDefaults(ByVal request As SilverDAT.reEvaluateWithDATDefaultsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndreEvaluateWithDATDefaults(ByVal result As System.IAsyncResult) As SilverDAT.reEvaluateWithDATDefaultsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function getFileReferenceHeadDataList(ByVal request As SilverDAT.getFileReferenceHeadDataListRequest) As SilverDAT.getFileReferenceHeadDataListResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetFileReferenceHeadDataList(ByVal request As SilverDAT.getFileReferenceHeadDataListRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetFileReferenceHeadDataList(ByVal result As System.IAsyncResult) As SilverDAT.getFileReferenceHeadDataListResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function deleteFileReference(ByVal request As SilverDAT.deleteFileReferenceRequest) As SilverDAT.deleteFileReferenceResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegindeleteFileReference(ByVal request As SilverDAT.deleteFileReferenceRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EnddeleteFileReference(ByVal result As System.IAsyncResult) As SilverDAT.deleteFileReferenceResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function getComprehensiveEquipments(ByVal request As SilverDAT.getComprehensiveEquipmentsRequest) As SilverDAT.getComprehensiveEquipmentsResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetComprehensiveEquipments(ByVal request As SilverDAT.getComprehensiveEquipmentsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetComprehensiveEquipments(ByVal result As System.IAsyncResult) As SilverDAT.getComprehensiveEquipmentsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function getFileReferenceImage(ByVal request As SilverDAT.getFileReferenceImageRequest) As SilverDAT.getFileReferenceImageResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetFileReferenceImage(ByVal request As SilverDAT.getFileReferenceImageRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetFileReferenceImage(ByVal result As System.IAsyncResult) As SilverDAT.getFileReferenceImageResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function getFileReferenceImageContent(ByVal request As SilverDAT.getFileReferenceImageContentRequest) As SilverDAT.getFileReferenceImageContentResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetFileReferenceImageContent(ByVal request As SilverDAT.getFileReferenceImageContentRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetFileReferenceImageContent(ByVal result As System.IAsyncResult) As SilverDAT.getFileReferenceImageContentResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function deleteFileReferenceImage(ByVal request As SilverDAT.deleteFileReferenceImageRequest) As SilverDAT.deleteFileReferenceImageResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegindeleteFileReferenceImage(ByVal request As SilverDAT.deleteFileReferenceImageRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EnddeleteFileReferenceImage(ByVal result As System.IAsyncResult) As SilverDAT.deleteFileReferenceImageResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function updateFileReferenceImage(ByVal request As SilverDAT.updateFileReferenceImageRequest) As SilverDAT.updateFileReferenceImageResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginupdateFileReferenceImage(ByVal request As SilverDAT.updateFileReferenceImageRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndupdateFileReferenceImage(ByVal result As System.IAsyncResult) As SilverDAT.updateFileReferenceImageResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function reEvaluateByPidList(ByVal request As SilverDAT.reEvaluateByPidListRequest) As SilverDAT.reEvaluateByPidListResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginreEvaluateByPidList(ByVal request As SilverDAT.reEvaluateByPidListRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndreEvaluateByPidList(ByVal result As System.IAsyncResult) As SilverDAT.reEvaluateByPidListResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function minimalEvaluateInventory(ByVal request As SilverDAT.minimalEvaluateInventoryRequest) As SilverDAT.minimalEvaluateInventoryResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginminimalEvaluateInventory(ByVal request As SilverDAT.minimalEvaluateInventoryRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndminimalEvaluateInventory(ByVal result As System.IAsyncResult) As SilverDAT.minimalEvaluateInventoryResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function reEvaluateInventory(ByVal request As SilverDAT.reEvaluateInventoryRequest) As SilverDAT.reEvaluateInventoryResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginreEvaluateInventory(ByVal request As SilverDAT.reEvaluateInventoryRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndreEvaluateInventory(ByVal result As System.IAsyncResult) As SilverDAT.reEvaluateInventoryResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function changeFileReferenceState(ByVal request As SilverDAT.changeFileReferenceStateRequest) As SilverDAT.changeFileReferenceStateResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginchangeFileReferenceState(ByVal request As SilverDAT.changeFileReferenceStateRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndchangeFileReferenceState(ByVal result As System.IAsyncResult) As SilverDAT.changeFileReferenceStateResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function cancelFileReferenceState(ByVal request As SilverDAT.cancelFileReferenceStateRequest) As SilverDAT.cancelFileReferenceStateResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegincancelFileReferenceState(ByVal request As SilverDAT.cancelFileReferenceStateRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndcancelFileReferenceState(ByVal result As System.IAsyncResult) As SilverDAT.cancelFileReferenceStateResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function getFileReferenceCustomers(ByVal request As SilverDAT.getFileReferenceCustomersRequest) As SilverDAT.getFileReferenceCustomersResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetFileReferenceCustomers(ByVal request As SilverDAT.getFileReferenceCustomersRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetFileReferenceCustomers(ByVal result As System.IAsyncResult) As SilverDAT.getFileReferenceCustomersResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function setFileReferenceCustomer(ByVal request As SilverDAT.setFileReferenceCustomerRequest) As SilverDAT.setFileReferenceCustomerResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BeginsetFileReferenceCustomer(ByVal request As SilverDAT.setFileReferenceCustomerRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndsetFileReferenceCustomer(ByVal result As System.IAsyncResult) As SilverDAT.setFileReferenceCustomerResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function getUserList(ByVal request As SilverDAT.getUserListRequest) As SilverDAT.getUserListResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="", ReplyAction:="*")>  _
        Function BegingetUserList(ByVal request As SilverDAT.getUserListRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetUserList(ByVal result As System.IAsyncResult) As SilverDAT.getUserListResponse
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="addFileReferenceImage", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class addFileReferenceImageRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public pid As Long
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public defaultImage As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public sendToMarket As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public description As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7),  _
         System.Xml.Serialization.SoapElementAttribute(DataType:="base64Binary")>  _
        Public imageData() As Byte
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal pid As Long, ByVal defaultImage As Boolean, ByVal sendToMarket As Boolean, ByVal description As String, ByVal imageData() As Byte)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.pid = pid
            Me.defaultImage = defaultImage
            Me.sendToMarket = sendToMarket
            Me.description = description
            Me.imageData = imageData
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="addFileReferenceImageResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class addFileReferenceImageResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public addFileReferenceImageReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal addFileReferenceImageReturn As String)
            MyBase.New
            Me.addFileReferenceImageReturn = addFileReferenceImageReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getFileReference", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class getFileReferenceRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public pid As Long
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal pid As Long)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.pid = pid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getFileReferenceResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class getFileReferenceResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getFileReferenceReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getFileReferenceReturn As String)
            MyBase.New
            Me.getFileReferenceReturn = getFileReferenceReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="reEvaluateByPid", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class reEvaluateByPidRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public pid As Long
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal pid As Long)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.pid = pid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="reEvaluateByPidResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class reEvaluateByPidResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public reEvaluateByPidReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal reEvaluateByPidReturn As String)
            MyBase.New
            Me.reEvaluateByPidReturn = reEvaluateByPidReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="reEvaluate", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class reEvaluateRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public fileReference As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public autosave As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal fileReference As String, ByVal autosave As Boolean)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.fileReference = fileReference
            Me.autosave = autosave
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="reEvaluateResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class reEvaluateResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public reEvaluateReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal reEvaluateReturn As String)
            MyBase.New
            Me.reEvaluateReturn = reEvaluateReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="minimalEvaluate", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class minimalEvaluateRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public edvCode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public kbaCode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public datECode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public firstPermission As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public constructionYear As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public mileage As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=9)>  _
        Public calcMode As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=10)> _
        Public save As Boolean

        Public Sub New()
            MyBase.New()
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal edvCode As String, ByVal kbaCode As String, ByVal datECode As String, ByVal firstPermission As String, ByVal constructionYear As Integer, ByVal mileage As Integer, ByVal calcMode As Integer, ByVal save As Boolean)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.edvCode = edvCode
            Me.kbaCode = kbaCode
            Me.datECode = datECode
            Me.firstPermission = firstPermission
            Me.constructionYear = constructionYear
            Me.mileage = mileage
            Me.calcMode = calcMode
            Me.save = save
        End Sub
    End Class

    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="minimalEvaluateResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class minimalEvaluateResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public minimalEvaluateReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal minimalEvaluateReturn As String)
            MyBase.New
            Me.minimalEvaluateReturn = minimalEvaluateReturn
        End Sub
    End Class


    
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="minimalEvaluateByKba", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class minimalEvaluateByKbaRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public kbaCode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public firstPermission As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public constructionYear As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public mileage As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public equipmentNeupreis As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public calcMode As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=9)>  _
        Public save As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal kbaCode As String, ByVal firstPermission As String, ByVal constructionYear As Integer, ByVal mileage As Integer, ByVal equipmentNeupreis As Integer, ByVal calcMode As Integer, ByVal save As Boolean)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.kbaCode = kbaCode
            Me.firstPermission = firstPermission
            Me.constructionYear = constructionYear
            Me.mileage = mileage
            Me.equipmentNeupreis = equipmentNeupreis
            Me.calcMode = calcMode
            Me.save = save
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="minimalEvaluateByKbaResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class minimalEvaluateByKbaResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public minimalEvaluateByKbaReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal minimalEvaluateByKbaReturn As String)
            MyBase.New
            Me.minimalEvaluateByKbaReturn = minimalEvaluateByKbaReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="minimalEvaluateByPid", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class minimalEvaluateByPidRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public pid As Long
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal pid As Long)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.pid = pid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="minimalEvaluateByPidResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class minimalEvaluateByPidResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public minimalEvaluateByPidReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal minimalEvaluateByPidReturn As String)
            MyBase.New
            Me.minimalEvaluateByPidReturn = minimalEvaluateByPidReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="reEvaluateWithDATDefaultsByPid", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class reEvaluateWithDATDefaultsByPidRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public pid As Long
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal pid As Long)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.pid = pid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="reEvaluateWithDATDefaultsByPidResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class reEvaluateWithDATDefaultsByPidResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public reEvaluateWithDATDefaultsByPidReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal reEvaluateWithDATDefaultsByPidReturn As String)
            MyBase.New
            Me.reEvaluateWithDATDefaultsByPidReturn = reEvaluateWithDATDefaultsByPidReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="reEvaluateWithDATDefaults", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class reEvaluateWithDATDefaultsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public fileReference As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public autosave As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal fileReference As String, ByVal autosave As Boolean)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.fileReference = fileReference
            Me.autosave = autosave
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="reEvaluateWithDATDefaultsResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class reEvaluateWithDATDefaultsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public reEvaluateWithDATDefaultsReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal reEvaluateWithDATDefaultsReturn As String)
            MyBase.New
            Me.reEvaluateWithDATDefaultsReturn = reEvaluateWithDATDefaultsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getFileReferenceHeadDataList", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class getFileReferenceHeadDataListRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public criteria As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal criteria As String)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.criteria = criteria
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getFileReferenceHeadDataListResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class getFileReferenceHeadDataListResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getFileReferenceHeadDataListReturn() As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getFileReferenceHeadDataListReturn() As String)
            MyBase.New
            Me.getFileReferenceHeadDataListReturn = getFileReferenceHeadDataListReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="deleteFileReference", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class deleteFileReferenceRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public pid As Long
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal pid As Long)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.pid = pid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="deleteFileReferenceResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class deleteFileReferenceResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public deleteFileReferenceReturn As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal deleteFileReferenceReturn As Boolean)
            MyBase.New
            Me.deleteFileReferenceReturn = deleteFileReferenceReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getComprehensiveEquipments", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class getComprehensiveEquipmentsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getComprehensiveEquipmentsResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class getComprehensiveEquipmentsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getComprehensiveEquipmentsReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getComprehensiveEquipmentsReturn As String)
            MyBase.New
            Me.getComprehensiveEquipmentsReturn = getComprehensiveEquipmentsReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getFileReferenceImage", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class getFileReferenceImageRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public pid As Long
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal pid As Long)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.pid = pid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getFileReferenceImageResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class getFileReferenceImageResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getFileReferenceImageReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getFileReferenceImageReturn As String)
            MyBase.New
            Me.getFileReferenceImageReturn = getFileReferenceImageReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getFileReferenceImageContent", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class getFileReferenceImageContentRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public pid As Long
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public imagePid As Long
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal pid As Long, ByVal imagePid As Long)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.pid = pid
            Me.imagePid = imagePid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getFileReferenceImageContentResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class getFileReferenceImageContentResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0),  _
         System.Xml.Serialization.SoapElementAttribute(DataType:="base64Binary")>  _
        Public getFileReferenceImageContentReturn() As Byte
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getFileReferenceImageContentReturn() As Byte)
            MyBase.New
            Me.getFileReferenceImageContentReturn = getFileReferenceImageContentReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="deleteFileReferenceImage", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class deleteFileReferenceImageRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public pid As Long
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public imagePid As Decimal
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal pid As Long, ByVal imagePid As Decimal)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.pid = pid
            Me.imagePid = imagePid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="deleteFileReferenceImageResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class deleteFileReferenceImageResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public deleteFileReferenceImageReturn As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal deleteFileReferenceImageReturn As Boolean)
            MyBase.New
            Me.deleteFileReferenceImageReturn = deleteFileReferenceImageReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="updateFileReferenceImage", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class updateFileReferenceImageRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public pid As Long
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public defaultImage As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public sendToMarket As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public description As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7),  _
         System.Xml.Serialization.SoapElementAttribute(DataType:="base64Binary")>  _
        Public imageData() As Byte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public imagePid As Decimal
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal pid As Long, ByVal defaultImage As Boolean, ByVal sendToMarket As Boolean, ByVal description As String, ByVal imageData() As Byte, ByVal imagePid As Decimal)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.pid = pid
            Me.defaultImage = defaultImage
            Me.sendToMarket = sendToMarket
            Me.description = description
            Me.imageData = imageData
            Me.imagePid = imagePid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="updateFileReferenceImageResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class updateFileReferenceImageResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public updateFileReferenceImageReturn As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal updateFileReferenceImageReturn As Boolean)
            MyBase.New
            Me.updateFileReferenceImageReturn = updateFileReferenceImageReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="reEvaluateByPidList", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class reEvaluateByPidListRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public pid() As Long
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal pid() As Long)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.pid = pid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="reEvaluateByPidListResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class reEvaluateByPidListResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public reEvaluateByPidListReturn() As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal reEvaluateByPidListReturn() As String)
            MyBase.New
            Me.reEvaluateByPidListReturn = reEvaluateByPidListReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="minimalEvaluateInventory", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class minimalEvaluateInventoryRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="minimalEvaluateInventoryResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class minimalEvaluateInventoryResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public minimalEvaluateInventoryReturn() As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal minimalEvaluateInventoryReturn() As String)
            MyBase.New
            Me.minimalEvaluateInventoryReturn = minimalEvaluateInventoryReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="reEvaluateInventory", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class reEvaluateInventoryRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="reEvaluateInventoryResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class reEvaluateInventoryResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public reEvaluateInventoryReturn() As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal reEvaluateInventoryReturn() As String)
            MyBase.New
            Me.reEvaluateInventoryReturn = reEvaluateInventoryReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="changeFileReferenceState", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class changeFileReferenceStateRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public pid As Long
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public targetState As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public licenseNumberSign As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public contractDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public estimatedDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public preparationDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=9)>  _
        Public kindOfTaxation As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=10)>  _
        Public dealerPriceNet As Decimal
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=11)>  _
        Public dealerPriceGross As Decimal
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=12)>  _
        Public mileage As Long
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=13)>  _
        Public customer As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal pid As Long, ByVal targetState As Integer, ByVal licenseNumberSign As String, ByVal contractDate As Date, ByVal estimatedDate As Date, ByVal preparationDate As Date, ByVal kindOfTaxation As String, ByVal dealerPriceNet As Decimal, ByVal dealerPriceGross As Decimal, ByVal mileage As Long, ByVal customer As String)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.pid = pid
            Me.targetState = targetState
            Me.licenseNumberSign = licenseNumberSign
            Me.contractDate = contractDate
            Me.estimatedDate = estimatedDate
            Me.preparationDate = preparationDate
            Me.kindOfTaxation = kindOfTaxation
            Me.dealerPriceNet = dealerPriceNet
            Me.dealerPriceGross = dealerPriceGross
            Me.mileage = mileage
            Me.customer = customer
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="changeFileReferenceStateResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class changeFileReferenceStateResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public changeFileReferenceStateReturn As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal changeFileReferenceStateReturn As Integer)
            MyBase.New
            Me.changeFileReferenceStateReturn = changeFileReferenceStateReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="cancelFileReferenceState", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class cancelFileReferenceStateRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public pid As Long
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal pid As Long)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.pid = pid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="cancelFileReferenceStateResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class cancelFileReferenceStateResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public cancelFileReferenceStateReturn As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal cancelFileReferenceStateReturn As Integer)
            MyBase.New
            Me.cancelFileReferenceStateReturn = cancelFileReferenceStateReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getFileReferenceCustomers", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class getFileReferenceCustomersRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public pid As Long
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public addressType As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String, ByVal pid As Long, ByVal addressType As String)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.pid = pid
            Me.addressType = addressType
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getFileReferenceCustomersResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class getFileReferenceCustomersResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getFileReferenceCustomersReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getFileReferenceCustomersReturn As String)
            MyBase.New
            Me.getFileReferenceCustomersReturn = getFileReferenceCustomersReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setFileReferenceCustomer", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class setFileReferenceCustomerRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public pid As Long
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public addressType As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public companyName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public title As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public lastName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public firstName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=9)>  _
        Public birthday As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=10)>  _
        Public vatEntitled As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=11)>  _
        Public taxNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=12)>  _
        Public customerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=13)>  _
        Public country As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=14)>  _
        Public zipCode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=15)>  _
        Public city As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=16)>  _
        Public street As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=17)>  _
        Public poBox As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=18)>  _
        Public poBoxZipCode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=19)>  _
        Public eMail As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=20)>  _
        Public phoneBusiness As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=21)>  _
        Public phonePersonal As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=22)>  _
        Public phoneMobile As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=23)>  _
        Public fax As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=24)>  _
        Public customerType As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal datCustomerNumber As String,  _
                    ByVal userName As String,  _
                    ByVal password As String,  _
                    ByVal pid As Long,  _
                    ByVal addressType As String,  _
                    ByVal companyName As String,  _
                    ByVal title As String,  _
                    ByVal lastName As String,  _
                    ByVal firstName As String,  _
                    ByVal birthday As Date,  _
                    ByVal vatEntitled As String,  _
                    ByVal taxNumber As String,  _
                    ByVal customerNumber As String,  _
                    ByVal country As String,  _
                    ByVal zipCode As String,  _
                    ByVal city As String,  _
                    ByVal street As String,  _
                    ByVal poBox As String,  _
                    ByVal poBoxZipCode As String,  _
                    ByVal eMail As String,  _
                    ByVal phoneBusiness As String,  _
                    ByVal phonePersonal As String,  _
                    ByVal phoneMobile As String,  _
                    ByVal fax As String,  _
                    ByVal customerType As String)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
            Me.pid = pid
            Me.addressType = addressType
            Me.companyName = companyName
            Me.title = title
            Me.lastName = lastName
            Me.firstName = firstName
            Me.birthday = birthday
            Me.vatEntitled = vatEntitled
            Me.taxNumber = taxNumber
            Me.customerNumber = customerNumber
            Me.country = country
            Me.zipCode = zipCode
            Me.city = city
            Me.street = street
            Me.poBox = poBox
            Me.poBoxZipCode = poBoxZipCode
            Me.eMail = eMail
            Me.phoneBusiness = phoneBusiness
            Me.phonePersonal = phonePersonal
            Me.phoneMobile = phoneMobile
            Me.fax = fax
            Me.customerType = customerType
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setFileReferenceCustomerResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class setFileReferenceCustomerResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public setFileReferenceCustomerReturn As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal setFileReferenceCustomerReturn As Boolean)
            MyBase.New
            Me.setFileReferenceCustomerReturn = setFileReferenceCustomerReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getUserList", WrapperNamespace:="http://DefaultNamespace", IsWrapped:=true)>  _
    Partial Friend Class getUserListRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public datCustomerNumber As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public userName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public password As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal datCustomerNumber As String, ByVal userName As String, ByVal password As String)
            MyBase.New
            Me.datCustomerNumber = datCustomerNumber
            Me.userName = userName
            Me.password = password
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getUserListResponse", WrapperNamespace:="http://www.dat.de/u3/SDOnlineService.jws", IsWrapped:=true)>  _
    Partial Friend Class getUserListResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public getUserListReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getUserListReturn As String)
            MyBase.New
            Me.getUserListReturn = getUserListReturn
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Friend Interface SDOnlineServiceChannel
        Inherits SilverDAT.SDOnlineService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class addFileReferenceImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.addFileReferenceImageResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.addFileReferenceImageResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getFileReferenceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getFileReferenceResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getFileReferenceResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class reEvaluateByPidCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.reEvaluateByPidResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.reEvaluateByPidResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class reEvaluateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.reEvaluateResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.reEvaluateResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class minimalEvaluateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.minimalEvaluateResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.minimalEvaluateResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class minimalEvaluateByKbaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.minimalEvaluateByKbaResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.minimalEvaluateByKbaResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class minimalEvaluateByPidCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.minimalEvaluateByPidResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.minimalEvaluateByPidResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class reEvaluateWithDATDefaultsByPidCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.reEvaluateWithDATDefaultsByPidResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.reEvaluateWithDATDefaultsByPidResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class reEvaluateWithDATDefaultsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.reEvaluateWithDATDefaultsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.reEvaluateWithDATDefaultsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getFileReferenceHeadDataListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getFileReferenceHeadDataListResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getFileReferenceHeadDataListResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class deleteFileReferenceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.deleteFileReferenceResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.deleteFileReferenceResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getComprehensiveEquipmentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getComprehensiveEquipmentsResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getComprehensiveEquipmentsResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getFileReferenceImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getFileReferenceImageResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getFileReferenceImageResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getFileReferenceImageContentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getFileReferenceImageContentResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getFileReferenceImageContentResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class deleteFileReferenceImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.deleteFileReferenceImageResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.deleteFileReferenceImageResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class updateFileReferenceImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.updateFileReferenceImageResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.updateFileReferenceImageResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class reEvaluateByPidListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.reEvaluateByPidListResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.reEvaluateByPidListResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class minimalEvaluateInventoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.minimalEvaluateInventoryResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.minimalEvaluateInventoryResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class reEvaluateInventoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.reEvaluateInventoryResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.reEvaluateInventoryResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class changeFileReferenceStateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.changeFileReferenceStateResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.changeFileReferenceStateResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class cancelFileReferenceStateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.cancelFileReferenceStateResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.cancelFileReferenceStateResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getFileReferenceCustomersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getFileReferenceCustomersResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getFileReferenceCustomersResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class setFileReferenceCustomerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.setFileReferenceCustomerResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.setFileReferenceCustomerResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class getUserListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SilverDAT.getUserListResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SilverDAT.getUserListResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Friend Class SDOnlineServiceClient
        Inherits System.ServiceModel.ClientBase(Of SilverDAT.SDOnlineService)
        Implements SilverDAT.SDOnlineService
        
        Private onBeginaddFileReferenceImageDelegate As BeginOperationDelegate
        
        Private onEndaddFileReferenceImageDelegate As EndOperationDelegate
        
        Private onaddFileReferenceImageCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetFileReferenceDelegate As BeginOperationDelegate
        
        Private onEndgetFileReferenceDelegate As EndOperationDelegate
        
        Private ongetFileReferenceCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginreEvaluateByPidDelegate As BeginOperationDelegate
        
        Private onEndreEvaluateByPidDelegate As EndOperationDelegate
        
        Private onreEvaluateByPidCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginreEvaluateDelegate As BeginOperationDelegate
        
        Private onEndreEvaluateDelegate As EndOperationDelegate
        
        Private onreEvaluateCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginminimalEvaluateDelegate As BeginOperationDelegate
        
        Private onEndminimalEvaluateDelegate As EndOperationDelegate
        
        Private onminimalEvaluateCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginminimalEvaluateByKbaDelegate As BeginOperationDelegate
        
        Private onEndminimalEvaluateByKbaDelegate As EndOperationDelegate
        
        Private onminimalEvaluateByKbaCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginminimalEvaluateByPidDelegate As BeginOperationDelegate
        
        Private onEndminimalEvaluateByPidDelegate As EndOperationDelegate
        
        Private onminimalEvaluateByPidCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginreEvaluateWithDATDefaultsByPidDelegate As BeginOperationDelegate
        
        Private onEndreEvaluateWithDATDefaultsByPidDelegate As EndOperationDelegate
        
        Private onreEvaluateWithDATDefaultsByPidCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginreEvaluateWithDATDefaultsDelegate As BeginOperationDelegate
        
        Private onEndreEvaluateWithDATDefaultsDelegate As EndOperationDelegate
        
        Private onreEvaluateWithDATDefaultsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetFileReferenceHeadDataListDelegate As BeginOperationDelegate
        
        Private onEndgetFileReferenceHeadDataListDelegate As EndOperationDelegate
        
        Private ongetFileReferenceHeadDataListCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegindeleteFileReferenceDelegate As BeginOperationDelegate
        
        Private onEnddeleteFileReferenceDelegate As EndOperationDelegate
        
        Private ondeleteFileReferenceCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetComprehensiveEquipmentsDelegate As BeginOperationDelegate
        
        Private onEndgetComprehensiveEquipmentsDelegate As EndOperationDelegate
        
        Private ongetComprehensiveEquipmentsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetFileReferenceImageDelegate As BeginOperationDelegate
        
        Private onEndgetFileReferenceImageDelegate As EndOperationDelegate
        
        Private ongetFileReferenceImageCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetFileReferenceImageContentDelegate As BeginOperationDelegate
        
        Private onEndgetFileReferenceImageContentDelegate As EndOperationDelegate
        
        Private ongetFileReferenceImageContentCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegindeleteFileReferenceImageDelegate As BeginOperationDelegate
        
        Private onEnddeleteFileReferenceImageDelegate As EndOperationDelegate
        
        Private ondeleteFileReferenceImageCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginupdateFileReferenceImageDelegate As BeginOperationDelegate
        
        Private onEndupdateFileReferenceImageDelegate As EndOperationDelegate
        
        Private onupdateFileReferenceImageCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginreEvaluateByPidListDelegate As BeginOperationDelegate
        
        Private onEndreEvaluateByPidListDelegate As EndOperationDelegate
        
        Private onreEvaluateByPidListCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginminimalEvaluateInventoryDelegate As BeginOperationDelegate
        
        Private onEndminimalEvaluateInventoryDelegate As EndOperationDelegate
        
        Private onminimalEvaluateInventoryCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginreEvaluateInventoryDelegate As BeginOperationDelegate
        
        Private onEndreEvaluateInventoryDelegate As EndOperationDelegate
        
        Private onreEvaluateInventoryCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginchangeFileReferenceStateDelegate As BeginOperationDelegate
        
        Private onEndchangeFileReferenceStateDelegate As EndOperationDelegate
        
        Private onchangeFileReferenceStateCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegincancelFileReferenceStateDelegate As BeginOperationDelegate
        
        Private onEndcancelFileReferenceStateDelegate As EndOperationDelegate
        
        Private oncancelFileReferenceStateCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetFileReferenceCustomersDelegate As BeginOperationDelegate
        
        Private onEndgetFileReferenceCustomersDelegate As EndOperationDelegate
        
        Private ongetFileReferenceCustomersCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginsetFileReferenceCustomerDelegate As BeginOperationDelegate
        
        Private onEndsetFileReferenceCustomerDelegate As EndOperationDelegate
        
        Private onsetFileReferenceCustomerCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBegingetUserListDelegate As BeginOperationDelegate
        
        Private onEndgetUserListDelegate As EndOperationDelegate
        
        Private ongetUserListCompletedDelegate As System.Threading.SendOrPostCallback
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Event addFileReferenceImageCompleted As System.EventHandler(Of addFileReferenceImageCompletedEventArgs)
        
        Public Event getFileReferenceCompleted As System.EventHandler(Of getFileReferenceCompletedEventArgs)
        
        Public Event reEvaluateByPidCompleted As System.EventHandler(Of reEvaluateByPidCompletedEventArgs)
        
        Public Event reEvaluateCompleted As System.EventHandler(Of reEvaluateCompletedEventArgs)
        
        Public Event minimalEvaluateCompleted As System.EventHandler(Of minimalEvaluateCompletedEventArgs)
        
        Public Event minimalEvaluateByKbaCompleted As System.EventHandler(Of minimalEvaluateByKbaCompletedEventArgs)
        
        Public Event minimalEvaluateByPidCompleted As System.EventHandler(Of minimalEvaluateByPidCompletedEventArgs)
        
        Public Event reEvaluateWithDATDefaultsByPidCompleted As System.EventHandler(Of reEvaluateWithDATDefaultsByPidCompletedEventArgs)
        
        Public Event reEvaluateWithDATDefaultsCompleted As System.EventHandler(Of reEvaluateWithDATDefaultsCompletedEventArgs)
        
        Public Event getFileReferenceHeadDataListCompleted As System.EventHandler(Of getFileReferenceHeadDataListCompletedEventArgs)
        
        Public Event deleteFileReferenceCompleted As System.EventHandler(Of deleteFileReferenceCompletedEventArgs)
        
        Public Event getComprehensiveEquipmentsCompleted As System.EventHandler(Of getComprehensiveEquipmentsCompletedEventArgs)
        
        Public Event getFileReferenceImageCompleted As System.EventHandler(Of getFileReferenceImageCompletedEventArgs)
        
        Public Event getFileReferenceImageContentCompleted As System.EventHandler(Of getFileReferenceImageContentCompletedEventArgs)
        
        Public Event deleteFileReferenceImageCompleted As System.EventHandler(Of deleteFileReferenceImageCompletedEventArgs)
        
        Public Event updateFileReferenceImageCompleted As System.EventHandler(Of updateFileReferenceImageCompletedEventArgs)
        
        Public Event reEvaluateByPidListCompleted As System.EventHandler(Of reEvaluateByPidListCompletedEventArgs)
        
        Public Event minimalEvaluateInventoryCompleted As System.EventHandler(Of minimalEvaluateInventoryCompletedEventArgs)
        
        Public Event reEvaluateInventoryCompleted As System.EventHandler(Of reEvaluateInventoryCompletedEventArgs)
        
        Public Event changeFileReferenceStateCompleted As System.EventHandler(Of changeFileReferenceStateCompletedEventArgs)
        
        Public Event cancelFileReferenceStateCompleted As System.EventHandler(Of cancelFileReferenceStateCompletedEventArgs)
        
        Public Event getFileReferenceCustomersCompleted As System.EventHandler(Of getFileReferenceCustomersCompletedEventArgs)
        
        Public Event setFileReferenceCustomerCompleted As System.EventHandler(Of setFileReferenceCustomerCompletedEventArgs)
        
        Public Event getUserListCompleted As System.EventHandler(Of getUserListCompletedEventArgs)
        
        Public Function addFileReferenceImage(ByVal request As SilverDAT.addFileReferenceImageRequest) As SilverDAT.addFileReferenceImageResponse Implements SilverDAT.SDOnlineService.addFileReferenceImage
            Return MyBase.Channel.addFileReferenceImage(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginaddFileReferenceImage(ByVal request As SilverDAT.addFileReferenceImageRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BeginaddFileReferenceImage
            Return MyBase.Channel.BeginaddFileReferenceImage(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndaddFileReferenceImage(ByVal result As System.IAsyncResult) As SilverDAT.addFileReferenceImageResponse Implements SilverDAT.SDOnlineService.EndaddFileReferenceImage
            Return MyBase.Channel.EndaddFileReferenceImage(result)
        End Function
        
        Private Function OnBeginaddFileReferenceImage(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.addFileReferenceImageRequest = CType(inValues(0),SilverDAT.addFileReferenceImageRequest)
            Return Me.BeginaddFileReferenceImage(request, callback, asyncState)
        End Function
        
        Private Function OnEndaddFileReferenceImage(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.addFileReferenceImageResponse = Me.EndaddFileReferenceImage(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnaddFileReferenceImageCompleted(ByVal state As Object)
            If (Not (Me.addFileReferenceImageCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent addFileReferenceImageCompleted(Me, New addFileReferenceImageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub addFileReferenceImageAsync(ByVal request As SilverDAT.addFileReferenceImageRequest)
            Me.addFileReferenceImageAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub addFileReferenceImageAsync(ByVal request As SilverDAT.addFileReferenceImageRequest, ByVal userState As Object)
            If (Me.onBeginaddFileReferenceImageDelegate Is Nothing) Then
                Me.onBeginaddFileReferenceImageDelegate = AddressOf Me.OnBeginaddFileReferenceImage
            End If
            If (Me.onEndaddFileReferenceImageDelegate Is Nothing) Then
                Me.onEndaddFileReferenceImageDelegate = AddressOf Me.OnEndaddFileReferenceImage
            End If
            If (Me.onaddFileReferenceImageCompletedDelegate Is Nothing) Then
                Me.onaddFileReferenceImageCompletedDelegate = AddressOf Me.OnaddFileReferenceImageCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginaddFileReferenceImageDelegate, New Object() {request}, Me.onEndaddFileReferenceImageDelegate, Me.onaddFileReferenceImageCompletedDelegate, userState)
        End Sub
        
        Public Function getFileReference(ByVal request As SilverDAT.getFileReferenceRequest) As SilverDAT.getFileReferenceResponse Implements SilverDAT.SDOnlineService.getFileReference
            Return MyBase.Channel.getFileReference(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetFileReference(ByVal request As SilverDAT.getFileReferenceRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BegingetFileReference
            Return MyBase.Channel.BegingetFileReference(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetFileReference(ByVal result As System.IAsyncResult) As SilverDAT.getFileReferenceResponse Implements SilverDAT.SDOnlineService.EndgetFileReference
            Return MyBase.Channel.EndgetFileReference(result)
        End Function
        
        Private Function OnBegingetFileReference(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getFileReferenceRequest = CType(inValues(0),SilverDAT.getFileReferenceRequest)
            Return Me.BegingetFileReference(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetFileReference(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getFileReferenceResponse = Me.EndgetFileReference(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetFileReferenceCompleted(ByVal state As Object)
            If (Not (Me.getFileReferenceCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getFileReferenceCompleted(Me, New getFileReferenceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getFileReferenceAsync(ByVal request As SilverDAT.getFileReferenceRequest)
            Me.getFileReferenceAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getFileReferenceAsync(ByVal request As SilverDAT.getFileReferenceRequest, ByVal userState As Object)
            If (Me.onBegingetFileReferenceDelegate Is Nothing) Then
                Me.onBegingetFileReferenceDelegate = AddressOf Me.OnBegingetFileReference
            End If
            If (Me.onEndgetFileReferenceDelegate Is Nothing) Then
                Me.onEndgetFileReferenceDelegate = AddressOf Me.OnEndgetFileReference
            End If
            If (Me.ongetFileReferenceCompletedDelegate Is Nothing) Then
                Me.ongetFileReferenceCompletedDelegate = AddressOf Me.OngetFileReferenceCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetFileReferenceDelegate, New Object() {request}, Me.onEndgetFileReferenceDelegate, Me.ongetFileReferenceCompletedDelegate, userState)
        End Sub
        
        Public Function reEvaluateByPid(ByVal request As SilverDAT.reEvaluateByPidRequest) As SilverDAT.reEvaluateByPidResponse Implements SilverDAT.SDOnlineService.reEvaluateByPid
            Return MyBase.Channel.reEvaluateByPid(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginreEvaluateByPid(ByVal request As SilverDAT.reEvaluateByPidRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BeginreEvaluateByPid
            Return MyBase.Channel.BeginreEvaluateByPid(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndreEvaluateByPid(ByVal result As System.IAsyncResult) As SilverDAT.reEvaluateByPidResponse Implements SilverDAT.SDOnlineService.EndreEvaluateByPid
            Return MyBase.Channel.EndreEvaluateByPid(result)
        End Function
        
        Private Function OnBeginreEvaluateByPid(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.reEvaluateByPidRequest = CType(inValues(0),SilverDAT.reEvaluateByPidRequest)
            Return Me.BeginreEvaluateByPid(request, callback, asyncState)
        End Function
        
        Private Function OnEndreEvaluateByPid(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.reEvaluateByPidResponse = Me.EndreEvaluateByPid(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnreEvaluateByPidCompleted(ByVal state As Object)
            If (Not (Me.reEvaluateByPidCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent reEvaluateByPidCompleted(Me, New reEvaluateByPidCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub reEvaluateByPidAsync(ByVal request As SilverDAT.reEvaluateByPidRequest)
            Me.reEvaluateByPidAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub reEvaluateByPidAsync(ByVal request As SilverDAT.reEvaluateByPidRequest, ByVal userState As Object)
            If (Me.onBeginreEvaluateByPidDelegate Is Nothing) Then
                Me.onBeginreEvaluateByPidDelegate = AddressOf Me.OnBeginreEvaluateByPid
            End If
            If (Me.onEndreEvaluateByPidDelegate Is Nothing) Then
                Me.onEndreEvaluateByPidDelegate = AddressOf Me.OnEndreEvaluateByPid
            End If
            If (Me.onreEvaluateByPidCompletedDelegate Is Nothing) Then
                Me.onreEvaluateByPidCompletedDelegate = AddressOf Me.OnreEvaluateByPidCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginreEvaluateByPidDelegate, New Object() {request}, Me.onEndreEvaluateByPidDelegate, Me.onreEvaluateByPidCompletedDelegate, userState)
        End Sub
        
        Public Function reEvaluate(ByVal request As SilverDAT.reEvaluateRequest) As SilverDAT.reEvaluateResponse Implements SilverDAT.SDOnlineService.reEvaluate
            Return MyBase.Channel.reEvaluate(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginreEvaluate(ByVal request As SilverDAT.reEvaluateRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BeginreEvaluate
            Return MyBase.Channel.BeginreEvaluate(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndreEvaluate(ByVal result As System.IAsyncResult) As SilverDAT.reEvaluateResponse Implements SilverDAT.SDOnlineService.EndreEvaluate
            Return MyBase.Channel.EndreEvaluate(result)
        End Function
        
        Private Function OnBeginreEvaluate(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.reEvaluateRequest = CType(inValues(0),SilverDAT.reEvaluateRequest)
            Return Me.BeginreEvaluate(request, callback, asyncState)
        End Function
        
        Private Function OnEndreEvaluate(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.reEvaluateResponse = Me.EndreEvaluate(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnreEvaluateCompleted(ByVal state As Object)
            If (Not (Me.reEvaluateCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent reEvaluateCompleted(Me, New reEvaluateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub reEvaluateAsync(ByVal request As SilverDAT.reEvaluateRequest)
            Me.reEvaluateAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub reEvaluateAsync(ByVal request As SilverDAT.reEvaluateRequest, ByVal userState As Object)
            If (Me.onBeginreEvaluateDelegate Is Nothing) Then
                Me.onBeginreEvaluateDelegate = AddressOf Me.OnBeginreEvaluate
            End If
            If (Me.onEndreEvaluateDelegate Is Nothing) Then
                Me.onEndreEvaluateDelegate = AddressOf Me.OnEndreEvaluate
            End If
            If (Me.onreEvaluateCompletedDelegate Is Nothing) Then
                Me.onreEvaluateCompletedDelegate = AddressOf Me.OnreEvaluateCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginreEvaluateDelegate, New Object() {request}, Me.onEndreEvaluateDelegate, Me.onreEvaluateCompletedDelegate, userState)
        End Sub
        
        Public Function minimalEvaluate(ByVal request As SilverDAT.minimalEvaluateRequest) As SilverDAT.minimalEvaluateResponse Implements SilverDAT.SDOnlineService.minimalEvaluate
            Return MyBase.Channel.minimalEvaluate(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginminimalEvaluate(ByVal request As SilverDAT.minimalEvaluateRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BeginminimalEvaluate
            Return MyBase.Channel.BeginminimalEvaluate(request, callback, asyncState)
        End Function

        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndminimalEvaluate(ByVal result As System.IAsyncResult) As SilverDAT.minimalEvaluateResponse Implements SilverDAT.SDOnlineService.EndminimalEvaluate
            Return MyBase.Channel.EndminimalEvaluate(result)
        End Function

        
        Private Function OnBeginminimalEvaluate(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.minimalEvaluateRequest = CType(inValues(0),SilverDAT.minimalEvaluateRequest)
            Return Me.BeginminimalEvaluate(request, callback, asyncState)
        End Function
        
        Private Function OnEndminimalEvaluate(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.minimalEvaluateResponse = Me.EndminimalEvaluate(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnminimalEvaluateCompleted(ByVal state As Object)
            If (Not (Me.minimalEvaluateCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent minimalEvaluateCompleted(Me, New minimalEvaluateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub minimalEvaluateAsync(ByVal request As SilverDAT.minimalEvaluateRequest)
            Me.minimalEvaluateAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub minimalEvaluateAsync(ByVal request As SilverDAT.minimalEvaluateRequest, ByVal userState As Object)
            If (Me.onBeginminimalEvaluateDelegate Is Nothing) Then
                Me.onBeginminimalEvaluateDelegate = AddressOf Me.OnBeginminimalEvaluate
            End If
            If (Me.onEndminimalEvaluateDelegate Is Nothing) Then
                Me.onEndminimalEvaluateDelegate = AddressOf Me.OnEndminimalEvaluate
            End If
            If (Me.onminimalEvaluateCompletedDelegate Is Nothing) Then
                Me.onminimalEvaluateCompletedDelegate = AddressOf Me.OnminimalEvaluateCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginminimalEvaluateDelegate, New Object() {request}, Me.onEndminimalEvaluateDelegate, Me.onminimalEvaluateCompletedDelegate, userState)
        End Sub
        
        Public Function minimalEvaluateByKba(ByVal request As SilverDAT.minimalEvaluateByKbaRequest) As SilverDAT.minimalEvaluateByKbaResponse Implements SilverDAT.SDOnlineService.minimalEvaluateByKba
            Return MyBase.Channel.minimalEvaluateByKba(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginminimalEvaluateByKba(ByVal request As SilverDAT.minimalEvaluateByKbaRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BeginminimalEvaluateByKba
            Return MyBase.Channel.BeginminimalEvaluateByKba(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndminimalEvaluateByKba(ByVal result As System.IAsyncResult) As SilverDAT.minimalEvaluateByKbaResponse Implements SilverDAT.SDOnlineService.EndminimalEvaluateByKba
            Return MyBase.Channel.EndminimalEvaluateByKba(result)
        End Function
        
        Private Function OnBeginminimalEvaluateByKba(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.minimalEvaluateByKbaRequest = CType(inValues(0),SilverDAT.minimalEvaluateByKbaRequest)
            Return Me.BeginminimalEvaluateByKba(request, callback, asyncState)
        End Function
        
        Private Function OnEndminimalEvaluateByKba(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.minimalEvaluateByKbaResponse = Me.EndminimalEvaluateByKba(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnminimalEvaluateByKbaCompleted(ByVal state As Object)
            If (Not (Me.minimalEvaluateByKbaCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent minimalEvaluateByKbaCompleted(Me, New minimalEvaluateByKbaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub minimalEvaluateByKbaAsync(ByVal request As SilverDAT.minimalEvaluateByKbaRequest)
            Me.minimalEvaluateByKbaAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub minimalEvaluateByKbaAsync(ByVal request As SilverDAT.minimalEvaluateByKbaRequest, ByVal userState As Object)
            If (Me.onBeginminimalEvaluateByKbaDelegate Is Nothing) Then
                Me.onBeginminimalEvaluateByKbaDelegate = AddressOf Me.OnBeginminimalEvaluateByKba
            End If
            If (Me.onEndminimalEvaluateByKbaDelegate Is Nothing) Then
                Me.onEndminimalEvaluateByKbaDelegate = AddressOf Me.OnEndminimalEvaluateByKba
            End If
            If (Me.onminimalEvaluateByKbaCompletedDelegate Is Nothing) Then
                Me.onminimalEvaluateByKbaCompletedDelegate = AddressOf Me.OnminimalEvaluateByKbaCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginminimalEvaluateByKbaDelegate, New Object() {request}, Me.onEndminimalEvaluateByKbaDelegate, Me.onminimalEvaluateByKbaCompletedDelegate, userState)
        End Sub
        
        Public Function minimalEvaluateByPid(ByVal request As SilverDAT.minimalEvaluateByPidRequest) As SilverDAT.minimalEvaluateByPidResponse Implements SilverDAT.SDOnlineService.minimalEvaluateByPid
            Return MyBase.Channel.minimalEvaluateByPid(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginminimalEvaluateByPid(ByVal request As SilverDAT.minimalEvaluateByPidRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BeginminimalEvaluateByPid
            Return MyBase.Channel.BeginminimalEvaluateByPid(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndminimalEvaluateByPid(ByVal result As System.IAsyncResult) As SilverDAT.minimalEvaluateByPidResponse Implements SilverDAT.SDOnlineService.EndminimalEvaluateByPid
            Return MyBase.Channel.EndminimalEvaluateByPid(result)
        End Function
        
        Private Function OnBeginminimalEvaluateByPid(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.minimalEvaluateByPidRequest = CType(inValues(0),SilverDAT.minimalEvaluateByPidRequest)
            Return Me.BeginminimalEvaluateByPid(request, callback, asyncState)
        End Function
        
        Private Function OnEndminimalEvaluateByPid(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.minimalEvaluateByPidResponse = Me.EndminimalEvaluateByPid(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnminimalEvaluateByPidCompleted(ByVal state As Object)
            If (Not (Me.minimalEvaluateByPidCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent minimalEvaluateByPidCompleted(Me, New minimalEvaluateByPidCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub minimalEvaluateByPidAsync(ByVal request As SilverDAT.minimalEvaluateByPidRequest)
            Me.minimalEvaluateByPidAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub minimalEvaluateByPidAsync(ByVal request As SilverDAT.minimalEvaluateByPidRequest, ByVal userState As Object)
            If (Me.onBeginminimalEvaluateByPidDelegate Is Nothing) Then
                Me.onBeginminimalEvaluateByPidDelegate = AddressOf Me.OnBeginminimalEvaluateByPid
            End If
            If (Me.onEndminimalEvaluateByPidDelegate Is Nothing) Then
                Me.onEndminimalEvaluateByPidDelegate = AddressOf Me.OnEndminimalEvaluateByPid
            End If
            If (Me.onminimalEvaluateByPidCompletedDelegate Is Nothing) Then
                Me.onminimalEvaluateByPidCompletedDelegate = AddressOf Me.OnminimalEvaluateByPidCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginminimalEvaluateByPidDelegate, New Object() {request}, Me.onEndminimalEvaluateByPidDelegate, Me.onminimalEvaluateByPidCompletedDelegate, userState)
        End Sub
        
        Public Function reEvaluateWithDATDefaultsByPid(ByVal request As SilverDAT.reEvaluateWithDATDefaultsByPidRequest) As SilverDAT.reEvaluateWithDATDefaultsByPidResponse Implements SilverDAT.SDOnlineService.reEvaluateWithDATDefaultsByPid
            Return MyBase.Channel.reEvaluateWithDATDefaultsByPid(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginreEvaluateWithDATDefaultsByPid(ByVal request As SilverDAT.reEvaluateWithDATDefaultsByPidRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BeginreEvaluateWithDATDefaultsByPid
            Return MyBase.Channel.BeginreEvaluateWithDATDefaultsByPid(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndreEvaluateWithDATDefaultsByPid(ByVal result As System.IAsyncResult) As SilverDAT.reEvaluateWithDATDefaultsByPidResponse Implements SilverDAT.SDOnlineService.EndreEvaluateWithDATDefaultsByPid
            Return MyBase.Channel.EndreEvaluateWithDATDefaultsByPid(result)
        End Function
        
        Private Function OnBeginreEvaluateWithDATDefaultsByPid(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.reEvaluateWithDATDefaultsByPidRequest = CType(inValues(0),SilverDAT.reEvaluateWithDATDefaultsByPidRequest)
            Return Me.BeginreEvaluateWithDATDefaultsByPid(request, callback, asyncState)
        End Function
        
        Private Function OnEndreEvaluateWithDATDefaultsByPid(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.reEvaluateWithDATDefaultsByPidResponse = Me.EndreEvaluateWithDATDefaultsByPid(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnreEvaluateWithDATDefaultsByPidCompleted(ByVal state As Object)
            If (Not (Me.reEvaluateWithDATDefaultsByPidCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent reEvaluateWithDATDefaultsByPidCompleted(Me, New reEvaluateWithDATDefaultsByPidCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub reEvaluateWithDATDefaultsByPidAsync(ByVal request As SilverDAT.reEvaluateWithDATDefaultsByPidRequest)
            Me.reEvaluateWithDATDefaultsByPidAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub reEvaluateWithDATDefaultsByPidAsync(ByVal request As SilverDAT.reEvaluateWithDATDefaultsByPidRequest, ByVal userState As Object)
            If (Me.onBeginreEvaluateWithDATDefaultsByPidDelegate Is Nothing) Then
                Me.onBeginreEvaluateWithDATDefaultsByPidDelegate = AddressOf Me.OnBeginreEvaluateWithDATDefaultsByPid
            End If
            If (Me.onEndreEvaluateWithDATDefaultsByPidDelegate Is Nothing) Then
                Me.onEndreEvaluateWithDATDefaultsByPidDelegate = AddressOf Me.OnEndreEvaluateWithDATDefaultsByPid
            End If
            If (Me.onreEvaluateWithDATDefaultsByPidCompletedDelegate Is Nothing) Then
                Me.onreEvaluateWithDATDefaultsByPidCompletedDelegate = AddressOf Me.OnreEvaluateWithDATDefaultsByPidCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginreEvaluateWithDATDefaultsByPidDelegate, New Object() {request}, Me.onEndreEvaluateWithDATDefaultsByPidDelegate, Me.onreEvaluateWithDATDefaultsByPidCompletedDelegate, userState)
        End Sub
        
        Public Function reEvaluateWithDATDefaults(ByVal request As SilverDAT.reEvaluateWithDATDefaultsRequest) As SilverDAT.reEvaluateWithDATDefaultsResponse Implements SilverDAT.SDOnlineService.reEvaluateWithDATDefaults
            Return MyBase.Channel.reEvaluateWithDATDefaults(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginreEvaluateWithDATDefaults(ByVal request As SilverDAT.reEvaluateWithDATDefaultsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BeginreEvaluateWithDATDefaults
            Return MyBase.Channel.BeginreEvaluateWithDATDefaults(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndreEvaluateWithDATDefaults(ByVal result As System.IAsyncResult) As SilverDAT.reEvaluateWithDATDefaultsResponse Implements SilverDAT.SDOnlineService.EndreEvaluateWithDATDefaults
            Return MyBase.Channel.EndreEvaluateWithDATDefaults(result)
        End Function
        
        Private Function OnBeginreEvaluateWithDATDefaults(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.reEvaluateWithDATDefaultsRequest = CType(inValues(0),SilverDAT.reEvaluateWithDATDefaultsRequest)
            Return Me.BeginreEvaluateWithDATDefaults(request, callback, asyncState)
        End Function
        
        Private Function OnEndreEvaluateWithDATDefaults(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.reEvaluateWithDATDefaultsResponse = Me.EndreEvaluateWithDATDefaults(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnreEvaluateWithDATDefaultsCompleted(ByVal state As Object)
            If (Not (Me.reEvaluateWithDATDefaultsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent reEvaluateWithDATDefaultsCompleted(Me, New reEvaluateWithDATDefaultsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub reEvaluateWithDATDefaultsAsync(ByVal request As SilverDAT.reEvaluateWithDATDefaultsRequest)
            Me.reEvaluateWithDATDefaultsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub reEvaluateWithDATDefaultsAsync(ByVal request As SilverDAT.reEvaluateWithDATDefaultsRequest, ByVal userState As Object)
            If (Me.onBeginreEvaluateWithDATDefaultsDelegate Is Nothing) Then
                Me.onBeginreEvaluateWithDATDefaultsDelegate = AddressOf Me.OnBeginreEvaluateWithDATDefaults
            End If
            If (Me.onEndreEvaluateWithDATDefaultsDelegate Is Nothing) Then
                Me.onEndreEvaluateWithDATDefaultsDelegate = AddressOf Me.OnEndreEvaluateWithDATDefaults
            End If
            If (Me.onreEvaluateWithDATDefaultsCompletedDelegate Is Nothing) Then
                Me.onreEvaluateWithDATDefaultsCompletedDelegate = AddressOf Me.OnreEvaluateWithDATDefaultsCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginreEvaluateWithDATDefaultsDelegate, New Object() {request}, Me.onEndreEvaluateWithDATDefaultsDelegate, Me.onreEvaluateWithDATDefaultsCompletedDelegate, userState)
        End Sub
        
        Public Function getFileReferenceHeadDataList(ByVal request As SilverDAT.getFileReferenceHeadDataListRequest) As SilverDAT.getFileReferenceHeadDataListResponse Implements SilverDAT.SDOnlineService.getFileReferenceHeadDataList
            Return MyBase.Channel.getFileReferenceHeadDataList(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetFileReferenceHeadDataList(ByVal request As SilverDAT.getFileReferenceHeadDataListRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BegingetFileReferenceHeadDataList
            Return MyBase.Channel.BegingetFileReferenceHeadDataList(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetFileReferenceHeadDataList(ByVal result As System.IAsyncResult) As SilverDAT.getFileReferenceHeadDataListResponse Implements SilverDAT.SDOnlineService.EndgetFileReferenceHeadDataList
            Return MyBase.Channel.EndgetFileReferenceHeadDataList(result)
        End Function
        
        Private Function OnBegingetFileReferenceHeadDataList(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getFileReferenceHeadDataListRequest = CType(inValues(0),SilverDAT.getFileReferenceHeadDataListRequest)
            Return Me.BegingetFileReferenceHeadDataList(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetFileReferenceHeadDataList(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getFileReferenceHeadDataListResponse = Me.EndgetFileReferenceHeadDataList(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetFileReferenceHeadDataListCompleted(ByVal state As Object)
            If (Not (Me.getFileReferenceHeadDataListCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getFileReferenceHeadDataListCompleted(Me, New getFileReferenceHeadDataListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getFileReferenceHeadDataListAsync(ByVal request As SilverDAT.getFileReferenceHeadDataListRequest)
            Me.getFileReferenceHeadDataListAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getFileReferenceHeadDataListAsync(ByVal request As SilverDAT.getFileReferenceHeadDataListRequest, ByVal userState As Object)
            If (Me.onBegingetFileReferenceHeadDataListDelegate Is Nothing) Then
                Me.onBegingetFileReferenceHeadDataListDelegate = AddressOf Me.OnBegingetFileReferenceHeadDataList
            End If
            If (Me.onEndgetFileReferenceHeadDataListDelegate Is Nothing) Then
                Me.onEndgetFileReferenceHeadDataListDelegate = AddressOf Me.OnEndgetFileReferenceHeadDataList
            End If
            If (Me.ongetFileReferenceHeadDataListCompletedDelegate Is Nothing) Then
                Me.ongetFileReferenceHeadDataListCompletedDelegate = AddressOf Me.OngetFileReferenceHeadDataListCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetFileReferenceHeadDataListDelegate, New Object() {request}, Me.onEndgetFileReferenceHeadDataListDelegate, Me.ongetFileReferenceHeadDataListCompletedDelegate, userState)
        End Sub
        
        Public Function deleteFileReference(ByVal request As SilverDAT.deleteFileReferenceRequest) As SilverDAT.deleteFileReferenceResponse Implements SilverDAT.SDOnlineService.deleteFileReference
            Return MyBase.Channel.deleteFileReference(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegindeleteFileReference(ByVal request As SilverDAT.deleteFileReferenceRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BegindeleteFileReference
            Return MyBase.Channel.BegindeleteFileReference(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EnddeleteFileReference(ByVal result As System.IAsyncResult) As SilverDAT.deleteFileReferenceResponse Implements SilverDAT.SDOnlineService.EnddeleteFileReference
            Return MyBase.Channel.EnddeleteFileReference(result)
        End Function
        
        Private Function OnBegindeleteFileReference(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.deleteFileReferenceRequest = CType(inValues(0),SilverDAT.deleteFileReferenceRequest)
            Return Me.BegindeleteFileReference(request, callback, asyncState)
        End Function
        
        Private Function OnEnddeleteFileReference(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.deleteFileReferenceResponse = Me.EnddeleteFileReference(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OndeleteFileReferenceCompleted(ByVal state As Object)
            If (Not (Me.deleteFileReferenceCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent deleteFileReferenceCompleted(Me, New deleteFileReferenceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub deleteFileReferenceAsync(ByVal request As SilverDAT.deleteFileReferenceRequest)
            Me.deleteFileReferenceAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub deleteFileReferenceAsync(ByVal request As SilverDAT.deleteFileReferenceRequest, ByVal userState As Object)
            If (Me.onBegindeleteFileReferenceDelegate Is Nothing) Then
                Me.onBegindeleteFileReferenceDelegate = AddressOf Me.OnBegindeleteFileReference
            End If
            If (Me.onEnddeleteFileReferenceDelegate Is Nothing) Then
                Me.onEnddeleteFileReferenceDelegate = AddressOf Me.OnEnddeleteFileReference
            End If
            If (Me.ondeleteFileReferenceCompletedDelegate Is Nothing) Then
                Me.ondeleteFileReferenceCompletedDelegate = AddressOf Me.OndeleteFileReferenceCompleted
            End If
            MyBase.InvokeAsync(Me.onBegindeleteFileReferenceDelegate, New Object() {request}, Me.onEnddeleteFileReferenceDelegate, Me.ondeleteFileReferenceCompletedDelegate, userState)
        End Sub
        
        Public Function getComprehensiveEquipments(ByVal request As SilverDAT.getComprehensiveEquipmentsRequest) As SilverDAT.getComprehensiveEquipmentsResponse Implements SilverDAT.SDOnlineService.getComprehensiveEquipments
            Return MyBase.Channel.getComprehensiveEquipments(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetComprehensiveEquipments(ByVal request As SilverDAT.getComprehensiveEquipmentsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BegingetComprehensiveEquipments
            Return MyBase.Channel.BegingetComprehensiveEquipments(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetComprehensiveEquipments(ByVal result As System.IAsyncResult) As SilverDAT.getComprehensiveEquipmentsResponse Implements SilverDAT.SDOnlineService.EndgetComprehensiveEquipments
            Return MyBase.Channel.EndgetComprehensiveEquipments(result)
        End Function
        
        Private Function OnBegingetComprehensiveEquipments(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getComprehensiveEquipmentsRequest = CType(inValues(0),SilverDAT.getComprehensiveEquipmentsRequest)
            Return Me.BegingetComprehensiveEquipments(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetComprehensiveEquipments(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getComprehensiveEquipmentsResponse = Me.EndgetComprehensiveEquipments(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetComprehensiveEquipmentsCompleted(ByVal state As Object)
            If (Not (Me.getComprehensiveEquipmentsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getComprehensiveEquipmentsCompleted(Me, New getComprehensiveEquipmentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getComprehensiveEquipmentsAsync(ByVal request As SilverDAT.getComprehensiveEquipmentsRequest)
            Me.getComprehensiveEquipmentsAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getComprehensiveEquipmentsAsync(ByVal request As SilverDAT.getComprehensiveEquipmentsRequest, ByVal userState As Object)
            If (Me.onBegingetComprehensiveEquipmentsDelegate Is Nothing) Then
                Me.onBegingetComprehensiveEquipmentsDelegate = AddressOf Me.OnBegingetComprehensiveEquipments
            End If
            If (Me.onEndgetComprehensiveEquipmentsDelegate Is Nothing) Then
                Me.onEndgetComprehensiveEquipmentsDelegate = AddressOf Me.OnEndgetComprehensiveEquipments
            End If
            If (Me.ongetComprehensiveEquipmentsCompletedDelegate Is Nothing) Then
                Me.ongetComprehensiveEquipmentsCompletedDelegate = AddressOf Me.OngetComprehensiveEquipmentsCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetComprehensiveEquipmentsDelegate, New Object() {request}, Me.onEndgetComprehensiveEquipmentsDelegate, Me.ongetComprehensiveEquipmentsCompletedDelegate, userState)
        End Sub
        
        Public Function getFileReferenceImage(ByVal request As SilverDAT.getFileReferenceImageRequest) As SilverDAT.getFileReferenceImageResponse Implements SilverDAT.SDOnlineService.getFileReferenceImage
            Return MyBase.Channel.getFileReferenceImage(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetFileReferenceImage(ByVal request As SilverDAT.getFileReferenceImageRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BegingetFileReferenceImage
            Return MyBase.Channel.BegingetFileReferenceImage(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetFileReferenceImage(ByVal result As System.IAsyncResult) As SilverDAT.getFileReferenceImageResponse Implements SilverDAT.SDOnlineService.EndgetFileReferenceImage
            Return MyBase.Channel.EndgetFileReferenceImage(result)
        End Function
        
        Private Function OnBegingetFileReferenceImage(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getFileReferenceImageRequest = CType(inValues(0),SilverDAT.getFileReferenceImageRequest)
            Return Me.BegingetFileReferenceImage(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetFileReferenceImage(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getFileReferenceImageResponse = Me.EndgetFileReferenceImage(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetFileReferenceImageCompleted(ByVal state As Object)
            If (Not (Me.getFileReferenceImageCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getFileReferenceImageCompleted(Me, New getFileReferenceImageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getFileReferenceImageAsync(ByVal request As SilverDAT.getFileReferenceImageRequest)
            Me.getFileReferenceImageAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getFileReferenceImageAsync(ByVal request As SilverDAT.getFileReferenceImageRequest, ByVal userState As Object)
            If (Me.onBegingetFileReferenceImageDelegate Is Nothing) Then
                Me.onBegingetFileReferenceImageDelegate = AddressOf Me.OnBegingetFileReferenceImage
            End If
            If (Me.onEndgetFileReferenceImageDelegate Is Nothing) Then
                Me.onEndgetFileReferenceImageDelegate = AddressOf Me.OnEndgetFileReferenceImage
            End If
            If (Me.ongetFileReferenceImageCompletedDelegate Is Nothing) Then
                Me.ongetFileReferenceImageCompletedDelegate = AddressOf Me.OngetFileReferenceImageCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetFileReferenceImageDelegate, New Object() {request}, Me.onEndgetFileReferenceImageDelegate, Me.ongetFileReferenceImageCompletedDelegate, userState)
        End Sub
        
        Public Function getFileReferenceImageContent(ByVal request As SilverDAT.getFileReferenceImageContentRequest) As SilverDAT.getFileReferenceImageContentResponse Implements SilverDAT.SDOnlineService.getFileReferenceImageContent
            Return MyBase.Channel.getFileReferenceImageContent(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetFileReferenceImageContent(ByVal request As SilverDAT.getFileReferenceImageContentRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BegingetFileReferenceImageContent
            Return MyBase.Channel.BegingetFileReferenceImageContent(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetFileReferenceImageContent(ByVal result As System.IAsyncResult) As SilverDAT.getFileReferenceImageContentResponse Implements SilverDAT.SDOnlineService.EndgetFileReferenceImageContent
            Return MyBase.Channel.EndgetFileReferenceImageContent(result)
        End Function
        
        Private Function OnBegingetFileReferenceImageContent(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getFileReferenceImageContentRequest = CType(inValues(0),SilverDAT.getFileReferenceImageContentRequest)
            Return Me.BegingetFileReferenceImageContent(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetFileReferenceImageContent(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getFileReferenceImageContentResponse = Me.EndgetFileReferenceImageContent(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetFileReferenceImageContentCompleted(ByVal state As Object)
            If (Not (Me.getFileReferenceImageContentCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getFileReferenceImageContentCompleted(Me, New getFileReferenceImageContentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getFileReferenceImageContentAsync(ByVal request As SilverDAT.getFileReferenceImageContentRequest)
            Me.getFileReferenceImageContentAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getFileReferenceImageContentAsync(ByVal request As SilverDAT.getFileReferenceImageContentRequest, ByVal userState As Object)
            If (Me.onBegingetFileReferenceImageContentDelegate Is Nothing) Then
                Me.onBegingetFileReferenceImageContentDelegate = AddressOf Me.OnBegingetFileReferenceImageContent
            End If
            If (Me.onEndgetFileReferenceImageContentDelegate Is Nothing) Then
                Me.onEndgetFileReferenceImageContentDelegate = AddressOf Me.OnEndgetFileReferenceImageContent
            End If
            If (Me.ongetFileReferenceImageContentCompletedDelegate Is Nothing) Then
                Me.ongetFileReferenceImageContentCompletedDelegate = AddressOf Me.OngetFileReferenceImageContentCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetFileReferenceImageContentDelegate, New Object() {request}, Me.onEndgetFileReferenceImageContentDelegate, Me.ongetFileReferenceImageContentCompletedDelegate, userState)
        End Sub
        
        Public Function deleteFileReferenceImage(ByVal request As SilverDAT.deleteFileReferenceImageRequest) As SilverDAT.deleteFileReferenceImageResponse Implements SilverDAT.SDOnlineService.deleteFileReferenceImage
            Return MyBase.Channel.deleteFileReferenceImage(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegindeleteFileReferenceImage(ByVal request As SilverDAT.deleteFileReferenceImageRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BegindeleteFileReferenceImage
            Return MyBase.Channel.BegindeleteFileReferenceImage(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EnddeleteFileReferenceImage(ByVal result As System.IAsyncResult) As SilverDAT.deleteFileReferenceImageResponse Implements SilverDAT.SDOnlineService.EnddeleteFileReferenceImage
            Return MyBase.Channel.EnddeleteFileReferenceImage(result)
        End Function
        
        Private Function OnBegindeleteFileReferenceImage(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.deleteFileReferenceImageRequest = CType(inValues(0),SilverDAT.deleteFileReferenceImageRequest)
            Return Me.BegindeleteFileReferenceImage(request, callback, asyncState)
        End Function
        
        Private Function OnEnddeleteFileReferenceImage(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.deleteFileReferenceImageResponse = Me.EnddeleteFileReferenceImage(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OndeleteFileReferenceImageCompleted(ByVal state As Object)
            If (Not (Me.deleteFileReferenceImageCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent deleteFileReferenceImageCompleted(Me, New deleteFileReferenceImageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub deleteFileReferenceImageAsync(ByVal request As SilverDAT.deleteFileReferenceImageRequest)
            Me.deleteFileReferenceImageAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub deleteFileReferenceImageAsync(ByVal request As SilverDAT.deleteFileReferenceImageRequest, ByVal userState As Object)
            If (Me.onBegindeleteFileReferenceImageDelegate Is Nothing) Then
                Me.onBegindeleteFileReferenceImageDelegate = AddressOf Me.OnBegindeleteFileReferenceImage
            End If
            If (Me.onEnddeleteFileReferenceImageDelegate Is Nothing) Then
                Me.onEnddeleteFileReferenceImageDelegate = AddressOf Me.OnEnddeleteFileReferenceImage
            End If
            If (Me.ondeleteFileReferenceImageCompletedDelegate Is Nothing) Then
                Me.ondeleteFileReferenceImageCompletedDelegate = AddressOf Me.OndeleteFileReferenceImageCompleted
            End If
            MyBase.InvokeAsync(Me.onBegindeleteFileReferenceImageDelegate, New Object() {request}, Me.onEnddeleteFileReferenceImageDelegate, Me.ondeleteFileReferenceImageCompletedDelegate, userState)
        End Sub
        
        Public Function updateFileReferenceImage(ByVal request As SilverDAT.updateFileReferenceImageRequest) As SilverDAT.updateFileReferenceImageResponse Implements SilverDAT.SDOnlineService.updateFileReferenceImage
            Return MyBase.Channel.updateFileReferenceImage(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginupdateFileReferenceImage(ByVal request As SilverDAT.updateFileReferenceImageRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BeginupdateFileReferenceImage
            Return MyBase.Channel.BeginupdateFileReferenceImage(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndupdateFileReferenceImage(ByVal result As System.IAsyncResult) As SilverDAT.updateFileReferenceImageResponse Implements SilverDAT.SDOnlineService.EndupdateFileReferenceImage
            Return MyBase.Channel.EndupdateFileReferenceImage(result)
        End Function
        
        Private Function OnBeginupdateFileReferenceImage(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.updateFileReferenceImageRequest = CType(inValues(0),SilverDAT.updateFileReferenceImageRequest)
            Return Me.BeginupdateFileReferenceImage(request, callback, asyncState)
        End Function
        
        Private Function OnEndupdateFileReferenceImage(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.updateFileReferenceImageResponse = Me.EndupdateFileReferenceImage(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnupdateFileReferenceImageCompleted(ByVal state As Object)
            If (Not (Me.updateFileReferenceImageCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent updateFileReferenceImageCompleted(Me, New updateFileReferenceImageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub updateFileReferenceImageAsync(ByVal request As SilverDAT.updateFileReferenceImageRequest)
            Me.updateFileReferenceImageAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub updateFileReferenceImageAsync(ByVal request As SilverDAT.updateFileReferenceImageRequest, ByVal userState As Object)
            If (Me.onBeginupdateFileReferenceImageDelegate Is Nothing) Then
                Me.onBeginupdateFileReferenceImageDelegate = AddressOf Me.OnBeginupdateFileReferenceImage
            End If
            If (Me.onEndupdateFileReferenceImageDelegate Is Nothing) Then
                Me.onEndupdateFileReferenceImageDelegate = AddressOf Me.OnEndupdateFileReferenceImage
            End If
            If (Me.onupdateFileReferenceImageCompletedDelegate Is Nothing) Then
                Me.onupdateFileReferenceImageCompletedDelegate = AddressOf Me.OnupdateFileReferenceImageCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginupdateFileReferenceImageDelegate, New Object() {request}, Me.onEndupdateFileReferenceImageDelegate, Me.onupdateFileReferenceImageCompletedDelegate, userState)
        End Sub
        
        Public Function reEvaluateByPidList(ByVal request As SilverDAT.reEvaluateByPidListRequest) As SilverDAT.reEvaluateByPidListResponse Implements SilverDAT.SDOnlineService.reEvaluateByPidList
            Return MyBase.Channel.reEvaluateByPidList(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginreEvaluateByPidList(ByVal request As SilverDAT.reEvaluateByPidListRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BeginreEvaluateByPidList
            Return MyBase.Channel.BeginreEvaluateByPidList(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndreEvaluateByPidList(ByVal result As System.IAsyncResult) As SilverDAT.reEvaluateByPidListResponse Implements SilverDAT.SDOnlineService.EndreEvaluateByPidList
            Return MyBase.Channel.EndreEvaluateByPidList(result)
        End Function
        
        Private Function OnBeginreEvaluateByPidList(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.reEvaluateByPidListRequest = CType(inValues(0),SilverDAT.reEvaluateByPidListRequest)
            Return Me.BeginreEvaluateByPidList(request, callback, asyncState)
        End Function
        
        Private Function OnEndreEvaluateByPidList(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.reEvaluateByPidListResponse = Me.EndreEvaluateByPidList(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnreEvaluateByPidListCompleted(ByVal state As Object)
            If (Not (Me.reEvaluateByPidListCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent reEvaluateByPidListCompleted(Me, New reEvaluateByPidListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub reEvaluateByPidListAsync(ByVal request As SilverDAT.reEvaluateByPidListRequest)
            Me.reEvaluateByPidListAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub reEvaluateByPidListAsync(ByVal request As SilverDAT.reEvaluateByPidListRequest, ByVal userState As Object)
            If (Me.onBeginreEvaluateByPidListDelegate Is Nothing) Then
                Me.onBeginreEvaluateByPidListDelegate = AddressOf Me.OnBeginreEvaluateByPidList
            End If
            If (Me.onEndreEvaluateByPidListDelegate Is Nothing) Then
                Me.onEndreEvaluateByPidListDelegate = AddressOf Me.OnEndreEvaluateByPidList
            End If
            If (Me.onreEvaluateByPidListCompletedDelegate Is Nothing) Then
                Me.onreEvaluateByPidListCompletedDelegate = AddressOf Me.OnreEvaluateByPidListCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginreEvaluateByPidListDelegate, New Object() {request}, Me.onEndreEvaluateByPidListDelegate, Me.onreEvaluateByPidListCompletedDelegate, userState)
        End Sub
        
        Public Function minimalEvaluateInventory(ByVal request As SilverDAT.minimalEvaluateInventoryRequest) As SilverDAT.minimalEvaluateInventoryResponse Implements SilverDAT.SDOnlineService.minimalEvaluateInventory
            Return MyBase.Channel.minimalEvaluateInventory(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginminimalEvaluateInventory(ByVal request As SilverDAT.minimalEvaluateInventoryRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BeginminimalEvaluateInventory
            Return MyBase.Channel.BeginminimalEvaluateInventory(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndminimalEvaluateInventory(ByVal result As System.IAsyncResult) As SilverDAT.minimalEvaluateInventoryResponse Implements SilverDAT.SDOnlineService.EndminimalEvaluateInventory
            Return MyBase.Channel.EndminimalEvaluateInventory(result)
        End Function
        
        Private Function OnBeginminimalEvaluateInventory(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.minimalEvaluateInventoryRequest = CType(inValues(0),SilverDAT.minimalEvaluateInventoryRequest)
            Return Me.BeginminimalEvaluateInventory(request, callback, asyncState)
        End Function
        
        Private Function OnEndminimalEvaluateInventory(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.minimalEvaluateInventoryResponse = Me.EndminimalEvaluateInventory(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnminimalEvaluateInventoryCompleted(ByVal state As Object)
            If (Not (Me.minimalEvaluateInventoryCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent minimalEvaluateInventoryCompleted(Me, New minimalEvaluateInventoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub minimalEvaluateInventoryAsync(ByVal request As SilverDAT.minimalEvaluateInventoryRequest)
            Me.minimalEvaluateInventoryAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub minimalEvaluateInventoryAsync(ByVal request As SilverDAT.minimalEvaluateInventoryRequest, ByVal userState As Object)
            If (Me.onBeginminimalEvaluateInventoryDelegate Is Nothing) Then
                Me.onBeginminimalEvaluateInventoryDelegate = AddressOf Me.OnBeginminimalEvaluateInventory
            End If
            If (Me.onEndminimalEvaluateInventoryDelegate Is Nothing) Then
                Me.onEndminimalEvaluateInventoryDelegate = AddressOf Me.OnEndminimalEvaluateInventory
            End If
            If (Me.onminimalEvaluateInventoryCompletedDelegate Is Nothing) Then
                Me.onminimalEvaluateInventoryCompletedDelegate = AddressOf Me.OnminimalEvaluateInventoryCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginminimalEvaluateInventoryDelegate, New Object() {request}, Me.onEndminimalEvaluateInventoryDelegate, Me.onminimalEvaluateInventoryCompletedDelegate, userState)
        End Sub
        
        Public Function reEvaluateInventory(ByVal request As SilverDAT.reEvaluateInventoryRequest) As SilverDAT.reEvaluateInventoryResponse Implements SilverDAT.SDOnlineService.reEvaluateInventory
            Return MyBase.Channel.reEvaluateInventory(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginreEvaluateInventory(ByVal request As SilverDAT.reEvaluateInventoryRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BeginreEvaluateInventory
            Return MyBase.Channel.BeginreEvaluateInventory(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndreEvaluateInventory(ByVal result As System.IAsyncResult) As SilverDAT.reEvaluateInventoryResponse Implements SilverDAT.SDOnlineService.EndreEvaluateInventory
            Return MyBase.Channel.EndreEvaluateInventory(result)
        End Function
        
        Private Function OnBeginreEvaluateInventory(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.reEvaluateInventoryRequest = CType(inValues(0),SilverDAT.reEvaluateInventoryRequest)
            Return Me.BeginreEvaluateInventory(request, callback, asyncState)
        End Function
        
        Private Function OnEndreEvaluateInventory(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.reEvaluateInventoryResponse = Me.EndreEvaluateInventory(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnreEvaluateInventoryCompleted(ByVal state As Object)
            If (Not (Me.reEvaluateInventoryCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent reEvaluateInventoryCompleted(Me, New reEvaluateInventoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub reEvaluateInventoryAsync(ByVal request As SilverDAT.reEvaluateInventoryRequest)
            Me.reEvaluateInventoryAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub reEvaluateInventoryAsync(ByVal request As SilverDAT.reEvaluateInventoryRequest, ByVal userState As Object)
            If (Me.onBeginreEvaluateInventoryDelegate Is Nothing) Then
                Me.onBeginreEvaluateInventoryDelegate = AddressOf Me.OnBeginreEvaluateInventory
            End If
            If (Me.onEndreEvaluateInventoryDelegate Is Nothing) Then
                Me.onEndreEvaluateInventoryDelegate = AddressOf Me.OnEndreEvaluateInventory
            End If
            If (Me.onreEvaluateInventoryCompletedDelegate Is Nothing) Then
                Me.onreEvaluateInventoryCompletedDelegate = AddressOf Me.OnreEvaluateInventoryCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginreEvaluateInventoryDelegate, New Object() {request}, Me.onEndreEvaluateInventoryDelegate, Me.onreEvaluateInventoryCompletedDelegate, userState)
        End Sub
        
        Public Function changeFileReferenceState(ByVal request As SilverDAT.changeFileReferenceStateRequest) As SilverDAT.changeFileReferenceStateResponse Implements SilverDAT.SDOnlineService.changeFileReferenceState
            Return MyBase.Channel.changeFileReferenceState(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginchangeFileReferenceState(ByVal request As SilverDAT.changeFileReferenceStateRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BeginchangeFileReferenceState
            Return MyBase.Channel.BeginchangeFileReferenceState(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndchangeFileReferenceState(ByVal result As System.IAsyncResult) As SilverDAT.changeFileReferenceStateResponse Implements SilverDAT.SDOnlineService.EndchangeFileReferenceState
            Return MyBase.Channel.EndchangeFileReferenceState(result)
        End Function
        
        Private Function OnBeginchangeFileReferenceState(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.changeFileReferenceStateRequest = CType(inValues(0),SilverDAT.changeFileReferenceStateRequest)
            Return Me.BeginchangeFileReferenceState(request, callback, asyncState)
        End Function
        
        Private Function OnEndchangeFileReferenceState(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.changeFileReferenceStateResponse = Me.EndchangeFileReferenceState(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnchangeFileReferenceStateCompleted(ByVal state As Object)
            If (Not (Me.changeFileReferenceStateCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent changeFileReferenceStateCompleted(Me, New changeFileReferenceStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub changeFileReferenceStateAsync(ByVal request As SilverDAT.changeFileReferenceStateRequest)
            Me.changeFileReferenceStateAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub changeFileReferenceStateAsync(ByVal request As SilverDAT.changeFileReferenceStateRequest, ByVal userState As Object)
            If (Me.onBeginchangeFileReferenceStateDelegate Is Nothing) Then
                Me.onBeginchangeFileReferenceStateDelegate = AddressOf Me.OnBeginchangeFileReferenceState
            End If
            If (Me.onEndchangeFileReferenceStateDelegate Is Nothing) Then
                Me.onEndchangeFileReferenceStateDelegate = AddressOf Me.OnEndchangeFileReferenceState
            End If
            If (Me.onchangeFileReferenceStateCompletedDelegate Is Nothing) Then
                Me.onchangeFileReferenceStateCompletedDelegate = AddressOf Me.OnchangeFileReferenceStateCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginchangeFileReferenceStateDelegate, New Object() {request}, Me.onEndchangeFileReferenceStateDelegate, Me.onchangeFileReferenceStateCompletedDelegate, userState)
        End Sub
        
        Public Function cancelFileReferenceState(ByVal request As SilverDAT.cancelFileReferenceStateRequest) As SilverDAT.cancelFileReferenceStateResponse Implements SilverDAT.SDOnlineService.cancelFileReferenceState
            Return MyBase.Channel.cancelFileReferenceState(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegincancelFileReferenceState(ByVal request As SilverDAT.cancelFileReferenceStateRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BegincancelFileReferenceState
            Return MyBase.Channel.BegincancelFileReferenceState(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndcancelFileReferenceState(ByVal result As System.IAsyncResult) As SilverDAT.cancelFileReferenceStateResponse Implements SilverDAT.SDOnlineService.EndcancelFileReferenceState
            Return MyBase.Channel.EndcancelFileReferenceState(result)
        End Function
        
        Private Function OnBegincancelFileReferenceState(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.cancelFileReferenceStateRequest = CType(inValues(0),SilverDAT.cancelFileReferenceStateRequest)
            Return Me.BegincancelFileReferenceState(request, callback, asyncState)
        End Function
        
        Private Function OnEndcancelFileReferenceState(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.cancelFileReferenceStateResponse = Me.EndcancelFileReferenceState(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OncancelFileReferenceStateCompleted(ByVal state As Object)
            If (Not (Me.cancelFileReferenceStateCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent cancelFileReferenceStateCompleted(Me, New cancelFileReferenceStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub cancelFileReferenceStateAsync(ByVal request As SilverDAT.cancelFileReferenceStateRequest)
            Me.cancelFileReferenceStateAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub cancelFileReferenceStateAsync(ByVal request As SilverDAT.cancelFileReferenceStateRequest, ByVal userState As Object)
            If (Me.onBegincancelFileReferenceStateDelegate Is Nothing) Then
                Me.onBegincancelFileReferenceStateDelegate = AddressOf Me.OnBegincancelFileReferenceState
            End If
            If (Me.onEndcancelFileReferenceStateDelegate Is Nothing) Then
                Me.onEndcancelFileReferenceStateDelegate = AddressOf Me.OnEndcancelFileReferenceState
            End If
            If (Me.oncancelFileReferenceStateCompletedDelegate Is Nothing) Then
                Me.oncancelFileReferenceStateCompletedDelegate = AddressOf Me.OncancelFileReferenceStateCompleted
            End If
            MyBase.InvokeAsync(Me.onBegincancelFileReferenceStateDelegate, New Object() {request}, Me.onEndcancelFileReferenceStateDelegate, Me.oncancelFileReferenceStateCompletedDelegate, userState)
        End Sub
        
        Public Function getFileReferenceCustomers(ByVal request As SilverDAT.getFileReferenceCustomersRequest) As SilverDAT.getFileReferenceCustomersResponse Implements SilverDAT.SDOnlineService.getFileReferenceCustomers
            Return MyBase.Channel.getFileReferenceCustomers(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetFileReferenceCustomers(ByVal request As SilverDAT.getFileReferenceCustomersRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BegingetFileReferenceCustomers
            Return MyBase.Channel.BegingetFileReferenceCustomers(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetFileReferenceCustomers(ByVal result As System.IAsyncResult) As SilverDAT.getFileReferenceCustomersResponse Implements SilverDAT.SDOnlineService.EndgetFileReferenceCustomers
            Return MyBase.Channel.EndgetFileReferenceCustomers(result)
        End Function
        
        Private Function OnBegingetFileReferenceCustomers(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getFileReferenceCustomersRequest = CType(inValues(0),SilverDAT.getFileReferenceCustomersRequest)
            Return Me.BegingetFileReferenceCustomers(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetFileReferenceCustomers(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getFileReferenceCustomersResponse = Me.EndgetFileReferenceCustomers(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetFileReferenceCustomersCompleted(ByVal state As Object)
            If (Not (Me.getFileReferenceCustomersCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getFileReferenceCustomersCompleted(Me, New getFileReferenceCustomersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getFileReferenceCustomersAsync(ByVal request As SilverDAT.getFileReferenceCustomersRequest)
            Me.getFileReferenceCustomersAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getFileReferenceCustomersAsync(ByVal request As SilverDAT.getFileReferenceCustomersRequest, ByVal userState As Object)
            If (Me.onBegingetFileReferenceCustomersDelegate Is Nothing) Then
                Me.onBegingetFileReferenceCustomersDelegate = AddressOf Me.OnBegingetFileReferenceCustomers
            End If
            If (Me.onEndgetFileReferenceCustomersDelegate Is Nothing) Then
                Me.onEndgetFileReferenceCustomersDelegate = AddressOf Me.OnEndgetFileReferenceCustomers
            End If
            If (Me.ongetFileReferenceCustomersCompletedDelegate Is Nothing) Then
                Me.ongetFileReferenceCustomersCompletedDelegate = AddressOf Me.OngetFileReferenceCustomersCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetFileReferenceCustomersDelegate, New Object() {request}, Me.onEndgetFileReferenceCustomersDelegate, Me.ongetFileReferenceCustomersCompletedDelegate, userState)
        End Sub
        
        Public Function setFileReferenceCustomer(ByVal request As SilverDAT.setFileReferenceCustomerRequest) As SilverDAT.setFileReferenceCustomerResponse Implements SilverDAT.SDOnlineService.setFileReferenceCustomer
            Return MyBase.Channel.setFileReferenceCustomer(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginsetFileReferenceCustomer(ByVal request As SilverDAT.setFileReferenceCustomerRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BeginsetFileReferenceCustomer
            Return MyBase.Channel.BeginsetFileReferenceCustomer(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndsetFileReferenceCustomer(ByVal result As System.IAsyncResult) As SilverDAT.setFileReferenceCustomerResponse Implements SilverDAT.SDOnlineService.EndsetFileReferenceCustomer
            Return MyBase.Channel.EndsetFileReferenceCustomer(result)
        End Function
        
        Private Function OnBeginsetFileReferenceCustomer(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.setFileReferenceCustomerRequest = CType(inValues(0),SilverDAT.setFileReferenceCustomerRequest)
            Return Me.BeginsetFileReferenceCustomer(request, callback, asyncState)
        End Function
        
        Private Function OnEndsetFileReferenceCustomer(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.setFileReferenceCustomerResponse = Me.EndsetFileReferenceCustomer(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnsetFileReferenceCustomerCompleted(ByVal state As Object)
            If (Not (Me.setFileReferenceCustomerCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent setFileReferenceCustomerCompleted(Me, New setFileReferenceCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub setFileReferenceCustomerAsync(ByVal request As SilverDAT.setFileReferenceCustomerRequest)
            Me.setFileReferenceCustomerAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub setFileReferenceCustomerAsync(ByVal request As SilverDAT.setFileReferenceCustomerRequest, ByVal userState As Object)
            If (Me.onBeginsetFileReferenceCustomerDelegate Is Nothing) Then
                Me.onBeginsetFileReferenceCustomerDelegate = AddressOf Me.OnBeginsetFileReferenceCustomer
            End If
            If (Me.onEndsetFileReferenceCustomerDelegate Is Nothing) Then
                Me.onEndsetFileReferenceCustomerDelegate = AddressOf Me.OnEndsetFileReferenceCustomer
            End If
            If (Me.onsetFileReferenceCustomerCompletedDelegate Is Nothing) Then
                Me.onsetFileReferenceCustomerCompletedDelegate = AddressOf Me.OnsetFileReferenceCustomerCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginsetFileReferenceCustomerDelegate, New Object() {request}, Me.onEndsetFileReferenceCustomerDelegate, Me.onsetFileReferenceCustomerCompletedDelegate, userState)
        End Sub
        
        Public Function getUserList(ByVal request As SilverDAT.getUserListRequest) As SilverDAT.getUserListResponse Implements SilverDAT.SDOnlineService.getUserList
            Return MyBase.Channel.getUserList(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetUserList(ByVal request As SilverDAT.getUserListRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SilverDAT.SDOnlineService.BegingetUserList
            Return MyBase.Channel.BegingetUserList(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetUserList(ByVal result As System.IAsyncResult) As SilverDAT.getUserListResponse Implements SilverDAT.SDOnlineService.EndgetUserList
            Return MyBase.Channel.EndgetUserList(result)
        End Function
        
        Private Function OnBegingetUserList(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As SilverDAT.getUserListRequest = CType(inValues(0),SilverDAT.getUserListRequest)
            Return Me.BegingetUserList(request, callback, asyncState)
        End Function
        
        Private Function OnEndgetUserList(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SilverDAT.getUserListResponse = Me.EndgetUserList(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetUserListCompleted(ByVal state As Object)
            If (Not (Me.getUserListCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getUserListCompleted(Me, New getUserListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getUserListAsync(ByVal request As SilverDAT.getUserListRequest)
            Me.getUserListAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub getUserListAsync(ByVal request As SilverDAT.getUserListRequest, ByVal userState As Object)
            If (Me.onBegingetUserListDelegate Is Nothing) Then
                Me.onBegingetUserListDelegate = AddressOf Me.OnBegingetUserList
            End If
            If (Me.onEndgetUserListDelegate Is Nothing) Then
                Me.onEndgetUserListDelegate = AddressOf Me.OnEndgetUserList
            End If
            If (Me.ongetUserListCompletedDelegate Is Nothing) Then
                Me.ongetUserListCompletedDelegate = AddressOf Me.OngetUserListCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetUserListDelegate, New Object() {request}, Me.onEndgetUserListDelegate, Me.ongetUserListCompletedDelegate, userState)
        End Sub
    End Class
End Namespace
