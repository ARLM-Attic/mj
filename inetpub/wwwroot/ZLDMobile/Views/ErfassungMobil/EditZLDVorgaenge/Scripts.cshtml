<script type="text/javascript">

    var filterVorgaenge = "";

    $(document).ready(function () {
        InitPage();

        // Eventhandler
        $("#btnRefresh").click(function () {
            ClearMessage();
            if (jsZLDMobile.datenstruktur != null) {
                jsZLDMobile.LadeAemterMitVorgaengen();
            } else {
                jsZLDMobile.InitDatenstruktur();
            }
        });

        $("#txtSuche").keyup(function (e) {
            if (e.keyCode == 13) {
                FilterVorgaenge($("#txtSuche").val());
            }
        });

        $(".ui-input-search .ui-input-clear").live('click', function () {
            FilterVorgaenge("");
        });

        $("#btnSave").click(function () {
            ClearMessage();
            SaveVorgaenge(false);
        });

        $("#btnAlleDurchgefuehrt").click(function () {
            SetForAllRadiobuttonValue("Status", "OK");
        });

        $("#btnAlleEC").click(function () {
            SetForAllRadiobuttonValue("Zahlart", "EC");
        });

        $("#btnAlleBar").click(function () {
            SetForAllRadiobuttonValue("Zahlart", "Bar");
        });

        $("#btnAlleRE").click(function () {
            SetForAllRadiobuttonValue("Zahlart", "RE");
        });

        $("#btnSend").click(function () {
            ClearMessage();
            if (SaveVorgaenge(true) == true) {
                jsZLDMobile.SendeNaechstenVorgang(true);
            }
        });

        $("#lnkSelAmt").click(function () {
            ClearMessage();
            ChangeAnzeigemodus("Kreis", false);
        });

        $("#btnPopupAddPos").click(function () {
            ClearMessage();
            AddVorgangPosition();
        });

        $("#btnPopupApply").click(function () {
            ClearMessage();
            VorgangDetailsUebernehmen();
        });

        jsZLDMobile.InitDatenstruktur();
    });

    // Macht in Abhängigkeit vom gewählten Modus (Kreis/Liste) bestimmte Seitenbereich/-controls (un-)sichtbar und lädt ggf. Daten vom Server nach
    function ChangeAnzeigemodus(neuerModus, datenLaden) {
        switch (neuerModus)
        {
            case "Kreis":
                $("#divVorgangsliste").hide();
                $("#divKreisauswahl").show();
                FillAemterAuswahl(datenLaden);
                break;
            case "Liste":
                $("#divKreisauswahl").hide();
                $("#divVorgangsliste").show();
                filterVorgaenge = "";
                $("#txtSuche").val("");
                FillVorgangGrid();
                jsZLDMobile.UpdateConnectivityStatus();
                break;
        }
    }

    // Seitenfunktionalität je nach Verbindungsstatus einschränken/erweitern
    function ApplyConnectivityStatusPrivate(verbunden) {
        if (verbunden == true) {
            EnableButton("btnSend");
            EnableButton("btnRefresh");
        } else {
            DisableButton("btnSend");
            DisableButton("btnRefresh");
        }
    }

    // Initialisiert bzw. aktualisiert die Einträge in der Auswahlliste der Ämter und lädt ggf. die Vorgänge vom Server
    function FillAemterAuswahl(vorgaengeLaden) {
        // Ämterliste füllen
        $("#lstZulassungskreis").empty();
        $("#lstZulassungskreis").append($('<li>').attr('data-role', "list-divider").addClass("CenterAlignedText").text("Bitte wählen Sie einen Zulassungskreis"));
        if (jsZLDMobile.datenstruktur != null && jsZLDMobile.datenstruktur.AemterMitVorgaengen != null) {
            jsZLDMobile.AemterMitVorgaengenSortieren();
            var dividerEingefuegt = false;

            for (var i = 0; i < jsZLDMobile.datenstruktur.AemterMitVorgaengen.length; i++) {
                var amtmv = jsZLDMobile.datenstruktur.AemterMitVorgaengen[i];
                var dateParts = amtmv.ZulDatText.split(".");
                var datum = new Date(dateParts[2], (dateParts[1] - 1), dateParts[0]);

                if (IstHeute(datum) == true) {
                    $("#lstZulassungskreis")
                        .append($('<li>').attr('title', amtmv.KurzBez)
                            .append($('<a>').attr('href', '#').text(amtmv.KurzBez + "..." + amtmv.Bezeichnung + " (" + amtmv.AnzVorgaenge + " Vorgänge)"))
                        );
                } else {
                    // ggf. Zwischenüberschrift für alte Vorgänge einfügen
                    if (dividerEingefuegt == false) {
                        $("#lstZulassungskreis").append($('<li>').attr('data-role', "list-divider").addClass("CenterAlignedText").text("Alte Vorgänge"));
                        dividerEingefuegt = true;
                    }
                    $("#lstZulassungskreis")
                        .append($('<li>').attr('title', amtmv.KurzBez)
                            .append($('<a>').attr('href', '#').text(amtmv.KurzBez + "..." + amtmv.Bezeichnung + " (" + amtmv.AnzVorgaenge + " Vorgänge vom " + amtmv.ZulDatText + ")"))
                        );
                }
            }

            // Eventhandler initialisieren
            $("#lstZulassungskreis li").on('click', function () {
                SelectKreis($(this).attr("title"), $(this).text());
            });
        }
              
        // UI-Refresh
        RefreshListUI("lstZulassungskreis");
        // ggf. Vorgänge vom Server nachladen
        if (jsZLDMobile.datenstruktur != null && jsZLDMobile.datenstruktur.AemterMitVorgaengen != null && vorgaengeLaden == true) {
            jsZLDMobile.GetVorgaengeFromServer();
        }
    }

    // Gewählter Kreis wird übernommen
    function SelectKreis(id, detailBez, zulDat) {
        if (id != null) {
            var bez = detailBez;
            var zDat = zulDat;
            var alteVorgaenge = false;
            if (bez.indexOf("(") > 0) {
                // ZulDat ggf. aus Text extrahieren
                if (zDat == null || zDat.length == 0) {
                    var textPos = bez.indexOf(" vom ");
                    if (textPos > 0) {
                        zDat = bez.substr(textPos + 5, bez.length - textPos - 7);
                        alteVorgaenge = true;
                    } else {
                        var jetzt = new Date();
                        zDat = PadLeft(jetzt.getDate().toString(), 2, "0") + "." + PadLeft((jetzt.getMonth() + 1).toString(), 2, "0") + "." + PadLeft(jetzt.getFullYear().toString(), 4, "0");
                    }
                }
                bez = bez.substr(0, bez.indexOf("(") - 1);
            }
            jsZLDMobile.selKreis = id;
            jsZLDMobile.selZulDat = zDat;
            if (alteVorgaenge == true) {
                $("#lnkSelAmt").text("Amt  " + bez + " (" + zDat + ")");
            } else {
                $("#lnkSelAmt").text("Amt  " + bez);
            }
            ChangeAnzeigemodus("Liste", false);
        }
    }

    // Options-Menüpunktauswahl verarbeiten
    function SelectOptionPrivate(id) {
        switch(id)
        {
            case "RefreshStammdaten":
                jsZLDMobile.RefreshStammdaten(true);
                break;
            case "DeleteLocalVorgaenge":
                jsZLDMobile.RemoveAemterUndVorgaengeFromLocalStorage(true);
                ChangeAnzeigemodus("Kreis", false);
                break;
            case "DeleteOldLocalVorgaenge":
                jsZLDMobile.CleanUpOldAemterUndVorgaengeInLocalStorage();
                break;
            case "ClearLocalStorage":
                jsZLDMobile.RemoveDatenstrukturFromLocalStorage(true);
                jsZLDMobile.datenstruktur = null;
                ChangeAnzeigemodus("Kreis", false);
                break;
            default:
            break;
        }
    }
     
    // Filtert die Vorgangsliste nach dem angegebenen Filtertext
    function FilterVorgaenge(filterText) {
        if (filterVorgaenge != filterText) {
            filterVorgaenge = filterText;
            FillVorgangGrid();
        }
    }

    // Vorgangsliste anzeigen/aktualisieren
    function FillVorgangGrid() {
        $("#tblVorgaenge tbody tr").remove();
        jsZLDMobile.VorgaengeSortieren();
        if (jsZLDMobile.datenstruktur != null && jsZLDMobile.datenstruktur.Vorgaenge != null) {
            for (var i = 0; i < jsZLDMobile.datenstruktur.Vorgaenge.length; i++) {
                var vorg = jsZLDMobile.datenstruktur.Vorgaenge[i];

                if (vorg.Amt == jsZLDMobile.selKreis && vorg.ZulDatText == jsZLDMobile.selZulDat) {
                    // ggf. Vorgang rausfiltern
                    if (filterVorgaenge.length > 0 && (ContainsIgnoreCase(vorg.Kennzeichen, filterVorgaenge) == false && ContainsIgnoreCase(vorg.Referenz1, filterVorgaenge) == false && ContainsIgnoreCase(vorg.Kunde, filterVorgaenge) == false)) {
                        vorg.IsShown = false;
                    } else {
                        vorg.IsShown = true;
                    }
                } else {
                    vorg.IsShown = false;
                }

                if (vorg.IsShown == true) {
                    for (var k = 0; k < vorg.Positionen.length; k++) {
                        var position = vorg.Positionen[k];

                        // Table-Row hinzufügen
                        if (position.PosNr == "10") {
                            // Hauptposition
                            $("#tblVorgaenge tbody")
                                .append($('<tr>')
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding TableColumnAuto Min-Width-100")
                                        .append($('<b>')
                                            .append($('<a>').text(vorg.Id).attr('href', "#popupEditVorgang?Id=" + vorg.Id).attr('data-rel', "popup").attr('data-position-to', "window")
                                                .click(function () {
                                                    // Daten zum aktuellen Vorgang im Popup anzeigen
                                                    var url = this.toString();
                                                    if (url.indexOf("?") >= 0) {
                                                        var teile = url.split("?");
                                                        for (var y = 0; y < teile.length; y++) {
                                                            if (teile[y].substr(0, 2) == "Id") {
                                                                SaveVorgaenge(false);
                                                                ShowVorgangDetail(teile[y].substr(3));
                                                            }
                                                        }
                                                    }
                                                })
                                            )
                                        )
                                        .append($('<br>'))
                                        .append($('<span>').text(position.DienstleistungBez))
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding TableColumnAuto Min-Width-80")
                                        .append($('<span>').text(vorg.Kunnr))
                                        .append($('<br>'))
                                        .append($('<span>').text(vorg.Kunname))
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding TableColumnAuto Min-Width-80")
                                        .append($('<span>').text(vorg.Referenz1))
                                        .append($('<br>'))
                                        .append($('<span>').text(vorg.Referenz2))
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding TableColumn110")
                                        .append($('<div>').attr('id', "divKennzeichen" + vorg.Id)
                                            .append($('<input>').attr('type', "text").attr('id', "txtKennzeichen" + vorg.Id).attr('maxlength', "20").attr('data-mini', "true").addClass("TextUpperCase").val(vorg.Kennzeichen))
                                        )
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding TableColumn70")
                                        .append($('<div>').attr('id', "divGebuehr" + vorg.Id)
                                            .append($('<input>').attr('type', "text").attr('id', "txtGebuehr" + vorg.Id).attr('maxlength', "11").attr('data-mini', "true").addClass("RightAlignedText").val(FormatGebuehr(position.Gebuehr.toString()))
                                                .blur(function () {
                                                    CalculateGebuehrGesamt();
                                                })
                                            )
                                        )
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding TableColumn60 NoVerticalPadding")
                                        .append($('<div>').attr('id', "divStatus" + vorg.Id)
                                            .append($('<fieldset>').attr('data-role', "controlgroup").attr('data-type', "vertical").attr('data-mini', "true")
                                                .append($('<input>').attr('id', "rbStatusDurchgefuehrt" + vorg.Id).attr('type', "radio").attr('name', "Status" + vorg.Id).val("OK")
                                                    .on('click', function () {
                                                        CalculateGebuehrGesamt();
                                                    })
                                                )
                                                .append($('<label>').attr('for', "rbStatusDurchgefuehrt" + vorg.Id).text("OK"))
                                                .append($('<input>').attr('id', "rbStatusUndefiniert" + vorg.Id).attr('type', "radio").attr('name', "Status" + vorg.Id).val("UNDEF")
                                                    .on('click', function () {
                                                        CalculateGebuehrGesamt();
                                                    })
                                                )
                                                .append($('<label>').attr('for', "rbStatusUndefiniert" + vorg.Id).text("-"))
                                                .append($('<input>').attr('id', "rbStatusFehlgeschlagen" + vorg.Id).attr('type', "radio").attr('name', "Status" + vorg.Id).val("FEHL")
                                                    .on('click', function () {
                                                        CalculateGebuehrGesamt();
                                                    })
                                                )
                                                .append($('<label>').attr('for', "rbStatusFehlgeschlagen" + vorg.Id).text("F"))
                                            )
                                        )
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding TableColumn60 NoVerticalPadding")
                                        .append($('<div>').attr('id', "divZahlart" + vorg.Id)
                                            .append($('<fieldset>').attr('data-role', "controlgroup").attr('data-type', "vertical").attr('data-mini', "true")
                                                .append($('<input>').attr('id', "rbZahlartEC" + vorg.Id).attr('type', "radio").attr('name', "Zahlart" + vorg.Id).val("EC"))
                                                .append($('<label>').attr('for', "rbZahlartEC" + vorg.Id).text("EC"))
                                                .append($('<input>').attr('id', "rbZahlartBar" + vorg.Id).attr('type', "radio").attr('name', "Zahlart" + vorg.Id).val("Bar"))
                                                .append($('<label>').attr('for', "rbZahlartBar" + vorg.Id).text("Bar"))
                                                .append($('<input>').attr('id', "rbZahlartRE" + vorg.Id).attr('type', "radio").attr('name', "Zahlart" + vorg.Id).val("RE"))
                                                .append($('<label>').attr('for', "rbZahlartRE" + vorg.Id).text("RE"))
                                            )
                                        )
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding TableColumn100")
                                        .append($('<span>').text(vorg.KennzeichenGroesse))
                                        .append($('<br>'))
                                        .append($('<span>').text(vorg.KennzeichenAnzahl))
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding TableColumn60")
                                        .append($('<span>').text(vorg.RWKennzeichen))
                                        .append($('<br>'))
                                        .append($('<span>').text(vorg.Saison))
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding TableColumnAuto Min-Width-100")
                                        .append($('<span>').text(vorg.Bemerkung))
                                        .append($('<br>'))
                                        .append($('<span>').text(vorg.VersandzulVkBur))
                                    )
                                );

                            // Radiobutton-Werte setzen
                            // Status
                            if (vorg.StatusDurchgefuehrt == true) {
                                SetRadiobuttonValue("Status" + vorg.Id, "OK", false);
                            } else if (vorg.StatusFehlgeschlagen == true) {
                                SetRadiobuttonValue("Status" + vorg.Id, "FEHL", false);
                            } else {
                                SetRadiobuttonValue("Status" + vorg.Id, "UNDEF", false);
                            }
                            // Zahlart (default: EC)
                            if (vorg.ZahlartBar == true) {
                                SetRadiobuttonValue("Zahlart" + vorg.Id, "Bar", false);
                            } else if (vorg.ZahlartRE == true) {
                                SetRadiobuttonValue("Zahlart" + vorg.Id, "RE", false);
                            } else {
                                SetRadiobuttonValue("Zahlart" + vorg.Id, "EC", false);
                            }

                            // UI-Refresh für eingebettete Controls
                            RefreshNestedControlsUI("divKennzeichen" + vorg.Id);
                            RefreshNestedControlsUI("divGebuehr" + vorg.Id);
                            RefreshNestedControlsUI("divStatus" + vorg.Id);
                            RefreshNestedControlsUI("divZahlart" + vorg.Id);
                        } else {
                            // Unterposition
                            $("#tblVorgaenge tbody")
                                .append($('<tr>')
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding")
                                        .append($('<span>').text(vorg.Id))
                                        .append($('<br>'))
                                        .append($('<span>').text(position.DienstleistungBez))
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding")
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding")
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding")
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding")
                                        .append($('<div>').attr('id', "divGebuehr" + vorg.Id + "_" + k.toString())
                                            .append($('<input>').attr('type', "text").attr('id', "txtGebuehr" + vorg.Id + "_" + k.toString()).attr('maxlength', "11").attr('data-mini', "true").addClass("RightAlignedText").val(FormatGebuehr(position.Gebuehr.toString()))
                                                .blur(function () {
                                                    CalculateGebuehrGesamt();
                                                })
                                            )
                                        )
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding NoVerticalPadding")
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding NoVerticalPadding")
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding")
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding")
                                    )
                                    .append($('<td>').addClass("TableGridCell LessHorizontalPadding")
                                    )
                                );

                            if (!position.GebuehrenMaterial)
                                $("#divGebuehr" + vorg.Id + "_" + k.toString()).hide();

                            // UI-Refresh für eingebettete Controls
                            RefreshNestedControlsUI("divGebuehr" + vorg.Id + "_" + k.toString());
                        }
                    }
                }
            }
        }
         
        // UI-Refresh für Table
        RefreshTableUI("tblVorgaenge");

        CalculateGebuehrGesamt();
    }

    function CalculateGebuehrGesamt() {
        var gebGesamt = 0.0;

        if (jsZLDMobile.datenstruktur != null && jsZLDMobile.datenstruktur.Vorgaenge != null) {
            for (var i = 0; i < jsZLDMobile.datenstruktur.Vorgaenge.length; i++) {
                var vorg = jsZLDMobile.datenstruktur.Vorgaenge[i];

                var selStatus = GetRadiobuttonValue("Status" + vorg.Id);

                if (vorg.IsShown && selStatus != "FEHL") {
                    // Gebühr Hauptposition
                    var strGeb = $("#txtGebuehr" + vorg.Id).val().replace(",", ".").replace(" ", "");
                    var geb = parseFloat(strGeb);

                    if (!isNaN(geb)) {
                        gebGesamt += geb;
                    }

                    // Unterpositionen
                    if (vorg.Positionen.length > 1) {
                        for (var j = 1; j < vorg.Positionen.length; j++) {
                            var strGebUnterpos = $("#txtGebuehr" + vorg.Id + "_" + j.toString()).val().replace(",", ".").replace(" ", "");
                            var gebUnterpos = parseFloat(strGebUnterpos);

                            if (!isNaN(gebUnterpos)) {
                                gebGesamt += gebUnterpos;
                            }
                        }
                    }
                }
            }
        }

        $("#lblGebuehrGesamt").text(FormatGebuehr(gebGesamt.toFixed(2)));
    }

    // Speichert alle Vorgänge zum aktuellen Amt
    function SaveVorgaenge(zumSendenPruefen) {
        var erg = true;

        if (jsZLDMobile.datenstruktur != null && jsZLDMobile.datenstruktur.Vorgaenge != null) {
            for (var i = 0; i < jsZLDMobile.datenstruktur.Vorgaenge.length; i++) {
                var vorg = jsZLDMobile.datenstruktur.Vorgaenge[i];
                if (vorg.IsShown) {
                    vorg.Kennzeichen = $("#txtKennzeichen" + vorg.Id).val().toUpperCase().replace(" ", "");
                    var geb = "";
                    var dienstleistungHauptposition = "";
                    for (var j = 0; j < vorg.Positionen.length; j++) {
                        var position = vorg.Positionen[j];

                        if (position.PosNr == "10") {
                            geb = $("#txtGebuehr" + vorg.Id).val().replace(",", ".").replace(" ", "");
                            dienstleistungHauptposition = position.DienstleistungId;
                        } else {
                            geb = $("#txtGebuehr" + vorg.Id + "_" + j.toString()).val().replace(",", ".").replace(" ", "");
                        }

                        if (geb == null || geb.length == 0) {
                            geb = "0";
                        }
                        position.Gebuehr = geb;
                    }
                    var selStatus = GetRadiobuttonValue("Status" + vorg.Id);
                    vorg.StatusDurchgefuehrt = (selStatus == "OK");
                    vorg.StatusFehlgeschlagen = (selStatus == "FEHL");
                    var selZahlart = GetRadiobuttonValue("Zahlart" + vorg.Id);
                    vorg.ZahlartEC = (selZahlart == "EC");
                    vorg.ZahlartBar = (selZahlart == "Bar");
                    vorg.ZahlartRE = (selZahlart == "RE");
                    vorg.IsDirty = true;
                     
                    // Prüfungen vorm Absenden
                    if (zumSendenPruefen == true) {
                        if (vorg.StatusDurchgefuehrt == true && CheckFormatKennzeichen(vorg.Kennzeichen, dienstleistungHauptposition) == false) {
                            ShowMessage("Senden nicht möglich: Das Kennzeichen hat das falsche Format", true);
                            $("#divKennzeichen" + vorg.Id).addClass("DivFieldError");
                            erg = false;
                        } else {
                            $("#divKennzeichen" + vorg.Id).removeClass("DivFieldError");   
                        }
                    } else {
                        $("#divKennzeichen" + vorg.Id).removeClass("DivFieldError");
                    }
                }
            }
            jsZLDMobile.SaveDatenstrukturInLocalStorage();
            if (zumSendenPruefen == false) {
                ShowMessage("Vorg\u00e4nge gespeichert", false);
            }
        } else {
            ShowMessage("Fehler: Keine lokalen Daten zum Speichern gefunden. Bitte laden Sie die Seite neu.", false);
        }

        return erg;
    }

    // Zeigt im Popupfenster die Detaildaten (v.a. die Positionen) zum gewählten Vorgang an
    function ShowVorgangDetail(vorgId) {
        for (var i = 0; i < jsZLDMobile.datenstruktur.Vorgaenge.length; i++) {
            var vorg = jsZLDMobile.datenstruktur.Vorgaenge[i];
            if (vorg.Id == vorgId) {
                $("#lblPopupID").text(vorg.Id);
                $("#lblPopupReferenz1").text(vorg.Referenz1);
                $("#txtKunde").val(vorg.Kunde);
                $("#txtTelefonNr").val(vorg.TelefonNr);
                $("#txtVorerfasser").val(vorg.Vorerfasser);
                SetDropdownValue("ddlAmt", vorg.AmtEdit, true);
                $("#txtZulDat").val(vorg.ZulDatTextEdit);
                $("#divZulDat").removeClass("DivFieldError");
                $("#txtInfotext").val(vorg.Infotext);
                SetCheckboxValue("chkNachbearbeiten", vorg.Nachbearbeiten, true);

                // Positionstabelle füllen
                $("#tblPopupPositionen tbody tr").remove();
                for (var j = 0; j < vorg.Positionen.length; j++) {
                    var vorgPos = vorg.Positionen[j];
                    // Zeilennummer
                    var lfdNr = j + 1;

                    // Table-Row hinzufügen
                    $("#tblPopupPositionen tbody")
                    .append($('<tr>')
                        .append($('<td>').addClass("TableGridCellNarrow").text(vorgPos.PosNr))
                        .append($('<td>').addClass("TableGridCellNarrow").text(vorgPos.DienstleistungBez))
                        .append($('<td>').addClass("TableGridCellNarrow")
                            .append($('<div>').attr('id', "divGebuehr" + lfdNr)
                                .append($('<input>').attr('type', "text").attr('id', "txtGebuehr" + lfdNr).attr('maxlength', "11").addClass("RightAlignedText").val(FormatGebuehr(vorgPos.Gebuehr.toString()))
                                    .click(function () {
                                        // Text markieren
                                        if ($(this).val() == "0" || $(this).val() == "0,00") {
                                            $(this).select();
                                        }
                                    })
                                )
                            )
                        )
                    );

                    // Gebühr aus Liste übernehmen
                    if (vorgPos.PosNr == "10") {
                        $("#txtGebuehr" + lfdNr).val($("#txtGebuehr" + vorg.Id).val());
                    } else {
                        $("#txtGebuehr" + lfdNr).val($("#txtGebuehr" + vorg.Id + "_" + j.toString()).val());
                    }

                    // UI-Refresh für eingebettete Controls
                    RefreshNestedControlsUI("divGebuehr" + lfdNr);
                }
                // UI-Refresh für Table
                RefreshTableUI("tblPopupPositionen");

                break;
            }
        }
    }

    // Fügt am Ende der Liste eine neue Dienstleistungsposition hinzu
    function AddVorgangPosition() {
        // Prüfen, ob Dienstleistungen gepflegt
        if (jsZLDMobile.datenstruktur.Stammdaten.Dienstleistungen == null || jsZLDMobile.datenstruktur.Stammdaten.Dienstleistungen.length == 0) {
            alert("Fehler: Keine Dienstleistungen gepflegt");
            return;
        }

        // Nächste freie lfd. Nr. ermitteln
        var naechsteNr;
        for (naechsteNr = 1; naechsteNr < 22; naechsteNr++) {
            if (naechsteNr > 20) {
                alert("Es können nur max. 20 Positionen zu einem Vorgang erfasst werden");
                return;
            }

            if (ControlExists("txtGebuehr" + naechsteNr) == false) {
                break;
            }
        }

        // Dienstleistungs-Zeile hinzufügen
        $("#tblPopupPositionen tbody")
            .append($('<tr>')
                .append($('<td>').addClass("TableGridCellNarrow").text(naechsteNr + " (neu)"))
                .append($('<td>').addClass("TableGridCellNarrow")
                    .append($('<div>').attr('id', "divDL" + naechsteNr)
                        .append($('<label>').attr('for', "ddlDL" + naechsteNr).text(""))
                        .append($('<select>').attr('id', "ddlDL" + naechsteNr).attr('name', "ddlDL" + naechsteNr))
                    )
                )
                .append($('<td>').addClass("TableGridCellNarrow")
                    .append($('<div>').attr('id', "divGebuehr" + naechsteNr).addClass("NotDisplayed")
                        .append($('<input>').attr('type', "text").attr('id', "txtGebuehr" + naechsteNr).addClass("RightAlignedText").val("0")
                            .click(function () {
                                // Text markieren
                                if ($(this).val() == "0" || $(this).val() == "0,00") {
                                    $(this).select();
                                }
                            })
                        )
                    )
                )
                .append($('<td>').addClass("TableGridCellNarrow")
                    .append($('<div>').attr('id', "divLoesch" + naechsteNr)
                        .append($('<a>Löschen</a>').attr('href', "#").addClass("ui-btn-right").attr('data-role', "button").attr('data-icon', "delete").attr('data-iconpos', "notext")
                            .click(function () {
                                RemoveVorgangPosition($(this));
                            })
                        )
                    )
                )
            );

        // Dienstleistungs-Dropdown füllen
        $("#ddlDL" + naechsteNr).append($('<option>').val("").text(""));
        for (var j = 0; j < jsZLDMobile.datenstruktur.Stammdaten.Dienstleistungen.length; j++) {
            var dlOption = jsZLDMobile.datenstruktur.Stammdaten.Dienstleistungen[j];
            $("#ddlDL" + naechsteNr).append($('<option>').val(dlOption.Id).text(dlOption.DetailBez));
        }

        // Auf Dropdown-Auswahl reagieren und ggf. Gebührenfeld ein-/ausblenden
        $("#ddlDL" + naechsteNr).on('change', function () {
            var gewaehlteDL = GetDropdownValue("ddlDL" + naechsteNr);
            for (var k = 0; k < jsZLDMobile.datenstruktur.Stammdaten.Dienstleistungen.length; k++) {
                var dl = jsZLDMobile.datenstruktur.Stammdaten.Dienstleistungen[k];
                if (dl.Id == gewaehlteDL) {
                    if (dl.Gebuehrenrelevant == true) {
                        $("#divGebuehr" + naechsteNr).show();
                    } else {
                        $("#divGebuehr" + naechsteNr).hide();
                    }
                    break;
                }
            }
        });

        // UI-Refresh für eingebettete Controls
        RefreshNestedControlsUI("divDL" + naechsteNr);
        RefreshNestedControlsUI("divGebuehr" + naechsteNr);
        RefreshNestedControlsUI("divLoesch" + naechsteNr);

        // UI-Refresh für Table
        RefreshTableUI("tblPopupPositionen");
    }

    // Löscht die gewählte Dienstleistungsposition
    function RemoveVorgangPosition(loeschBtn) {
        if (confirm("Wollen Sie diese Position wirklich löschen?") == true)
            loeschBtn.closest('tr').remove();
    }

    // Übernimmt die im Popup-Fenster getätigten Änderungen zum gewählten Vorgang
    function VorgangDetailsUebernehmen() {
        var lbl = $("#lblPopupID");
         
        for (var i = 0; i < jsZLDMobile.datenstruktur.Vorgaenge.length; i++) {
            var vorg = jsZLDMobile.datenstruktur.Vorgaenge[i];
            if (vorg.Id == lbl.text()) {
                // Vorgangsbezogene Daten übernehmen
                vorg.AmtEdit = GetDropdownValue("ddlAmt");
                var zulDat = $("#txtZulDat").val().replace(" ", "");
                if (CheckFormatDatum(zulDat) == false) {
                    ShowMessage("Das Zulassungsdatum hat das falsche Format", true);
                    $("#divZulDat").addClass("DivFieldError");
                    return;
                }
                if (VergleicheDatum(vorg.ZulDatTextEdit, zulDat) < 0) {
                    ShowMessage("Das Zulassungsdatum darf nur in die Zukunft ver\u00e4ndert werden", true);
                    $("#divZulDat").addClass("DivFieldError");
                    return;
                }
                var zulDatFormatiert = zulDat.substr(0, 2) + zulDat.substr(3, 2) + zulDat.substr(8, 2);
                if (nurWerktage(zulDatFormatiert)[0] == false) {
                    ShowMessage("Das Zulassungsdatum darf nicht auf einem Wochenende oder Feiertag liegen", true);
                    $("#divZulDat").addClass("DivFieldError");
                    return;
                }
                $("#divZulDat").removeClass("DivFieldError");
                vorg.ZulDatTextEdit = zulDat;
                vorg.Infotext = $("#txtInfotext").val();
                vorg.Nachbearbeiten = GetCheckboxValue("chkNachbearbeiten");

                // ggf. neue DL ergänzen, wenn noch nicht in Positionsliste vorhanden
                var naechsteNr;
                for (naechsteNr = vorg.Positionen.length + 1; naechsteNr < 21; naechsteNr++) {
                    if (ControlExists("ddlDL" + naechsteNr) == true) {
                        vorg.Positionen[vorg.Positionen.length] = { KopfId: vorg.Id, PosNr: "" };
                    }
                }

                // Positionen übernehmen/aktualisieren
                for (var j = 0; j < vorg.Positionen.length; j++) {
                    var vgPos = vorg.Positionen[j];
                    var lfdNr = j + 1;

                    if (ControlExists("ddlDL" + lfdNr) == true) {
                        var neueDL = GetDropdownValue("ddlDL" + lfdNr);
                        if (neueDL == "") {
                            ShowMessage("Bitte w\u00e4hlen Sie eine Dienstleistung f\u00fcr die erg\u00e4nzte Position", true);
                            $("#divDL" + lfdNr).addClass("DivFieldError");
                            return;
                        }
                        $("#divDL" + lfdNr).removeClass("DivFieldError");
                        if (vgPos.DienstleistungId != neueDL) {
                            // DL-Bezeichnung ermitteln
                            vgPos.DienstleistungBez = GetDLBezeichnung(neueDL);
                        }
                        vgPos.DienstleistungId = neueDL;
                        
                        for (var k = 0; k < jsZLDMobile.datenstruktur.Stammdaten.Dienstleistungen.length; k++) {
                            var dl = jsZLDMobile.datenstruktur.Stammdaten.Dienstleistungen[k];
                            if (dl.Id == neueDL) {
                                vgPos.GebuehrenMaterial = dl.GebuehrenMaterial;
                                break;
                            }
                        }
                    }
                    var geb = $("#txtGebuehr" + lfdNr).val().replace(",", ".").replace(" ", "");
                    if (geb == null || geb.length == 0) {
                        geb = "0";
                    }
                    vgPos.Gebuehr = geb;
                }
                break;
            }
        }
        // Popup schließen
        $("#popupEditVorgang").popup('close');

        // UI-Liste aktualisieren
        FillVorgangGrid();
    }

    // Dienstleistungsbezeichnung zur gegebenen ID ermitteln
    function GetDLBezeichnung(dlId) {
        if (jsZLDMobile.datenstruktur != null && jsZLDMobile.datenstruktur.Stammdaten != null && jsZLDMobile.datenstruktur.Stammdaten.Dienstleistungen != null) {
            for (var i = 0; i < jsZLDMobile.datenstruktur.Stammdaten.Dienstleistungen.length; i++) {
                var dl = jsZLDMobile.datenstruktur.Stammdaten.Dienstleistungen[i];
                if (dl.Id == dlId) {
                    return dl.Bezeichnung;
                }
            }
        }
        return "";
    }
     
    // Dis-/Enabled den Button zum Nachlesen der Vorgänge vom Server
    function SetRefreshButtonEnabled(aktivieren) {
        if (aktivieren == true) {
            EnableButton("btnRefresh");
        } else {
            DisableButton("btnRefresh");
        }
    }

    // Setzt für alle angezeigten Vorgänge den angegeben Radiobutton-Wert
    // Werte für "Status" : "OK" (durchgeführt), "FEHL" (fehlgeschlagen)
    // Werte für "Zahlart": "EC", "Bar", "RE"
    function SetForAllRadiobuttonValue(radioId, wert) {
        if (jsZLDMobile.datenstruktur != null && jsZLDMobile.datenstruktur.Vorgaenge != null) {
            for (var i = 0; i < jsZLDMobile.datenstruktur.Vorgaenge.length; i++) {
                var vorg = jsZLDMobile.datenstruktur.Vorgaenge[i];
                if (vorg.IsShown) {
                    SetRadiobuttonValue(radioId + vorg.Id, wert, false);
                    RefreshNestedControlsUI("div" + radioId + vorg.Id);
                }
            }
        }
        // UI-Refresh für Table
        RefreshTableUI("tblVorgaenge");
    }

 </script>