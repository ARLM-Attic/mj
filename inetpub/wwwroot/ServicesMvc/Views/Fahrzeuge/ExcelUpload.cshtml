@model CkgDomainLogic.Fahrzeuge.ViewModels.TreuhandverwaltungViewModel 

<h3 class="page-title">Excel Upload <small>Treuhandverwaltung</small></h3>

@*<div class="portlet app-view">*@
<div>
    
    @Html.FormWizard("icon-arrow-up", "", new[] { "Excel Datei hochladen", "Daten überprüfen", "Fertig!" })

    <div id="formWizardTab1" class="hide">
        @Html.Partial("Treuhandverwaltung/ExcelUpload/FileUpload")
    </div>

</div>


<script type="text/javascript">

    var _formWizardForceHideSubmitButton = false;

    function FormPreparePrivate() {
        LoadingHide();
        FormWizardInitPrivate();
    }
    
    function FormWizardInitPrivate() {
        FormWizard.Init(function () {
            FormWizard.ActionsShow(false);
        });

//        FormWizard.OnNext(function (step, maxSteps) {
//            alert(_formWizardForceHideSubmitButton);
//            if (step == 2 && _formWizardForceHideSubmitButton)
//                FormWizard.ButtonSubmitShow(false);
//            return true;
//        });

        FormWizard.OnPrev(function (step, maxSteps) {
            if (step == 1)
                FormWizard.ActionsShow(false);
            return true;
        });

        FormWizard.OnSubmit(function () {
            SubmitUpload();
        });

        FormWizard.OnRestart(function () {
            //alert('Ok, let´s restart! :)');
            LocationReloadWithoutQueryString();
        });
    }

    function FormPreparePrivateAjax() {
        FormPrepareAjax();
        $(".t-status").hide();
    }

    function UploadStart(e) {

        // clear only the UI of our Upload Control:
        //$(this).children(".t-upload-files").remove();

        // because we are uploading in async mode, our "e.files" collection always has exact 1 entry:
        var fileName = e.files[0].name;
                
        if (fileName.toLowerCase().indexOf('.xls') <= 0) {
            alert('Bitte nur XLS-Dateien hochladen!');
            return false;
        }

        LoadingShow();

        return true;
    }

    function UploadFinished(e) {

        // clear only the UI of our Upload Control:
        $(this).children(".t-upload-files").remove();      

        if (!e.response.success) {
            alert(e.response.message);
            return;
        }

        ShowGrid(false);
    }

    function UploadError(e) {
        e.preventDefault();
        alert('Fehler: Es gab ein Problem beim Speichern Ihrer Datei!');
    }

    function ShowGrid() {
        $.ajax({
            type: "POST",
            url: "ExcelUploadShowGrid",
            data: { showErrorsOnly: false },
            loadingShow: true,
            success: function (result) {
                if (typeof (result.message) !== "undefined") {
                    alert(result.message);
                    return;
                }
                FormWizard.SetTabHtml(2, result);
                FormPreparePrivateAjax();
                FormWizard.ButtonNextInvoke();
                if (_formWizardForceHideSubmitButton)
                    FormWizard.ButtonSubmitShow(false);
            }
        });
    }

    function FilterGrid(showErrorsOnly) {
        $.ajax({
            type: "POST",
            url: "ExcelUploadShowGrid",
            data: { showErrorsOnly: showErrorsOnly },
            loadingShow: true,
            success: function (result) {
                FormWizard.SetTabHtml(2, result);
                FormPreparePrivateAjax();
            }
        });
    }
    
    function UploadItemsShowErrorsOnlyChanged(cb) {
        FilterGrid(cb.is(':checked'));
    }

    function SubmitUpload() {
        $.ajax({
            type: "POST",
            url: "ExcelUploadSubmit",
            loadingShow: true,
            success: function (result) {
                if (typeof (result.message) !== "undefined") {
                    alert(result.message);
                    return;
                }
                FormWizard.SetTabHtml(3, result);
                FormPreparePrivateAjax();
                FormWizard.ButtonNextInvoke();
            }
        });
    }

</script>
