@using CkgDomainLogic.Fahrzeuge.ViewModels
@model FahrzeugSperrenEntsperrenViewModel

<h3 class="page-title" id="headerTitle">Versandaufträge <small>sperren / entsperren</small></h3>

@Html.SpanAlert("Message")

<div id="divFzgSperrenEntsperrenGrid">
    @Html.Partial("SperrenEntsperren/Grid", Model)
</div>

<script type="text/javascript">

    var ladeHinweis = '@Localize.LoadingData';

    function FormPreparePrivate() {
        GridAllColumnFilterApplyToGrid("GridFzgSperrenEntsperren");
    }

    function FormPreparePrivateAjax() {
        FormPrepareAjax();
    }

    function GetGrid() {
        return $("#GridFzgSperrenEntsperren").data("tGrid");
    }

    function GridLoadingHide() {
        // needed for chrome browser: Explicitely hide grids loading icon on multiple subsequent grid ajax requests (because of filter control initializing)
        setTimeout('$("#GridFzgSperrenEntsperrenItems .t-grid-pager .t-status .t-icon").removeClass("t-loading")', 500);
    }

    function GridRefresh() {
        GetGrid().ajaxRequest();
    }

    function OnDataBound_GridFzgSperrenEntsperren() {
        FilteredData_Grid_OnDataBound($(this));
        $('.tooltips').tooltip();

        // prepare multi row selection
        App.initUniform();
        Grid_PrepareMultiRowSelected("GridFzgSperrenEntsperren");
    }

    function OnRowDataBound_GridFzgSperrenEntsperren(e) {
        var auswahl = $("input[name='FahrzeugSelektor.Auswahl']:checked").val();
        
        var isItemOk = ((auswahl != "UPLOAD") || (e.dataItem.UploadedFound.toString().toLowerCase() == "true"));

        var tr = $(e.row);
        var classSuffix = tr.hasClass("t-alt") ? "-alt" : "";

        if (!isItemOk)
            tr.addClass("t-grid-error" + classSuffix);
    }

    function OnLoad_GridFzgSperrenEntsperren() {
        $('.t-no-data td').text(ladeHinweis);
    }

    function OnColumnShowHide_GridFzgSperrenEntsperren() {
        FilteredData_Grid_OnColumnShowHide($(this));
    }

    function OnColumnReorder_GridFzgSperrenEntsperren() {
        FilteredData_Grid_OnColumnReorder($(this));
    }

    function FilterFzgSperrenEntsperrenData() {
        var auswahl = $("input[name='FahrzeugSelektor.Auswahl']:checked").val();
        var nurMitBem = $("input[name='FahrzeugSelektor.NurMitBemerkung']").is(':checked');

        $.ajax({
            type: "POST",
            url: "FilterFzgSperrenEntsperrenData",
            data: { auswahl: auswahl, nurMitBemerkung: nurMitBem },
            success: function (result) {
                if (auswahl == "UPLOAD") {
                    $("#divFilterNurBemerkung").hide();
                    ShowUploadDialog();
                } else {
                    $("#divFilterNurBemerkung").show();
                }

                FormPreparePrivateAjax();
                GridFzgSperrenEntsperren_OnAllSelectionChange(false);
                setTimeout(function () {
                    FilterGrid("GridFzgSperrenEntsperren");
                }, 500);
            }
        });
    }
    
    function ShowHideButtons(show) {
        if (show == true) {
            $("#btnFzgSperren").show();
            $("#btnFzgEntsperren").show();
            $("#btnFzgEntsperren").show();
            $("#btnFzgTextErfassen").show();
        } else {
            $("#btnFzgSperren").hide();
            $("#btnFzgEntsperren").hide();
            $("#btnFzgEntsperren").hide();
            $("#btnFzgTextErfassen").hide();
        }
    }

    // Overwrite für globale Funktion, da dort Probleme mit mehreren Checkbox-Spalten im Grid bestehen
    function Grid_PrepareMultiRowSelected(gridName, rowBackgroundSelectionDisabled) {

        $("#" + gridName + " table tbody tr").each(function () {
            var tr = $(this);
            tr.addClass('t-grid-multi-row-select');
            tr.find("td input[type='checkbox'][name='checkedRecords']").each(function () {
                Grid_FormatMultiRowSelected(tr, this.checked);
                $(this).change(function () { Grid_FormatMultiRowSelected(tr, this.checked); });
            });
        });

        if (typeof (rowBackgroundSelectionDisabled) == 'undefined' || !rowBackgroundSelectionDisabled)
            $("#" + gridName + " table tbody tr").click(function (e) {
                var clickedElement = e.target;
                var tr = $(this);
                tr.find("td input[type='checkbox'][name='checkedRecords']").each(function () {
                    if (this == clickedElement)
                        return false;

                    this.checked = !($(this).is(':checked'));
                    $.uniform.update($(this));
                    //Grid_FormatMultiRowSelected(tr, this.checked);
                    $(this).trigger('change');
                    return true;
                });
            });
    }

    function OnSelectionChange_GridFzgSperrenEntsperren(cb) {

        Grid_FormatMultiRowSelected(cb);

        $.ajax({
            type: "POST",
            url: "FzgSperrenEntsperrenSelectionChanged",
            data: { vin: cb.val(), isChecked: cb.is(':checked') },
            loadingShow: false,
            success: function (result) {
                GridFzgSperrenEntsperren_MultiSelectUpdate(result.allSelectionCount);
            }
        });
    }

    function GridFzgSperrenEntsperren_OnAllSelectionChange(check) {
        $.ajax({
            type: "POST",
            url: "FzgSperrenEntsperrenSelectionChanged",
            data: { vin: "", isChecked: check },
            loadingShow: true,
            success: function (result) {
                GridFzgSperrenEntsperren_MultiSelectUpdate(result.allSelectionCount);
                GridRefresh();
            }
        });
    }

    function GridFzgSperrenEntsperren_MultiSelectUpdate(count) {
        ShowHideButtons(count > 0);
        if (count == 0) {
            $("#FzgSperrenEntsperrenCount").addClass('hide');
            $("#uncheckAllRecords").attr("checked", false);
            $.uniform.update($("#uncheckAllRecords"));
            return;
        }

        $("#FzgSperrenEntsperrenCount").removeClass('hide');
        $("#FzgSperrenEntsperrenCount > span").html('Sie haben ' + count + ' Fahrzeug' + (count == 1 ? '' : 'e') + ' ausgewählt!');
        $("#uncheckAllRecords").attr("checked", true);
        $.uniform.update($("#uncheckAllRecords"));
    }
    
    function FzgSperren(sperren) {
        $.ajax(
        {
            type: "POST",
            url: "FzgSperrenEntsperren",
            loadingShow: true,
            data: { sperren: sperren },
            success: function (result) {
                if (typeof (result.message) !== "undefined") {
                    SpanAlertWarning("Message", result.message, 5000);
                    return;
                }

                var detailWindow = $("#FzgSperrenDialog").data("tWindow");
                if (sperren == true) {
                    detailWindow.title('@Localize.Lock');
                } else {
                    detailWindow.title('@Localize.Unlock');
                }
                $("#InnerFzgSperrenDialog").html(result);
                detailWindow.center().open();
            }
        });

        return false;
    }

    function AjaxFormFzgSperrenClose() {
        $("#FzgSperrenDialog").data("tWindow").close();
    }

    function AjaxFormFzgSperrenComplete() {
        if (_modelIsValid) {
            $("#FzgSperrenDialog").data("tWindow").close();
            SpanAlertSuccess("Message", _sperrenEntsperrenResult, 5000);
            window.scrollTo(0, 0);
            UpdateGridAjax();
        }
    }

    function UpdateGridAjax() {
        FormPreparePrivateAjax();

        $.ajax({
            type: "POST",
            url: "UpdateGridFahrzeugeSperrenEntsperren",
            success: function (result) {
                $("#divFzgSperrenEntsperrenGrid").html(result);
                GridAllColumnFilterApplyToGrid("GridFzgSperrenEntsperren");
            }
        });
    }

</script>

@(Html.Telerik().Window()
    .Name("FzgSperrenDialog")
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Scrollable(false)
    .Width(540)
    .Content(@<text><div id="InnerFzgSperrenDialog"></div></text>))

