@using CkgDomainLogic.Fahrzeuge.Models
@model TreuhandverwaltungSelektor

<div id="divTreuhandverwaltungKundenAuswahl">    
    @using (Ajax.BeginForm("LoadTreuhandverwaltungFreigaben", "Fahrzeuge", null,
        new MvcAjaxOptions("divTreuhandverwaltungKundenAuswahl") { OnComplete = "ShowTreuhandverwaltungFreigaben();" }, new { id = "TreuhandverwaltungAuswahlForm" }))
    {
        <div class="form-horizontal" id="divAuswahlForm">  
             
            @Html.FormValidationSummary()

            @Html.HiddenFor(m => m.Treuhandberechtigung.Freigeben)
            @Html.HiddenFor(m => m.Treuhandberechtigung.Sperren)
            @Html.HiddenFor(m => m.Treuhandberechtigung.Entsperren)

            @{Model.Reporttype = ReportType.Services; }

            @Html.FormDropDownListFor(m => m.Kundenkennung, TreuhandverwaltungSelektor.TreuhandKundenEmpty, new { @class = "m-wrap", onchange = "KundenkennungOnChange();" })

            <div id="divAktionen" class="@(@Model.HatBerechtigungen ? "" : "hide")">
                @Html.FormRadioButtonListFor(m => m.Aktion, Model.Aktionen.ToSelectList())
                <div id="divSelektion" class="@(@Model.Aktion == "0" ? "" : "hide")">  
                    @Html.FormRadioButtonListFor(m => m.Selektion, TreuhandverwaltungSelektor.Selektionen.ToSelectList())
                </div>
            </div>
                
            <div id="divSubmit" class="form-actions @(@Model.HatBerechtigungen ? "" : "hide")">
                <button type="submit" class='btn blue'>@Localize.Continue</button>
            </div>
        </div>
        
        <script type="text/javascript">
            _modelStateValid = @ViewContext.ViewData.ModelState.IsValid.ToString().ToLower();
            _treuhandAktion = @Model.Aktion;
        </script>
    }
</div>


<script type="text/javascript"> 

    $(":radio[value=0]").click(function () { ShowElements(); });
    $(":radio[value=1]").click(function () { ShowElements(); });
    $(":radio[value=2]").click(function () { ShowElements(); });
   
    function KundenkennungOnChange() {
        ResetWizard();

        ApplyKunde($("#Kundenkennung").val());
    }
    
    function ResetWizard() {
        if ($(".button-prev").length > 0) {
            FormWizard.ButtonPrevInvoke();
            // ggf. nochmal zurück, falls schon in Schritt 3
            if ($(".button-prev").length > 0) {
                FormWizard.ButtonPrevInvoke();
            }
        }
        FormWizard.ActionsShow(false);
    }

    function ApplyKunde(kunnr) {
        $.ajax({
            type: "POST",
            url: "ApplyKunde",
            data: { kunnr: kunnr },
            success: function (result) {
                $("#divSuche").html(result);
                FormPreparePrivateAjax();
            }
        });
    }        
   
    function ShowElements() {
        if ($(":radio[value=0]").is(":checked")) {
            $("#divSelektion").show();
        }
        else if ($(":radio[value=1]").is(":checked") || $(":radio[value=2]").is(":checked")) {
            $("#divSelektion").hide();
        }
    }

    function FormPreparePrivate() {
    }

    function FormPreparePrivateAjax() {
        FormPrepareAjax();
    }

    function GetGrid() {
        return $("#GridTreuhandverwaltungFreigabe").data("tGrid");
    }

    function GridLoadingHide() {
        // needed for chrome browser: Explicitely hide grids loading icon on multiple subsequent grid ajax requests (because of filter control initializing)
        setTimeout('$("#GridTreuhandverwaltungFreigabeItems .t-grid-pager .t-status .t-icon").removeClass("t-loading")', 500);
    }

    function GridRefresh() {
        GetGrid().ajaxRequest();
    }

    function OnDataBound_TreuhandverwaltungGrid() { }

    function OnColumnShowHide_TreuhandverwaltungGrid() { }

    function OnColumnReorder_TreuhandverwaltungGrid() { }

    function OnRowDataBound_TreuhandverwaltungGrid(e) {
        var hasError = e.dataItem["ValidationErrors"];

        if (hasError)
            $(e.row).addClass((e.row.sectionRowIndex % 2 == 0) ? "t-grid-error" : "t-grid-error-alt");
    }

    function ShowTreuhandverwaltungFreigaben() {
        if (_treuhandAktion == "0") {
            $.ajax({
                type: "POST",
                url: "ShowTreuhandverwaltungFreigaben",
                loadingShow: true,
                success: function(result) {
                    if (_modelStateValid) {
                        $("#divExcelUpload").hide();
                        ShowTreuhandverwaltungFreigabeSearchResult(result);
                    }
                    LoadingHide();
                }
            });
        } else {
            $("#divExcelUpload").show();
            ResetWizard();
            $("#divGrid").empty();
            SearchFormHide();
        }

        FormPreparePrivateAjax();
    }        

    function ShowTreuhandverwaltungFreigabeSearchResult(result) {
        SearchFormHide();
        $("#divGrid").html(result);

        GridAllColumnFilterApplyToGrid("GridTreuhandverwaltungFreigabe");
        $("#divGrid").slideDown();
    }
             
    function OnDataBound_GridTreuhandverwaltungFreigabe(e) {   
        if (e != null && e.dataItem != null) {
            var hasError = e.dataItem["ValidationErrors"];

            if (hasError)
                $(e.row).addClass((e.row.sectionRowIndex % 2 == 0) ? "t-grid-error" : "t-grid-error-alt");
        }
    }

    function OnColumnShowHide_GridTreuhandverwaltungFreigabe() {
        FilteredData_Grid_OnColumnShowHide($(this));
    }

    function OnColumnReorder_GridTreuhandverwaltungFreigabe() {
        FilteredData_Grid_OnColumnReorder($(this));
    }

    function OnLoad_GridTreuhandverwaltungFreigabe() {        
    }
             
    function GridTreuhandverwaltungFreigabe_OnSelectionChange(cb) {
        Grid_FormatMultiRowSelected(cb);

        $.ajax({
            type: "POST",
            url: "FahrzeugAuswahlFreigabeSelectionChanged",
            data: { fin: cb.val(), isChecked: cb.is(':checked') },
            loadingShow: false,
            success: function (result) {
                var count = result.allSelectionCount;
                GridTreuhandverwaltungFreigabe_MultiSelectUpdate(result.allSelectionCount);
                if (count == 0) {
                    $("#formActions").addClass('hide');
                }
                else {
                    $("#formActions").removeClass('hide'); 
                 }
            }
        });
    }

    function GridTreuhandverwaltungFreigabe_MultiSelectUpdate(count) {
        if (count == 0) {
            $("#uncheckAllRecords").attr("checked", false);
            $.uniform.update($("#uncheckAllRecords"));
            return;
        }

        $("#uncheckAllRecords").attr("checked", true);
        $.uniform.update($("#uncheckAllRecords"));
    }

    function FahrzeugeFreigeben() {
        $.ajax(
        {
            type: "POST",
            url: "FahrzeugeFreigeben",
            loadingShow: false,
            success: function (result) {
                GridRefresh();
                FormPreparePrivateAjax();
            }
        });

        return false;
    }
 
    function FreigabeAblehnen() {
        $.ajax(
        {
            type: "POST",
            url: "FreigabeAblehnen",
            loadingShow: false,
            success: function (result) {
                GridRefresh();
                FormPreparePrivateAjax();
            }
        });

        return false;
    }

    function AjaxFormKommentarEdit(fin) {
        $.ajax(
            {
                type: "POST",
                url: "FahrzeugKommentar",
                data: { fin: fin },
                loadingShow: true,
                success: function (result) {
                    var detailWindow = $("#KommentarBearbeiten").data("tWindow");
                    $("#InnerKommentarBearbeiten").html(result);
                    detailWindow.center().open();
                }
            });           
        return false;
    }

    function GridItemDetailsFormPreparePrivateAjax() {
        var detailWindow = $("#KommentarBearbeiten").data("tWindow");
        detailWindow.close();
        ShowFreigebenAblehnen();
        // das geht leider nicht
        if ($("input:checkbox:checked").length > 0) {
            $("#formActions").removeClass('hide');
        }
        else {
            $("#formActions").addClass('hide');           
        }       
    }

    function ShowFreigebenAblehnen() {
        $.ajax({
            type: "POST",
            url: "ShowTreuhandverwaltungFreigabenGesperrte",
            loadingShow: true,
            success: function (result) {
                ShowTreuhandverwaltungFreigabeSearchResult(result);
                LoadingHide();
            }
        });               
    }        

    function GridTreuhandverwaltungFreigabe_OnAllSelectionChange(check) {
        $.ajax({
            type: "POST",
            url: "FahrzeugAuswahlFreigabeSelectionChanged",
            data: { fin: "", isChecked: check },
            loadingShow: true,
            success: function (result) {
                var count = result.allSelectionCount;
                TreuhandverwaltungGrid_MultiSelectUpdate(result.allSelectionCount);

                FilterGrid("TreuhandverwaltungGrid");
            }
        });
    }
       
</script>


@(Html.Telerik().Window()
    .Name("KommentarBearbeiten")
    .Visible(false)
    .Title(Localize.Comment)
    .Modal(true)
    .Draggable(true)
    .Scrollable(false)
    .Width(400)
    .Height(150)
    .Content(@<text><div id="InnerKommentarBearbeiten"></div></text>))
