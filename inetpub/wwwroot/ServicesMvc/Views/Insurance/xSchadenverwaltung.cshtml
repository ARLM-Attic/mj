@using CkgDomainLogic.Insurance.ViewModels
@model SchadenverwaltungViewModel

<h3 class="page-title" id="headerTitle">@Localize.Insurance_Schadenverwaltung <small></small></h3>

@Html.SpanAlert("spanAlertSchadenverwaltung")

<div id="closeSchadenfallEdit" onclick="CloseSchadenfallEdit();" class="icon-close"></div>

<div id="closeSchadenakte" onclick="CloseSchadenakte();" class="icon-close"></div>

<div id="divSchadenfaelleGrid">
    @Html.Partial("Schadenverwaltung/SchadenfaelleGrid", Model)
</div>

<div id="divSchadenfallEdit"></div>

<div id="divSchadenakte"></div>


<script type="text/javascript">

    var _modelStateValid = false;
    
    function FormPreparePrivate() {
        GridAllColumnFilterApplyToGrid("GridSchadenfaelle");
    }

    function FormPreparePrivateAjax() {
        FormPrepareAjax();
    }

    function GetGrid() {
        return $("#GridSchadenfaelle").data("tGrid");
    }

    function GridLoadingHide() {
        // needed for chrome browser: Explicitely hide grids loading icon on multiple subsequent grid ajax requests (because of filter control initializing)
        setTimeout('$("#GridSchadenfaelleItems .t-grid-pager .t-status .t-icon").removeClass("t-loading")', 500);
    }

    function GridRefresh() {
        GetGrid().ajaxRequest();
    }

    function OnDataBound_GridSchadenfaelle() {
        FilteredData_Grid_OnDataBound($(this));
        $('.tooltips').tooltip();
    }

    function OnColumnShowHide_GridSchadenfaelle() {
        FilteredData_Grid_OnColumnShowHide($(this));
    }

    function OnColumnReorder_GridSchadenfaelle() {
        FilteredData_Grid_OnColumnReorder($(this));
    }

    function SchadenfallEdit(id) {
        $.ajax({
            type: "POST",
            url: "ShowSchadenfallEdit",
            data: { id: id },
            loadingShow: true,
            success: function (result) {
                ShowSchadenfallEdit(result);
            },
            error: function (result) {
                SpanAlertWarning("spanAlertSchadenverwaltung", result.data, 5000);
            }
        });
    }

    function SchadenfallDelete(id) {
        var message = '@Localize.DamageCaseDoYouReallyWantToDelete.ToJavascriptString()';

        if (!confirm(message)) {
            return;
        }
        
        $.ajax({
            type: "POST",
            url: "DeleteSchadenfall",
            data: { id: id },
            loadingShow: true,
            success: function (data) {
                var success = data["Success"];
                var message = data["Message"];
                if (success == true) {
                    SpanAlertSuccess("spanAlertSchadenverwaltung", message, 1800);
                    TryGridRefresh();
                } else {
                    SpanAlertError("spanAlertSchadenverwaltung", message, 5000);
                }
            },
            error: function (result) {
                SpanAlertWarning("spanAlertSchadenverwaltung", result.data, 5000);
            }
        });
    }

    function SchadenfallCreate() {
        $.ajax({
            type: "POST",
            url: "CreateSchadenfall",
            data: { },
            loadingShow: true,
            success: function (result) {
                ShowSchadenfallEdit(result);
            },
            error: function (result) {
                SpanAlertWarning("spanAlertSchadenverwaltung", result.data, 5000);
            }
        });
    }

    function ShowSchadenfallEdit(result, showCloseButton) {
        $("#divSchadenfallEdit").html(result);
        $("#divSchadenfaelleGrid").slideUp();
        $("#divSchadenfallEdit").slideDown();

        if (showCloseButton == null) showCloseButton = true;
        if (showCloseButton) {
            $("#closeSchadenfallEdit").show();
        }

        FormPreparePrivateAjax();
        //alert('ok');
    }

    function CloseSchadenfallEdit() {
        $("#closeSchadenfallEdit").hide();
        $("#divSchadenfallEdit").slideUp(function () {
            $("#divSchadenfaelleGrid").delay(200).show();
            window.scrollTo(0, 0);
        });
        TryGridRefresh();
    }

    function CloseSchadenakte() {
        $("#closeSchadenakte").hide();
        $("#divSchadenakte").slideUp(function () {
            $("#divSchadenfaelleGrid").delay(200).show();
            window.scrollTo(0, 0);
        });
        TryGridRefresh();
    }

    function ShowSchadenakte(result, showCloseButton) {
        $("#divSchadenakte").html(result);
        GridAllColumnFilterApplyToGrid("SchadenakteDocsGrid");
        $("#divSchadenfaelleGrid").slideUp();
        $("#divSchadenakte").slideDown();

        if (showCloseButton == null) showCloseButton = true;
        if (showCloseButton) {
            $("#closeSchadenakte").show();
        }

        FormPreparePrivateAjax();
    }

    function ShowSchadenakteAjax(id) {
        $.ajax({
            type: "POST",
            url: "ShowSchadenakte",
            data: { id: id },
            loadingShow: true,
            success: function (result) {
                ShowSchadenakte(result);
            },
            error: function (result) {
                SpanAlertWarning("spanAlertSchadenakte", result.data, 5000);
            }
        });
    }

    function TryGridRefresh() {
        // Refresh grid only
        if (typeof (GetGrid()) !== "undefined") {
            GetGrid().ajaxRequest();
        }
    }


    function EditSchadenfallComplete() {
        FormPreparePrivateAjax();

        if (_modelStateValid) {
            var successMessage = '@Localize.SaveSuccessful.ToJavascriptString()';
            SpanAlertSuccess("spanAlertSchadenverwaltung", successMessage, 1800);
            CloseSchadenfallEdit();
        }
    }

    function NumbersOnlyInt(e) {
        var evt = (e) ? e : window.event;
        var key = (evt.keyCode) ? evt.keyCode : evt.which;

        // 0-9
        if (key >= 48 && key <= 57) {
            return true;
        }

        // alle anderen Zeichen nicht zulassen
        return false;
    }

    function CleanUpKennzeichen(e) {
        var evt = (e) ? e : window.event;
        var key = (evt.keyCode) ? evt.keyCode : evt.which;

        // 0-9
        if (key >= 48 && key <= 57) {
            return true;
        }
        // A-Z
        if (key >= 65 && key <= 90) {
            return true;
        }
        // a-z
        if (key >= 97 && key <= 122) {
            return true;
        }
        // ä,ö,ü,Ä,Ö,Ü,-
        if (key == 132 || key == 148 || key == 129 || key == 142 || key == 153 || key == 154 || key == 45) {
            return true;
        }

        // alle anderen Zeichen nicht zulassen
        return false;
    }

    function CleanUpEMail(e) {
        var evt = (e) ? e : window.event;
        var key = (evt.keyCode) ? evt.keyCode : evt.which;

        // 0-9
        if (key >= 48 && key <= 57) {
            return true;
        }
        // A-Z
        if (key >= 65 && key <= 90) {
            return true;
        }
        // a-z
        if (key >= 97 && key <= 122) {
            return true;
        }
        // .,_,%,+,-,at
        if (key == 46 || key == 95 || key == 37 || key == 43 || key == 45 || key == 64) {
            return true;
        }

        // alle anderen Zeichen nicht zulassen
        return false;
    }

    function CleanUpTelefonnummer(e) {
        var evt = (e) ? e : window.event;
        var key = (evt.keyCode) ? evt.keyCode : evt.which;

        // 0-9
        if (key >= 48 && key <= 57) {
            return true;
        }
        // +,-,/,(,)
        if (key == 43 || key == 45 || key == 47 || key == 40 || key == 41) {
            return true;
        }

        // alle anderen Zeichen nicht zulassen
        return false;
    }

</script>
