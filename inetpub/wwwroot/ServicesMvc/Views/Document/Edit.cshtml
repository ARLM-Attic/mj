@model CkgDomainLogic.DomainCommon.Models.DokumentErstellenBearbeiten

<div id="@MvcAjaxOptions.AjaxFormContainerName">
    
    @using (Ajax.BeginForm("Edit", "Document", null, new MvcAjaxOptions {OnComplete = "EditDocumentComplete();"}, new {@class = "form-horizontal", id = "ajaxForm"}))
    {
        @Html.FormValidationSummary()


        <div class="space10"></div>
        
        @Html.HiddenFor(m => m.ID)
        @Html.HiddenFor(m => m.Name)

        @Html.FormTextBlockFor(m => m.Name, new { @class = "m-wrap" })
        
        @Html.FormDropDownListFor(m => m.DocTypeID, Model.AvailableDocumentTypes.ToSelectList("DocumentTypeID", "DocTypeName"), new { @class = "m-wrap" })

        if (Model.GeneralMode)
        {
            @Html.FormTextBoxFor(m => m.Tags, new { @class = "m-wrap", maxlength = 100 })
        }
        else
        {
            @Html.FormMultiSelectListFor(m => m.SelectedWebGroups, Model.AvailableWebGroups.ToSelectList("GroupID", "GroupName"), new { @class = "m-wrap chosen" })
        }


        @Html.FormRequiredFieldsSummary()

        <div class="form-actions">
            <button type="submit" class="btn green"><i class="icon-ok"></i> @Localize.Save</button>
            <button type="button" class="btn" onclick="CloseDocumentDetails();">@Localize.Cancel</button>
        </div>

        <script type="text/javascript">
            _modelIsValid = @ViewContext.ViewData.ModelState.IsValid.ToString().ToLower();

            function EditDocumentComplete() {
                FormPreparePrivateAjax();

                if (_modelIsValid)
                    CloseDocumentDetails();
            }
        </script>
    }

</div>
