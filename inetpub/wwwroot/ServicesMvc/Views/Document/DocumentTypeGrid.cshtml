@using CkgDomainLogic.DomainCommon.ViewModels
@using CkgDomainLogic.General.Database.Models
@model DokumentViewModel
@{ 
    var gridName = "DocumentTypeGrid";
}

@(Html.Telerik()
    .Grid<DocumentType>()
    .Name(gridName)
    .XGroup(gridName)
    .XAjaxDataBinding("DocumentTypeAjaxBinding", "Document")
    .Columns(columns =>
    {
        columns.XBound(c => c.DocumentTypeID).Title("").Filterable(false).Sortable(false)
            .ClientTemplate(
                "<button onclick='EditDocumentType(\"<#= data.DocumentTypeID #>\");' class='btn mini gray tooltips' data-original-title='" + Localize.DocumentEdit + "' data-placement='right'><i class='halflings-icon white pencil'></i></button>"
                + "&nbsp;"
                + "<button onclick='DeleteDocumentType(\"<#= data.DocumentTypeID #>\");' class='btn mini gray tooltips' data-original-title='" + Localize.DocumentDelete + "' data-placement='right'><i class='halflings-icon white remove'></i></button>"
            )
            .HeaderTemplate(
                "<button onclick='CreatedocumentType();' class='btn mini gray tooltips' data-original-title='" + Localize.DocumentAddNewDocumentType + "' data-placement='right'><i class='halflings-icon white plus'></i></button>"
            )
        ;

        columns.XBound(c => c.DocTypeName);
    })
    .XAutoColumnConfiguration()
    .ClientEvents(events => events.XAutoClientEvents(gridName))
    .XPageSize(10)
    .XSort(sortOrder => sortOrder.Add(c => c.DocTypeName).Ascending())
    .ToolBar(commands =>
    {
        commands.FilteredDataCommand("ExportDocumentTypesFilteredExcel", "Document");
        commands.FilteredDataCommand("ExportDocumentTypesFilteredPDF", "Document");
    })
)
