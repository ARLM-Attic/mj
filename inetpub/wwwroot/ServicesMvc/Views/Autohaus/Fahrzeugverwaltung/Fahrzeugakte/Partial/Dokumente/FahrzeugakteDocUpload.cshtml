@using CkgDomainLogic.Autohaus.Models
@model FahrzeugakteDocument

@Html.FormLabel(Localize.DocumentUploadDocument, "SummaryItemTitle float-left margin-right-10 margin-top-10")

@(Html.Telerik()
    .Upload()
    .Name("UploadFahrzeugakteDoc")
    .Multiple(false)
    .Localizable("de-DE")
    .Async(async => async
            .Save("UploadFahrzeugakteDoc", "Autohaus")
            .SaveField("uploadFiles")
            .AutoUpload(true) // Dies ist der Initial Wert, notwendig weil in bestimmten Fällen der Anwender eine Auswahl treffen muss
    )
    .ShowFileList(true)
    .ClientEvents(events => events
        .OnSelect("onFileSelect")
        .OnUpload("UploadStart")
        .OnComplete("UploadFinished")
        .OnError("UploadError")
    )
)

<div class="space20"></div>
@Html.FormRequiredFieldsSummary()

<div class="form-actions">
    <button type="button" class="btn" onclick="CloseFahrzeugakteDocEdit();">@Localize.Cancel</button>
</div>
      
<script type="text/javascript" >

    function SetFahrzeugakteDocProperties() {
        var categoryId = $("#CategoryID").val().toString();
        var bemerkung = $("#Bemerkung").val().toString();

        $.ajax({
            type: "POST",
            url: "SetFahrzeugakteDocProperties",
            data: { categoryId: categoryId, bemerkung: bemerkung }
        });
    }

    function isLegalExtension(ext) {
        switch (ext.toLowerCase()) {
            case 'pdf':
            case 'doc':
            case 'docx':
            case 'xls':
            case 'xlsx':
            case 'txt':
            case 'csv':
            case 'jpg':
            case 'jpeg':
            case 'gif':
            case 'png':
                return true;
        }
        return false;
    }

    function onFileSelect(e) {
        // Kategorie und Bemerkung an Server übermitteln
        SetFahrzeugakteDocProperties();

        e.files.forEach(function(file) {
            var fileName = file.name;
            var parts = fileName.split('.');
            var extension = parts[parts.length - 1];

            // Nur bestimmte Dateitypen sind zugelassen
            if (!isLegalExtension(extension)) {
                var message = '@Localize.CustomerDocumentUploadLegalFiletypeWarning.ToJavascriptString()';
                SpanAlertWarning("Message", message, 3000);
                e.preventDefault();
                return false;
            }
        });
    }

    function UploadStart(e) {
        // Kategorie und Bemerkung an Server übermitteln
        SetFahrzeugakteDocProperties();

        LoadingShow();

        return true;
    }

    function UploadFinished(e) {

        // clear only the UI of our Upload Control:
        $(this).children(".t-upload-files").remove();

        // AutoUpload immer am Ende auf false setzen.  So habe ich die Chance dem Anwender notfalls zu fragen was mit einem dokument passieren soll
        $('#UploadFahrzeugakteDoc').data('tUpload').async.autoUpload = false;
        CloseFahrzeugakteDocEdit();
    }

    function UploadError(e) {
        e.preventDefault();
        LoadingHide();
        var message = '@Localize.UploadErrorOccurred.ToJavascriptString()';
        SpanAlertWarning("Message", message, 3000);
    }
</script>     
