@using DomainCommonModels = CkgDomainLogic.DomainCommon.Models

<script type="text/javascript">

    var _modelStateValid = false;

//    $("#ModellID").onblur(function () {
//        alert('fired');
//        TryLoadDataByModelId(this);
//    });

    function FormPreparePrivate() {
        $("#BatcherfassungSearchForm button[type=submit]").trigger("click");
        GridAllColumnFilterApplyToGrid("GridBatcherfassung");
        FormWizardInitPrivate();
    }

    function FormPreparePrivateAjax() {
        FormPrepareAjax();
        //$(".t-status").hide();
    }

    function GetGrid() {
        return $("#GridBatcherfassung").data("tGrid");
    }

    function GridLoadingHide() {
        // needed for chrome browser: Explicitely hide grids loading icon on multiple subsequent grid ajax requests (because of filter control initializing)
        setTimeout('$("#GridBatcherfassung .t-grid-pager .t-status .t-icon").removeClass("t-loading")', 500);
    }

    function TryBatcherfassungGridRefresh() {
        FilterGrid("GridBatcherfassung");
    }

    function TryGridPageTo1() {
        // Refresh grid and goto grid page 1
        if (typeof (GetGrid()) !== "undefined") {
            GetGrid().pageTo(1);
        }
    }

    function OnDataBound_GridBatcherfassung() {
        FilteredData_Grid_OnDataBound($(this));
        $('.tooltips').tooltip();
    }

    function OnColumnShowHide_GridBatcherfassung() {
        FilteredData_Grid_OnColumnShowHide($(this));
    }

    function OnColumnReorder_GridBatcherfassung() {
        FilteredData_Grid_OnColumnReorder($(this));
    }

    function ShowBatcherfassung() {

        FormPreparePrivateAjax();
      
        $.ajax({
            type: "POST",
            url: "ShowBatcherfassung",
            loadingShow: true,
            success: function (result) {                
                //SearchResultsTryHide();
                if (_modelStateValid) {
                    ShowBatcherfassungSearchResult(result);              
                }
                LoadingHide();
            }
        });
    }


    function ShowBatcherfassungSearchResult(result) {
        SearchFormHide();
        $("#divGridBatcherfassung").html(result);

        // move our grid filter form into grid's toolbar:
        GridAllColumnFilterApplyToGrid("GridBatcherfassung");
        //alert('1');
        $("#divGridBatcherfassung").slideDown();
        //alert('2');
    }


    function ItemEdit(id) {

        $.ajax(
        {
            type: "POST",
            url: "EditBatcherfassung",
            data: { id: id },
            loadingShow: true,
            success: function (result) {
                ShowItemDetails(result);
                try { BreadcrumbsMoveNext('@Localize.ItemEdit'); } catch (e) { }
            },
            error: function (result) {
                alert(result.data);
            }
        });
    }

    function ItemNew(idToDuplicate) {
        $.ajax(
        {
            type: "POST",
            url: "NewBatcherfassung",
            data: { idToDuplicate: idToDuplicate },
            loadingShow: true,
            success: function (result) {
                ShowItemDetails(result);
                try { BreadcrumbsMoveNext('@Localize.ItemAdd'); } catch (e) { }
            }
        });
    }

    function ShowItemDetails(result, showCloseButton) {
        $("#divGridItemDetails").html(result);
        GridItemDetailsFormPreparePrivateAjax();
        $("#divGridBatcherfassung").slideUp(function () {
            $("#divGridItemDetails").show();
        });
        scrollToTop();
    }

    function CloseItemDetailsInner() {
        $("#divGridItemDetails").slideUp(function () {
            $("#divGridBatcherfassung").delay(200).show();
            window.scrollTo(0, 0);
        });
    }

    function CloseItemDetails() {
        CloseItemDetailsInner();
        try { BreadcrumbsMovePrev(); } catch (e) { }
        TryBatcherfassungGridRefresh();
    }

    function BatcherfassungAjaxFormComplete() {
        FormPrepareAjax();
        if (_modelIsValid) {
            var successMessage = '@Localize.SaveSuccessful.ToJavascriptString()';
            SpanAlertSuccess("spanAlertBatcherfassung", successMessage, 1800);
            CloseItemDetails();
        }       
    }

    var _modelIsValid = false;
    var _modelIsInsertMode = false;

    function GridItemDetailsFormPreparePrivateAjax() {
        FormPrepareAjax();

        LoadingHide();
        GridLoadingHide();

        $("button[type='submit']").click(function () {
            LoadingShow();
        });

        if (_modelIsValid)
            CloseItemDetails();
    }



    var _modelId = null;
    function TryLoadDataByModelId(textbox) {

    // wg. blur keine weitere validiereng
    //        if (_modelId == $(textbox).val())
    //            return;
    //        _modelId = $(textbox).val();

    //        if ($(textbox).val().length < 3)
    //            return;

        LoadDataByModelId();
    }

    function LoadDataByModelId() {

        var modellId = $("#ModellId").val();
        //alert(modellId);
        $.ajax(
            {
                type: "POST",
                url: "LoadDataByModelId",
                data: { modelId : modellId },
                loadingShow: true,
                success: function (result) {
                    $("#divBatcherfassungDetailsForm").html(result);
                }                        
            });

        return false;

    }

    function ShowGridUnitNumbers(batchId) {

        $.ajax(
        {
            type: "POST",
            url: "ShowGridUnitNumbers",
            data: { batchId: batchId },
            loadingShow: true,
            success: function (result) {
                ShowUnitNumbers(result);                
            }
        });
    }

    function ShowUnitNumbers(result) {
        //alert(result);
        $("#divGridUnitnumbers").html(result);
        GridAllColumnFilterApplyToGrid("GridUnitnumbers");
        $("#divGridBatcherfassung").slideUp();
        $("#divGridUnitnumbers").slideDown();
        $("#btnBackToResult").show();
        setTimeout('LoadingHide()', 1000);        
        FormPreparePrivateAjax();
    }

    function OnDataBound_GridUnitnumbers() {
        FilteredData_Grid_OnDataBound($(this));
        $('.tooltips').tooltip();
    }

    function OnColumnShowHide_GridUnitnumbers() {
        FilteredData_Grid_OnColumnShowHide($(this));
    }

    function OnColumnReorder_GridUnitnumbers() {
        FilteredData_Grid_OnColumnReorder($(this));
    }

    function UpdateSperrvermerk(unitnummer) {
        sperrvermerk = $("#" + unitnummer).val();
        //alert("UnitNr: " + unitnummer + sperrvermerk);

         $.ajax({
            type: "POST",
            url: "UpdateSperrvermerk",
            data: { unitnummer: unitnummer, sperrvermerk: sperrvermerk },
            loadingShow: false,
            success: function (result) {
                $("#savebutton").removeClass('hide');          
            }
        });

    }
    
    function GridUnitnumbers_OnSelectionChange(cb) {

        Grid_FormatMultiRowSelected(cb);

        $.ajax({
            type: "POST",
            url: "UnitnumberSelectionChanged",
            data: { unitnummer: cb.val(), isChecked: cb.is(':checked') },
            loadingShow: false,
            success: function (result) {
                $("#savebutton").removeClass('hide');
                if (cb.is(':checked')) {
                    $("#" + cb.val()).removeAttr('readonly');
                } else {
                    $("#" + cb.val()).attr('readonly', true);
                }
                //GridUnitnumbers_MultiSelectUpdate(result.allSelectionCount);                
            }
        });
    }

   
    function SaveUnitNumberState(batchId) {

        $.ajax(
        {
            type: "POST",
            url: "UnitnummerFreigebenSperren",
            loadingShow: false,
            success: function (result) {
                //ShowBatcherfassung();
                ShowGridUnitNumbers(batchId);
                FormPreparePrivateAjax();
            },
            error: function (result) {
            }
        });

        return false;
    }

    function CloseUnitNumbers() {
        $("#btnBackToResult").hide();
        $("#divGridUnitnumbers").slideUp(function () { $("#divGridBatcherfassung").delay(200).slideDown(); window.scrollTo(0, 0); });
        $("#divGridBatcherfassung").slideDown();
        $("#divGridUnitnumbers").html('');
    }

    function TryCalculateUnitNumbers() {

        var unitnumberFrom = $("#UnitnummerVon").val();
        var unitnumberUntil = $("#UnitnummerBis").val();
        var count = $("#Anzahl").val();

        if (unitnumberFrom == '' || unitnumberUntil == '' || count == '')
            return;

        $.ajax(
            {
                type: "POST",
                url: "CalculateUnitNumbers",
                data: { unitnumberFrom: unitnumberFrom, unitnumberUntil: unitnumberUntil, count: count },
                loadingShow: true,
                success: function (result) {
                    // $("#divBatcherfassungDetailsForm").html(result);
                    if (result.ValidationError != '') {
                        alert(result.ValidationError);
                        $("#ValidationError").html(result.ValidationError);
                        $("#divValidationError").remmoveClass('hide');
                    }
                    else {
                        $("#divValidationError").addClass('hide');
                        $("#Unitnummern").html(result.Unitnummern);
                    }
                }
            });
    }
  
    ///////////////  Excel Upload /////////////////////////////////////////////////////////////////////
    //////////////                /////////////////////////////////////////////////////////////////////
      
    var _formWizardForceHideSubmitButton = false;

  
    function FormWizardInitPrivate() {
        FormWizard.Init(function () {
            FormWizard.ActionsShow(false);
        });

        //        FormWizard.OnNext(function (step, maxSteps) {
        //            alert(_formWizardForceHideSubmitButton);
        //            if (step == 2 && _formWizardForceHideSubmitButton)
        //                FormWizard.ButtonSubmitShow(false);
        //            return true;
        //        });

        FormWizard.OnPrev(function (step, maxSteps) {
            if (step == 1)
                FormWizard.ActionsShow(false);
            return true;
        });

        FormWizard.OnSubmit(function () {
            SubmitUpload();
        });

        FormWizard.OnRestart(function () {
            //alert('Ok, let´s restart! :)');
            LocationReloadWithoutQueryString();
        });
    }


    function UploadStart(e) {

        //$("#FahrzeugvorAuswahlForm").submit();
        // clear only the UI of our Upload Control:
        //$(this).children(".t-upload-files").remove();

        // because we are uploading in async mode, our "e.files" collection always has exact 1 entry:
        var fileName = e.files[0].name;

        if (fileName.toLowerCase().indexOf('.xls') <= 0) {
            alert('Bitte nur XLS-Dateien hochladen!');
            return false;
        }

        LoadingShow();

        return true;
    }

    function UploadFinished(e) {

        // clear only the UI of our Upload Control:
        $(this).children(".t-upload-files").remove();

        if (!e.response.success) {
            alert(e.response.message);
            return;
        }

        ShowGrid(false);
    }

    function UploadError(e) {
        e.preventDefault();
        alert('Fehler: Es gab ein Problem beim verarbeiten Ihrer Datei!');
    }


    //function ShowGrid() { }

    function ShowGrid() {      
        $.ajax({
            type: "POST",
            url: "ExcelUploadShowData",
            data: { showErrorsOnly: false },
            loadingShow: true,
            success: function (result) {
                if (typeof (result.message) !== "undefined") {
                    alert(result.message);
                    return;
                }
                FormWizard.SetTabHtml(2, result);
                FormPreparePrivateAjax();
                FormWizard.ButtonNextInvoke();

                $("#divBatcherfassungDetailsForm").html(result);

//                if (_formWizardForceHideSubmitButton)
//                    FormWizard.ButtonSubmitShow(false);
            }
        });
    }
   

</script>

