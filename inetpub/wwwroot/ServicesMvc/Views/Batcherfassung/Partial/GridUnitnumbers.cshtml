@model CkgDomainLogic.FzgModelle.ViewModels.BatcherfassungViewModel 
@using CkgDomainLogic.FzgModelle.Models

@{
    var gridName = "GridUnitnumbers";
}

@(Html.XTelerik()
    .XGrid<FzgUnitnummer>()
    .Name(gridName)
    .XAjaxDataBinding("UnitnummerAjaxBinding", "Batcherfassung")
    .Columns(columns =>
        {
            columns.XBound(c => c.Unitnummer);
            columns.XBound(c => c.IstGesperrt)
                  .ClientTemplate("<input type='checkbox' name='checkedRecords' <# if (data.IsSelected) { #> checked <# } #> value='<#= data.Unitnummer #>' onchange='GridUnitnumbers_OnSelectionChange($(this))' />")
                  .Filterable(false).Sortable(false).Groupable(false).Width(20);
            
            columns.XBound(c => c.Sperrvermerk).Filterable(false).Sortable(false).Groupable(false)
                    .ClientTemplate(
                        "<input onblur='UpdateSperrvermerk(\"<#= data.Unitnummer #>\");' value='<#= data.Sperrvermerk #>' id='<#= data.Unitnummer #>' </input>"
                        + "&nbsp;"
                );         
                                          
            columns.XBound(c => c.ModellId);
            columns.XBound(c => c.Modellbezeichnung);
            columns.XBound(c => c.AuftragsnummerVon);
            columns.XBound(c => c.AuftragsnummerBis);
            columns.XBound(c => c.Anzahl);                        
            columns.XBound(c => c.Einsteuerung);
            columns.XBound(c => c.KennzeichenLeasingFahrzeug);
            columns.XBound(c => c.Fahrgestellnummer).Hidden(true);    
        })
    .XAutoColumnConfiguration()
    .ClientEvents(events => events.XAutoClientEvents(gridName))
    .XPageSize(10)
        .XSort(sortOrder => sortOrder.Add(c => c.Unitnummer).Ascending())
    .ToolBar(commands =>
         {
             commands.FilteredDataCommand("ExportUnitnummerFilteredExcel", "Batcherfassung");
             commands.FilteredDataCommand("ExportUnitnummerFilteredPDF", "Batcherfassung");
         })
)

<div class="form-horizontal">
    <div id="formActions" class="form-actions">                  
        <button type="button" id="backbutton" class="btn green" onclick="CloseUnitNumbers(); "> @Localize.Back<i class="m-icon-swapright m-icon-white"></i></button>                   
        <button type="button" id="savebutton" class="btn green hide" onclick="SaveUnitNumberState(@Model.SelectedItem.ID); "> @Localize.Send<i class="m-icon-swapright m-icon-white"></i></button>       
    </div>
</div>



