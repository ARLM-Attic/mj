@using CkgDomainLogic.Uebfuehrg.Models
@model Adresse 
@* ReSharper disable AccessToStaticMemberViaDerivedType *@

<div id="@Ajax.AutoFormWrapperDivID(Model.UiIndex)" class="margin-top-20">
    @using (Ajax.AutoForm(Model, "Uebfuehrg", Model.UiIndex))
    {
        <div class="form-actions">
            <a href="#" onclick="return AjaxFormAdressenShowGrid('Uebfuehrg', @Model.UiIndex)" class="btn white tooltips margin-right-10" data-original-title="Wählen Sie eine Adresse über Ihren Adressenpool aus" data-placement="top">Adressen auswählen <i class="icon-chevron-right"></i></a>
            <a href="#" onclick="return AjaxFormAdresseEmpty('AjaxForm' + '@Model.UiIndex', 'UebfuehrgAdresseGetAutoCompleteItems')" class="btn white tooltips margin-right-10" data-original-title="Leert das Adressformular (zur Eingabe einer neuen Adresse)" data-placement="top">Formular leeren <i class="icon-remove"></i></a>
        </div>

        @Html.HiddenFor(m => m.UiIndex)

        @Html.HiddenFor(m => m.KundenNr)
        @Html.HiddenFor(m => m.Kennung)
        @Html.HiddenFor(m => m.Typ)
        @Html.HiddenFor(m => m.TmpSelectionKey)
        @Html.HiddenFor(m => m.NoSaveButUiRefreshOnly)
        @Html.HiddenFor(m => m.TransportTypAvailable)

        @Html.FormValidationSummary()

        if (Model.TransportTypAvailable)
        {
            @Html.FormDropDownListFor(m => m.TransportTyp, Model.ValideTransportTypen.ToSelectList(), new { @class = "m-wrap large" })
        }
        else
        {
            @Html.HiddenFor(m => m.TransportTyp)
        }

        @Html.FormTextBoxFor(m => m.Name1, new { @class = "m-wrap large", col = "left" })
        @Html.FormTextBoxFor(m => m.Name2, new { @class = "m-wrap large", col = "right" })
        
        @Html.FormTextBoxFor(m => m.Strasse, new { @class = "m-wrap large", col = "left" })
        @Html.FormTextBoxFor(m => m.PLZ, new { @class = "m-wrap xsmall", col = "right" })
        
        @Html.FormTextBoxFor(m => m.Ort, new { @class = "m-wrap large", col = "left" })
        @Html.FormDropDownListFor(m => m.Land, Adresse.Laender.ToSelectList(), new { @class = "m-wrap large", col = "right" }) 

        @Html.FormTextBoxFor(m => m.Ansprechpartner, new { @class = "m-wrap large", col = "left" })
        @Html.FormTextBoxFor(m => m.Telefon, new { @class = "m-wrap large", col = "right" })

        @Html.FormTextBoxFor(m => m.Email, new { @class = "m-wrap large" })

        @Html.FormRequiredFieldsSummary()
        
        
        <script type="text/javascript">

            _modelIsValid = @ViewContext.ViewData.ModelState.IsValid.ToString().ToLower();
            console.log(_modelIsValid);
            console.log(@(Model.IsValid.ToString().ToLower()));
            if (_modelIsValid && false == @(Model.IsValid.ToString().ToLower()))
                _modelIsValid = false;
            
            AjaxFormAdressePrepareAutoComplete($("#Name1"), "UebfuehrgAdresseGetAutoCompleteItems");
            AjaxFormAdressePrepareAutoCompleteReset(@Model.UiIndex);        
        </script>
    }
</div>
