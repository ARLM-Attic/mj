@model CkgDomainLogic.Uebfuehrg.ViewModels.UebfuehrgViewModel

<style type="text/css">

    .dienstleistungen-wrapper-uebfuehrg {
        margin-left: 40px;
        margin-top: 10px;
    }
    .dienstleistungen-wrapper-uebfuehrg .bemerkungen {
        margin-top: 30px;
        margin-left: 260px;
    }
    .dienstleistungen-wrapper-uebfuehrg .bemerkungen textarea {
        width: 345px!important;
    }
    .ms-container .ms-list {
        height: 200px!important;
    }
    
    .receipt-wrapper-uebfuehrg {
        margin: 40px;
    }
    .wizard-header {
        margin: 25px;
    }
    
    .SummaryItem {
        min-height: 200px!important;
    }
    
    .form-wizard .progress {
        margin-bottom: 0!important;
    }
    .step .formWizardStepDesc 
    {
        @if (Model.AnzahlFahrzeugeGewuenscht == 1) { <text>font-size:0.90em!important;</text> }
        @if (Model.AnzahlFahrzeugeGewuenscht == 2) { <text>font-size:0.80em!important;</text> }
    }
    .step .formWizardStepDescWrapper {
        display: block;
    }

    .ms-elem-selectable span.required {
        background-color: yellow;
        font-weight: bold;
    }
    
</style>

<script type="text/javascript">

    var _modelIsValid = false;
    var _comingFromSummary = false;

    function FormPreparePrivate() {

        try { FormWizardInitPrivate(); } catch (e) { }

    };

    function FormPreparePrivateAjax(id) {
        FormPrepareAjax(id);
        $('.tooltips').tooltip();
    }

    function FormWizardInitPrivate() {
        FormWizard.Init(function () {
            
        });

        FormWizard.OnNext(function (step, maxSteps) {

            var ajaxFormID = "#AjaxForm" + (step - 2);
            $(ajaxFormID).submit();
            return false;

        });

        FormWizard.OnPrev(function (step, maxSteps) {
            return true;
        });

        FormWizard.OnSubmit(function () {

            AjaxRequestNextStep();

            return true;
        });

        FormWizard.OnRestart(function () {
            location.reload();
        });

        if ($(".alert-error").length > 0)
            FormWizard.ActionsShow(false);
    }

    function AjaxFormComplete(id) {
        
        //console.log(id);
        FormPrepareAjax(id);

        if (_modelIsValid) {
            AjaxRequestNextStep();
        } else {
            if (_comingFromSummary)
                FormWizard.ButtonPrevShow(false);
        }

        try {
            var detailWindow = $("#Adressen").data("tWindow");
            detailWindow.center().close();
        } catch(e) {
        }
    }

    function AjaxRequestNextStep() {
        $.ajax({
            type: "POST",
            url: "NextStepView",
            data: {},
            loadingShow: true,
            success: function (result) {
                if (typeof (result.message) !== "undefined") {
                    alert(result.message);
                    return;
                }

                if (_comingFromSummary) {
                    _comingFromSummary = false;
                    $("#formWizard a.button-next span").text("Weiter");
                    FormWizard.SetSummaryTabHtmlAndMoveToSummary(result);
                    FormWizard.tabClickDisabled = false;
                } else
                    FormWizard.SetNextTabHtmlAndMoveNext(result);
            }
        });
    }


    //    
    // <Adressen common>
    //

    function AjaxFormAdressePrepareAutoCompleteReset(uiIndex) {
        var form = $("#AjaxForm" + uiIndex);
        form.find("input:text").each(function () {
            if ($(this).attr('name') != 'Name1')
                $(this).bind('keyup', function() {
                    try { $("#AjaxForm" + uiIndex + " input[name='Name1']").autocomplete("disable");} 
                    catch (e) {}
                });
        });
    }

    function AjaxFormAdressePrepareAutoComplete(tb, url) {

        var form = tb.closest("form");
        var textboxValues = '';
        form.find("input:text").each(function () {
            if ($(this).attr('name') != 'Name1')
                textboxValues = $(this).val();
        });
        if (textboxValues != '')
            return;

        $.ajax({
            type: "POST",
            url: url,
            data: {},
            loadingShow: false,
            success: function (result) {
                AjaxFormAdresseInitAutoComplete(tb, result.items);
            }
        });
    }

    function AjaxFormAdresseInitAutoComplete(tb, items) {
        tb.autocomplete({
            minLength: 0,
            source: items,
            select: function (event, ui) {
                //alert(ui.item.value);
                var form = tb.closest("form");
                $("#" + form.attr("id") + " input[name='TmpSelectionKey']").val(ui.item.value);
                form.submit();
            }
        });
        tb.autocomplete("enable");
    }

    function AjaxFormAdresseEmpty(formID, url) {
        var form = "#AjaxForm" + formID;
        $(form).find(":input").each(function () {
            switch (this.type) {
                case 'password':
                case 'select-multiple':
                case 'text':
                case 'textarea':
                    $(this).val('');
                    break;
                case 'select-one':
                    $(this).val('DE');
                    break;
                case 'checkbox':
                case 'radio':
                    this.checked = false;
            }
        });

        AjaxFormAdressePrepareAutoComplete($("" + form + " input[name='Name1']"), url);
        
        try { RouteInfoShowHideButtons(formID, false, ''); }
        catch (e) { }
        
        return false;
    }

    function AjaxFormAdressenShowGrid(addressType, uiIndex) {

        $.ajax(
            {
                type: "POST",
                url: addressType + "AdressenShowGrid",
                data: { uiIndex: uiIndex },
                loadingShow: true,
                success: function (result) {
                    var detailWindow = $("#Adressen").data("tWindow");
                    $("#InnerAdressen").html(result);
                    GridAllColumnFilterApplyToGrid(addressType + "AdressenAuswahlGrid");
                    detailWindow.center().open();
                }
            });

        return false;
    }
    
    function SummaryStepDataEdit(uiIndex) {

        $.ajax(
            {
                type: "POST",
                url: "SummaryStepDataEdit",
                data: { uiIndex: uiIndex },
                loadingShow: false,
                success: function () {
                    _comingFromSummary = true;

                    $("#formWizardStep_" + (uiIndex + 1)).find("a").trigger("click");

                    $("#formWizard a.button-next span").text("Zurück zur Übersicht");
                    FormWizard.ButtonPrevShow(false);
                    FormWizard.tabClickDisabled = true;
                }
            });

        return false;
    }

    function AjaxFormAdresseClose() {
        $("#AdresseBearbeiten").data("tWindow").close();
    }

    function GridAdresseOnSelect(id, formID, addressType) {

        var form = $("#" + formID);

        if (typeof (form.attr('id')) != 'undefined') {
            AjaxFormAdresseClose();
            $("#Adressen").data("tWindow").close();
            $("#" + formID + " input[name='TmpSelectionKey']").val(id);
            form.submit();
        }
    }

    //    
    // </Adressen common>
    //


    //    
    // <UebfuehrgAdressen>
    //

    function OnDataBound_UebfuehrgAdressenAuswahlGrid() {
        FilteredData_Grid_OnDataBound($(this));
        $('.tooltips').tooltip();
    }

    function OnColumnShowHide_UebfuehrgAdressenAuswahlGrid() {
        FilteredData_Grid_OnColumnShowHide($(this));
    }

    function OnColumnReorder_UebfuehrgAdressenAuswahlGrid() {
        FilteredData_Grid_OnColumnReorder($(this));
    }

    function OnComplete_UebfuehrgAdressenAuswahlGrid() {
        var grid = $(this);
        setTimeout(function () {
            var gridHeight = parseInt(grid.css('height').replace(/px/, ""));
            var newHeight = (gridHeight + 80) + 'px';
            grid.closest('.t-window-content').animate({ height: newHeight }, 200); // .css('height', newHeight);
        }, 300);
    }

    //    
    // </UebfuehrgAdressen>
    //

    function SaveAllStart() {
        LoadingShow();
        $.ajax(
            {
                type: "POST",
                url: "SaveAllStart",
                data: {},
                loadingShow: true,
                success: function (result) {
                    setTimeout('LoadingHide()', 500);
                    $("#receipt-wait").hide();
                    if (result.receiptErrorMessages == "") {
                        $("#receipt-success").show();
                        FormWizard.InsertActionButton("#ReceiptFormActions");
                        $('.tooltips').tooltip();
                    } else {
                        $("#receipt-error").html("Leider konnten wir Ihren Auftrag nicht verarbeiten.<br /><br />" + result.receiptErrorMessages);
                        $("#receipt-error").show();
                    }
                }
            });
    }
    
</script>


<!-- <Bing utilities> -->

<style type="text/css">
   .bing-map 
   {
       float: left;
       position: relative;
       width: 900px;
       height: 670px;
       margin-right: 30px;
    }
    
    .bing-header {
        font-size: 1.5em;
        margin: 5px;
    }
    .header-distance {
        background-color: yellow;
        font-weight: bold;
        margin-right: 10px;
    }
    .header-address {
        font-weight: normal;
        font-size: 0.8em;
    }
</style>

<script charset="UTF-8" type="text/javascript" src="https://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0&mkt=de-de&s=1">
</script>

<script type="text/javascript">

    var _bingKey = "";
    var _bingLocationMap = null;
    var _bingRouteMap = null;
    var _bingCurrentUiIndex = 0;
    var _bingCurrentLocation = new Array(20), _bingCurrentRouteStartAddress = new Array(20), _bingCurrentRouteEndAddress = new Array(20);
    var _bingMakeLocationRequestCount = 0;
    var _bingMakeRouteRequestCount = 0;

    DocumentReadyBind(function () {
        BingInit();
    });

    function BingInit() {
        _bingKey = "AjhclM9Z2vaz98bcKZnOd5dkHLf87cX4qKkJJBi7G6jqvy1wuoNVubNKGBijbzzQ";
        _bingLocationMap = new Microsoft.Maps.Map(document.getElementById("bingLocationDiv"), {
            credentials: _bingKey,
            mapTypeId: Microsoft.Maps.MapTypeId.road
        });
        _bingRouteMap = new Microsoft.Maps.Map(document.getElementById("bingRouteDiv"), {
            credentials: _bingKey,
            mapTypeId: Microsoft.Maps.MapTypeId.road
        });
    }


    function CallRestService(request) {
        var script = document.createElement("script");
        script.setAttribute("type", "text/javascript");
        script.setAttribute("src", request);
        document.body.appendChild(script);
    }

    function MakeGeocodeRequest() {
        var geocodeRequest = "https://dev.virtualearth.net/REST/v1/Locations?query=" + encodeURI(_bingCurrentLocation[_bingCurrentUiIndex]) + "&output=json&jsonp=GeocodeCallback&key=" + _bingKey;

        //$("#bingLocationDiv").show();
        CallRestService(geocodeRequest);
    }

    function GeocodeCallback(result) {
        //alert("Found location: " + result.resourceSets[0].resources[0].name);

        if (result &&
            result.resourceSets &&
            result.resourceSets.length > 0 &&
            result.resourceSets[0].resources &&
            result.resourceSets[0].resources.length > 0) {
            // Set the map view using the returned bounding box
            var bbox = result.resourceSets[0].resources[0].bbox;
            var viewBoundaries = Microsoft.Maps.LocationRect.fromLocations(new Microsoft.Maps.Location(bbox[0], bbox[1]), new Microsoft.Maps.Location(bbox[2], bbox[3]));
            //console.log(viewBoundaries);
            _bingLocationMap.setView({ bounds: viewBoundaries });
            //setTimeout(function() { _bingLocationMap.setView({ bounds: viewBoundaries }); }, 1000);

            // Add a pushpin at the found location
            var location = new Microsoft.Maps.Location(result.resourceSets[0].resources[0].point.coordinates[0], result.resourceSets[0].resources[0].point.coordinates[1]);
            var pushpin = new Microsoft.Maps.Pushpin(location);
            _bingLocationMap.entities.push(pushpin);

            $("#bingLocationHeaderDiv span.header-address").html("Adresse: " + _bingCurrentLocation[_bingCurrentUiIndex]);

            _bingMakeLocationRequestCount++;
            if (_bingMakeLocationRequestCount == 1)
                setTimeout(function () {
                    _bingLocationMap.getCredentials(MakeGeocodeRequest);
                    _bingMakeLocationRequestCount++;
                }, 1500);
        }
    }


    function MakeRouteRequest() {
        var routeRequest = "https://dev.virtualearth.net/REST/v1/Routes?wp.0=" + encodeURI(_bingCurrentRouteStartAddress[_bingCurrentUiIndex]) + "&wp.1=" + encodeURI(_bingCurrentRouteEndAddress[_bingCurrentUiIndex]) + "&routePathOutput=Points&output=json&jsonp=RouteCallback&key=" + _bingKey;

        //$("#bingRouteDiv").show();
        CallRestService(routeRequest);
    }

    function RouteCallback(result) {

        if (result &&
            result.resourceSets &&
            result.resourceSets.length > 0 &&
            result.resourceSets[0].resources &&
            result.resourceSets[0].resources.length > 0) {

            // Set the map view
            var bbox = result.resourceSets[0].resources[0].bbox;
            var viewBoundaries = Microsoft.Maps.LocationRect.fromLocations(new Microsoft.Maps.Location(bbox[0], bbox[1]), new Microsoft.Maps.Location(bbox[2], bbox[3]));
            _bingRouteMap.setView({ bounds: viewBoundaries });


            // Draw the route
            var routeline = result.resourceSets[0].resources[0].routePath.line;
            var routepoints = new Array();

            for (var i = 0; i < routeline.coordinates.length; i++) {
                routepoints[i] = new Microsoft.Maps.Location(routeline.coordinates[i][0], routeline.coordinates[i][1]);
            }

            // Draw the route on the map
            var routeshape = new Microsoft.Maps.Polyline(routepoints, { strokeColor: new Microsoft.Maps.Color(200, 200, 0, 0) });
            _bingRouteMap.entities.push(routeshape);

            var distance = result.resourceSets[0].resources[0].travelDistance;
            //console.log(distance);
            $("#bingRouteHeaderDiv span.header-distance").html(distance.toFixed(2).replace(/\./, ",") + " Km");
            $("#bingRouteHeaderDiv span.header-address").html("Ihre Route von " + _bingCurrentRouteStartAddress[_bingCurrentUiIndex] + " => " + _bingCurrentRouteEndAddress[_bingCurrentUiIndex]);

            _bingMakeRouteRequestCount++;
            if (_bingMakeRouteRequestCount == 1)
                setTimeout(function () {
                    _bingLocationMap.getCredentials(MakeRouteRequest);
                    _bingMakeRouteRequestCount++;
                }, 1500);
        }
    }
    
</script>

<!-- </Bing utilities> -->


<!-- <General geo location + route utilities> -->

<script type="text/javascript">

    var _routeTextBoxArray = null;

    function RouteInfoSurveyAddressTextBoxes(id, showRouteInfo, startAddressAsRouteInfo) {

        _routeTextBoxArray = [];
        $("#AjaxForm" + id + " input[type=text]").each(function (index, elem) {
            var tb = $(elem);
            if ("name1,strasse,plz,ort".indexOf(tb.attr("name").toLowerCase()) >= 0) {
                _routeTextBoxArray.push(elem);
                tb.bind("keyup", function () {
                    RouteInfoShowHideButtons(id, showRouteInfo, startAddressAsRouteInfo);
                });
                //console.log(tb);
            }
        });

        RouteInfoShowHideButtons(id, showRouteInfo, startAddressAsRouteInfo);
    }

    function GetAddressString(id) {
        return GetTextBox(id, "Strasse").val() + "," +
                GetTextBox(id, "PLZ").val() + " " +
                GetTextBox(id, "Ort").val();
    }

    function GetTextBox(id, tbName) {
        return $("#AjaxForm" + id + " input[name='" + tbName + "']");
    }

    function RouteInfoShowHideButtons(id, showRouteInfo, startAddressAsRouteInfo) {

        var addressIsEmpty = false;
        $.each(_routeTextBoxArray, function (index, elem) {
            if ($(elem).val() == '')
                addressIsEmpty = true;
        });

        var routeLinks = $("#AjaxForm" + id + " .route-info");
        if (addressIsEmpty) {
            routeLinks.hide();
        } else {

            // location, public map url:
            var href = "https://bing.com/maps/default.aspx?where1=" + GetAddressString(id);
            var routeLinkLocation = $("#AjaxForm" + id + " .route-info.location");
            routeLinkLocation.attr("href", href);
            routeLinkLocation.show();

            // location, ajax inline map:
            BingInit();

            _bingCurrentLocation[id] = GetAddressString(id);

            if (showRouteInfo) {
                // route, public map url:
                var routeLinkMap = $("#AjaxForm" + id + " .route-info.map");
                href = "https://bing.com/maps/default.aspx?rtp=adr." + startAddressAsRouteInfo + "~adr." + GetAddressString(id) + "&mode=D&rtop=0";
                routeLinkMap.attr("href", href);
                routeLinkMap.show();

                // route, ajax inline map:
                _bingCurrentRouteStartAddress[id] = startAddressAsRouteInfo;
                _bingCurrentRouteEndAddress[id] = GetAddressString(id);
            }
        }
    }

    function BingLocationMapShow(id) {
        BingInit();
        _bingCurrentUiIndex = id;
        var detailWindow = $("#BingKarte").data("tWindow");
        detailWindow.center().open();
        _bingMakeLocationRequestCount = 0;
        _bingLocationMap.getCredentials(MakeGeocodeRequest);
        return false;
    }

    function BingRouteMapShow(id) {
        BingInit();
        _bingCurrentUiIndex = id;
        var detailWindow = $("#BingRoute").data("tWindow");
        detailWindow.center().open();
        _bingMakeRouteRequestCount = 0;
        _bingRouteMap.getCredentials(MakeRouteRequest);
        return false;
    }

</script>

<!-- </General geo location + route utilities> -->



@(Html.Telerik().Window()
    .Name("Adressen")
    .Visible(false)
    .Title("Auswahl Adressen")
    .Modal(true)
    .Draggable(true)
    .Scrollable(false)
    .Width(900)
    .Height(700)
    .Content(@<text><div id="InnerAdressen"></div></text>))

@(Html.Telerik().Window()
    .Name("AdresseBearbeiten")
    .Visible(false)
    .Title("Adresse bearbeiten")
    .Modal(true)
    .Draggable(true)
    .Scrollable(false)
    .Width(500)
    .Height(550)
    .Content(@<text><div id="InnerAdresseBearbeiten"></div></text>))
    
    
@(Html.Telerik().Window()
    .Name("BingKarte")
    .Visible(false)
    .Title("Kartenansicht")
    .Modal(true)
    .Draggable(true)
    .Scrollable(false)
    .Width(900)
    .Height(700)
    .Content(@<text><div id="bingLocationHeaderDiv" class="bing-header"><span class="header-address"></span></div><div id="bingLocationDiv" class="bing-map"></div></text>))
    
@(Html.Telerik().Window()
    .Name("BingRoute")
    .Visible(false)
    .Title("Route für Ihre Fahrt")
    .Modal(true)
    .Draggable(true)
    .Scrollable(false)
    .Width(900)
    .Height(700)
    .Content(@<text><div id="bingRouteHeaderDiv" class="bing-header"><span class="header-distance"></span><span class="header-address"></span></div><div id="bingRouteDiv" class="bing-map"></div></text>))
