@model CkgDomainLogic.FzgModelle.ViewModels.StatusEinsteuerungViewModel 
@using CkgDomainLogic.FzgModelle.Models


@{
    var gridName = "GridStatus";
    var gridGroupFooterTemplate = "<strong>∑ <#= $.telerik.formatString('{0}', Sum) #></strong>";    
}


@(Html.XTelerik()
    .XGrid<StatusEinsteuerung>()
    .Name(gridName)
            .XAjaxDataBinding("StatusEinsteuerungAjaxBinding", "StatusEinsteuerung")
    .Columns(columns =>
        {
            columns.XBound(c => c.PDINummer);
            columns.XBound(c => c.PDIBezeichnung); 
            columns.XBound(c => c.Sipp);
            columns.XBound(c => c.Fahrzeuggruppe);
            columns.XBound(c => c.Hersteller);
            columns.XBound(c => c.ModellCode);
            columns.XBound(c => c.Modellbezeichnung);                      
            columns.XBound(c => c.Bestand).Format("{0}")
             .Aggregate(aggreages => aggreages.Sum())
             .ClientGroupFooterTemplate(gridGroupFooterTemplate)
             .ClientFooterTemplate(gridGroupFooterTemplate).HtmlAttributes(new { @class = "td-right" }).FooterHtmlAttributes(new { @class = "td-right" });

            columns.XBound(c => c.Ausgerüstet).Format("{0}")
              .Aggregate(aggreages => aggreages.Sum())
              .ClientGroupFooterTemplate(gridGroupFooterTemplate)
              .ClientFooterTemplate(gridGroupFooterTemplate).HtmlAttributes(new { @class = "td-right" }).FooterHtmlAttributes(new { @class = "td-right" });

            columns.XBound(c => c.MitBrief).Format("{0}")
              .Aggregate(aggreages => aggreages.Sum())
              .ClientGroupFooterTemplate(gridGroupFooterTemplate)
              .ClientFooterTemplate(gridGroupFooterTemplate).HtmlAttributes(new { @class = "td-right" }).FooterHtmlAttributes(new { @class = "td-right" });

            columns.XBound(c => c.Zulassungsbereit).Format("{0}")
              .Aggregate(aggreages => aggreages.Sum())
              .ClientGroupFooterTemplate(gridGroupFooterTemplate)
              .ClientFooterTemplate(gridGroupFooterTemplate).HtmlAttributes(new { @class = "td-right" }).FooterHtmlAttributes(new { @class = "td-right" });

            columns.XBound(c => c.OhneUnitnummer).Format("{0}")
              .Aggregate(aggreages => aggreages.Sum())
              .ClientGroupFooterTemplate(gridGroupFooterTemplate)
              .ClientFooterTemplate(gridGroupFooterTemplate).HtmlAttributes(new { @class = "td-right" }).FooterHtmlAttributes(new { @class = "td-right" });

            columns.XBound(c => c.Gesperrt).Format("{0}")
              .Aggregate(aggreages => aggreages.Sum())
              .ClientGroupFooterTemplate(gridGroupFooterTemplate)
              .ClientFooterTemplate(gridGroupFooterTemplate).HtmlAttributes(new { @class = "td-right" }).FooterHtmlAttributes(new { @class = "td-right" });
            
            
            //columns.XBound(c => c.Gesperrt); 
        })
    .XAutoColumnConfiguration()
    .ClientEvents(events => events.XAutoClientEvents(gridName))
    .XPageSize(10)
    .XSort(sortOrder => sortOrder.Add(c => c.PDINummer).Ascending())
        .XToolBar("StatusEinsteuerung")
             .ToolBar(commands =>
             {
                 commands.FilteredDataCommand("ExportStatusEinsteuerungFilteredExcel", "StatusEinsteuerung");
                 commands.FilteredDataCommand("ExportStatusEinsteuerungFilteredPDF", "StatusEinsteuerung");
             })
             .Groupable(g => g.Groups(gr => gr.Add(gp => gp.PDINummer)))
             .Groupable(g => g.Groups(gr => gr.Add(gp => gp.Fahrzeuggruppe)))
            
)

