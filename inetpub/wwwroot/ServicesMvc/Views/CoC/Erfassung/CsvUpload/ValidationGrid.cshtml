@using CkgDomainLogic.CoC.Models
@model CkgDomainLogic.CoC.ViewModels.CocErfassungViewModel 

<h5>
    <span>Ihre Datei <span class="bold">@Model.CsvUploadFileName</span>, bitte prüfen Sie jetzt noch den Inhalt:</span>
</h5>

<script type="text/javascript"> _formWizardForceHideSubmitButton = false; </script>
@if (Model.UploadItemsErrorsOccurred)
{
    <script type="text/javascript"> _formWizardForceHideSubmitButton = true; </script>
    <div class="alert alert-error">
        <label class="checkbox">
            <span class="label label-important"><i class="icon-bell"></i> @Html.DisplayNameFor(m => m.UploadItemsErrorsOccurred)</span>
            <span class="margin-left-10"></span>
            @Html.CheckBoxFor(m => m.UploadItemsShowErrorsOnly, new {onchange = "UploadItemsShowErrorsOnlyChanged($(this));"}) 
            @Html.DisplayNameFor(m => m.UploadItemsShowErrorsOnly)
            <i class=""></i>
        </label>
    </div>
}

@(Html.Telerik()
    .Grid<CsvUploadEntityDpmCoc>()
    .Name("GridCsvUploadEntities")
        .BindTo(Model.UploadItemsFiltered)
        .Columns(columns =>
            {
                columns.Bound(c => c.OrderID).Width(130);
                columns.Bound(c => c.VIN).Width(160);
                columns.Bound(c => c.DeliveryDate).Width(100);
                columns.Bound(c => c.Country).Width(50);
                columns.Bound(c => c.CodeManufacturer).Width(100);
                columns.Bound(c => c.CodeTypeVersion).Width(140);
                columns.Bound(c => c.Color).Width(80);
            })
        .Scrollable(scroll => scroll.Enabled(true).Height(200)).TableHtmlAttributes(new { @class = "table-no-paging" })
        .CellAction(cell =>
            {
                if (cell.DataItem.MemberHasValidationError(cell.Column.Member))
                    cell.HtmlAttributes["class"] = "grid-cellError";
            })
            .RowAction(row =>
            {
                if (!row.DataItem.MemberHasValidationError())
                    row.HtmlAttributes["class"] = ((row.Index % 2 == 0) ? "grid-rowOk" : "grid-rowOkAlt");
                else
                    row.HtmlAttributes["class"] = ((row.Index % 2 == 0) ? "grid-rowError" : "grid-rowErrorAlt");
            })
)

<div class="margin-top-10"></div>
