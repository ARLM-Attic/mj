@model CkgDomainLogic.Charts.Models.ChartDataSelector 

<script type="text/javascript">

    var colorScale = ['rgb(247,252,245)', 'rgb(229,245,224)', 'rgb(199,233,192)', 'rgb(161,217,155)', 'rgb(116,196,118)', 'rgb(65,171,93)', 'rgb(35,139,69)', 'rgb(0,109,44)', 'rgb(0,68,27)'];
    var colorThresholds = [10, 20, 50, 100, 200, 500, 1000, 5000, 9999999];

    chartManager.AddChart(
        new Chart(
            '@Model.ChartID',
            '@Model.ChartGroup',
            {
                preventShowDetailsData: true
            },
            function (chart) {  // FormPreparePrivate

                KgsMapKmFilterFormInit(chart);
            },
            function (chart) {  // FormPreparePrivateAjax

                KgsMapKmFilterFormInit(chart);
            },
            null,  // getTooltipHtml
            function (chart, chartResults) {  // ShowChartResults

                //                var groupChartItems = chartResults.GroupChartItems;
                //                var groupChartJahrItems = chartResults.GroupChartJahrItems;
                //                var groupChartKey1Items = chartResults.GroupChartKey1Items;

                var additionalItemLists = chartResults.AdditionalChartItemLists;
                var groupOverKgs;
                if (additionalItemLists.length < 1)
                    return;

                groupOverKgs = additionalItemLists[0];

                //                var countMax = -1;
                //                for (var i = 0; i < groupOverKgs.length; i++) {
                //                    if (parseInt(groupOverKgs[i].IWert1, 10) > countMax)
                //                        countMax = parseInt(groupOverKgs[i].IWert1, 10);
                //                }

                var chartPlaceHolder = chart.GetPlaceHolder();

                var svgID = 'svg_' + chart.GetPlaceHolderID();
                var svg = '<svg id="' + svgID + '" version="1.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 600 815" preserveAspectRatio="xMidYMid meet" />';
                chartPlaceHolder.html(svg);

                var svgMousePosX = -1, svgMousePosY = -1;

                var s = Snap("#" + svgID);
                Snap.load("/ServicesMvc/Images/maps/deutschland.svg", function (f) {
                    var kreisHovered = $("#kreis-hovered");
                    var g = f.select("g");
                    var paths = g.selectAll("path");

                    var kgsPrevID = null;

                    paths.forEach(function (elem, i) {
                        var kreisName = $(elem.node).attr("data-id");
                        var kgsID = $(elem.node).attr("data-kgs");

                        var thisKgs = $.grep(groupOverKgs, function (item) { return item.Key1 == kgsID; });
                        var countThisKgs = (thisKgs.length == 0 ? 0 : parseInt(thisKgs[0].IWert1, 10));

                        var color;
                        if (countThisKgs == 0) {
                            color = "#EEEEEE";
                            $(elem.node).attr("stroke", "#DDDDDD");
                            $(elem.node).attr("stroke-width", 1);
                            $(elem.node).attr("cursor", "default");
                        } else {
                            var colorIndex = 0;
                            for (var c = colorThresholds.length - 1; c >= 0; c--)
                                if (countThisKgs < colorThresholds[c])
                                    colorIndex = c;

                            color = colorScale[colorIndex];
                            $(elem.node).attr("stroke", "#999999");
                            $(elem.node).attr("stroke-width", 1);
                        }
                        elem.attr("fill", color);

                        elem.hover(
                            function () {
                                // hover opacity
                                elem.attr("fill-opacity", "0.5");
                                //kreisHovered.html(kreisName);

                                if (kgsPrevID != kgsID) {
                                    kgsPrevID = kgsID;

                                    var tooltipHtml = kreisName + ": <strong>" + countThisKgs.formatNumber(0) + " Fahrzeuge</strong>";

                                    $("#tooltip").remove();
                                    ChartShowTooltip(svgMousePosX, svgMousePosY, tooltipHtml);
                                }

                            },
                            function () {
                                // unhover opacity
                                elem.attr("fill-opacity", "");
                                //kreisHovered.html("");

                                $("#tooltip").remove();
                                kgsPrevID = null;
                            }
                        );

                        elem.click(function (e) {
                            if (countThisKgs == 0) {
                                $(elem).addClass("cursor-default");
                                return;
                            }
                            $(elem).removeClass("cursor-default");
                            RequestShowChartDetailsData(chart.chartID, kgsPrevID);
                        });
                    });

                    s.append(g);

                    chartPlaceHolder.mousemove(function (e) {
                        svgMousePosX = e.pageX; // + this.offsetLeft;  // offset not needed beacuse chartPlaceHolder position css style is "relative" 
                        svgMousePosY = e.pageY; // + this.offsetTop;
                    });

                    // Chart Header bzw. Untertitel
                    chartPlaceHolder.append("<div>test</div>");
                });
            }
        )
    );

    function KgsMapKmFilterFormInit(chart) {

        var checkBoxes = chart.GetFilterForm().find(".chart-filter-key1-items input[type=checkbox]");

        CheckBoxesEnforceSingleSelection(checkBoxes, checkBoxes[1]);
    }

</script>
