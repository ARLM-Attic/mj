@{
    Layout = "~/Views/Shared/_LayoutTest.cshtml";
}

<div class="container">
    <h1>jQuery File Upload Demo</h1>

    <br>
    <!-- The fileinput-button span is used to style the file input field as button -->
    <span class="btn btn-success fileinput-button">
        <span>Add files...</span>
        <!-- The file input field used as target for the file upload widget -->
        <input id="fileupload" type="file" name="files" multiple>
    </span>
    <button id="upload-all" class="btn btn-primary">Upload all!</button>
    <br>
    <br>
    <!-- The global progress bar -->
    <div id="progress" class="progress">
        <div class="progress-bar progress-bar-success"></div>
    </div>
    <!-- The container for the uploaded files -->
    <div id="files" class="files"></div>
    <br>
</div>

<script type="text/javascript">
    /*jslint unparam: true, regexp: true */
    /*global window, $ */
    $(function () {
        'use strict';
        // Change this to the location of your server-side upload handler:
        var url = 'UploadImage',

        uploadButton = $('<button/>')
            .addClass('btn btn-primary upload-button')
            .prop('disabled', true)
            .text('Processing...')
            .on('click', function () {
                var $this = $(this), data = $this.data();

                $this.parent().find(".delete-button").remove();

                $this
                    .off('click')
                    .text('Abort')
                    .on('click', function () {
                        $this.remove();
                        data.abort();
                    });
                data.submit().always(function () {
                    $this.remove();
                });
            }),

        deleteButton = $('<button/>')
            .addClass('btn btn-warning delete-button')
            .text('Delete...')
            .on('click', function () {
                var $this = $(this), data = $this.data();

                var nodeToRemove = $this.closest("div");
                nodeToRemove.remove();
            });

        var uploadAllSingleButtons = null;
        var uploadAllSingleButtonIndex = 0;

        function uploadAllSingles() {
            if (uploadAllSingleButtons == null)
                return;

            if (uploadAllSingleButtonIndex >= uploadAllSingleButtons.length) {
                uploadAllSingleButtons = null;
                uploadAllSingleButtonIndex = 0;
                return;
            }

            $(uploadAllSingleButtons[uploadAllSingleButtonIndex]).trigger("click");
        }

        $("#upload-all").click(function () {
            uploadAllSingleButtons = $(".upload-single");
            uploadAllSingleButtonIndex = 0;
            uploadAllSingles();
        });

        $('#fileupload').fileupload({
            url: url,
            dataType: 'json',
            autoUpload: false,
            acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
            maxFileSize: 15000000, // 15 MB
            // Enable image resizing, except for Android and Opera,
            // which actually support image resizing, but fail to
            // send Blob objects via XHR requests:
            //            disableImageResize: /Android(?!.*Chrome)|Opera/
            //            .test(window.navigator.userAgent),
            disableImageResize: false,
            previewMaxWidth: 150,
            previewMaxHeight: 100,
            imageMaxWidth: 800,
            imageMaxHeight: 600,
            previewCrop: true
        }).on('fileuploadadd', function (e, data) {
            data.context = $('<div/>').appendTo('#files');
            $.each(data.files, function (index, file) {
                var node = $('<p/>')
                    .append($('<span/>').text(file.name));
                if (!index) {
                    node
                    .append('<span>&nbsp;</span>')
                    .append(uploadButton.clone(true).data(data))
                    .append('<span>&nbsp;</span>')
                    .append(deleteButton.clone(true).data(data));
                }
                node.appendTo(data.context);
            });
        }).on('fileuploadprocessalways', function (e, data) {
            var index = data.index,
            file = data.files[index],
            node = $(data.context.children()[index]);
            if (file.preview) {
                node
                .prepend('<br>')
                .prepend(file.preview);
            }
            if (file.error) {
                node
                .append('<br>')
                .append($('<span class="text-danger"/>').text(file.error));
            }
            if (index + 1 === data.files.length) {
                data.context.find('.upload-button')
                    .text('Upload')
                    .addClass('upload-single')
                    .prop('disabled', !!data.files.error);
            }
        }).on('fileuploadprogressall', function (e, data) {
            var fileCount = 1;
            var filePosition = 1;
            if (uploadAllSingleButtons != null) {
                filePosition = uploadAllSingleButtonIndex + 1;
                fileCount = uploadAllSingleButtons.length;
            }
            var progress = parseInt(data.loaded / data.total * 100 / (fileCount / filePosition), 10);
            $('#progress .progress-bar').css(
            'width',
            progress + '%'
        );
        }).on('fileuploaddone', function (e, data) {
            $.each(data.result.files, function (index, file) {
                if (file.url) {
                    var link = $('<a>')
                    .attr('target', '_blank')
                    .prop('href', file.url);
                    $(data.context.children()[index])
                    .wrap(link);

                    if (uploadAllSingleButtons != null) {
                        //alert('ok');
                        uploadAllSingleButtonIndex++;
                        setTimeout(uploadAllSingles, 500);
                    }
                } else if (file.error) {
                    var error = $('<span class="text-danger"/>').text(file.error);
                    $(data.context.children()[index])
                    .append('<br>')
                    .append(error);
                }
            });
        }).on('fileuploadfail', function (e, data) {
            $.each(data.files, function (index, file) {
                var error = $('<span class="text-danger"/>').text('File upload failed.');
                $(data.context.children()[index])
                .append('<br>')
                .append(error);
            });
        }).prop('disabled', !$.support.fileInput)
        .parent().addClass($.support.fileInput ? undefined : 'disabled');
    });
    
</script>
