@model CkgDomainLogic.WFM.ViewModels.WfmViewModel

<!-- load flotr2 charting library -->
<!--[if IE]>
<script language="javascript" type="text/javascript" src="@Url.Content("~/Scripts/flotr2/flotr2.ie.min.js")"></script>
<![endif]-->
<script src="@Url.Content("~/Scripts/flotr2/flotr2.js")" type="text/javascript"> </script>

<style type="text/css">
    .chart-div {
        width: 1000px;
        height: 500px;
        margin-bottom: 20px;
    }
</style>

<h3 class="page-title" id="headerTitle">@Model.Title <small></small></h3>


<div id="chart" class="chart-div"></div>

<script type="text/javascript">

    function TestChart() {

        var container = document.getElementById("chart");

        var
          horizontal = false,                       // Show horizontal bars
          d1 = [],                                  // First data series
          d2 = [],                                  // Second data series
          point,                                    // Data point variable declaration
          i;
        
        for (i = 0; i < 4; i+=1.5) {

            if (horizontal) {
                point = [Math.ceil(Math.random() * 10), i];
            } else {
                point = [i, Math.ceil(Math.random() * 10)];
            }

            d1.push(point);

            if (horizontal) {
                point = [Math.ceil(Math.random() * 10), i + 0.5];
            } else {
                point = [i + 0.5, Math.ceil(Math.random() * 10)];
            }

            d2.push(point);
        };

        // Draw the graph
        Flotr.draw(
          container,
          [d1, d2],
          {
              bars: {
                  show: true,
                  horizontal: horizontal,
                  shadowSize: 0,
                  barWidth: 0.5
              },
              mouse: {
                  track: true,
                  relative: true
              },
              xaxis: {
                  showLabels: true
              },
              yaxis: {
                min: 0,
                autoscaleMargin: 1
              }
         }
        );
    }

    //TestChart();

</script>



@Html.SpanAlert("spanAlertDurchlauf")

@using (Html.FormSearchBox())
{
    @Html.Partial("Durchlauf/Suche", Model.Selektor)
}

@using (Html.FormSearchResultsGrid())
{
    <div id="divGrids"></div>
}

<style type="text/css">
    
    .tbNoteForToDo, #txtNewInformation {
        background-color: white!important;
    }
    
    .wmf-uebersicht-section-abmeldeart-standard {
        display: inline-block;
        margin-left: 20px;
    }
    
    #GridDurchlaufStatistik table {
        width: 100% !important;
    }

</style>

<script type="text/javascript">

    var _ladeHinweis = '@Localize.LoadingData';
    var _modelStateValid = 'false';

    function FormPreparePrivate() {
    }

    function FormPreparePrivateAjax() {
        FormPrepareAjax();
    }

    function ShowDurchlaufSearchResult(result) {
        SearchFormHide(function() {
            $("#divGrids").html(result);

            GridAllColumnFilterApplyToGrid("GridDurchlaufDetails");
            GridAllColumnFilterApplyToGrid("GridDurchlaufStatistik");

            GridDurchlaufStatistikPrepare();

            $("#divGrids").slideDown();
        });
    }

    function GridDurchlaufStatistikRenameColumnTitle(columnTitle) {
        var text = columnTitle;

        text = text.replace(/Durchschnitt/g, "Ø");
        text = text.replace(/Anz/g, "");
        text = text.replace(/Ges/g, "Anz. Ges.");
        text = text.replace(/Std/g, "Std.");
        text = text.replace(/Klaer/g, "Klär.");

        text = text.replace(/Le10/g, " < 10");
        text = text.replace(/1120/g, " 11-20");
        text = text.replace(/2130/g, " 21-30");
        text = text.replace(/3140/g, " 31-40");
        text = text.replace(/Gt40/g, " > 40");

        return text;
    }

    function GridDurchlaufStatistikPrepare() {
        $("#GridDurchlaufStatistik .dataTables_length").html("<h4>Statistik:</h4>");
        $("#GridDurchlaufStatistik .dataTables_filter").hide();
        $("#GridDurchlaufStatistik .t-grid-pager").addClass("hide");
        $("#GridDurchlaufStatistik .t-grid-header .t-header .t-link").css("padding-right", "10px");

        $.each($("#GridDurchlaufStatistik thead tr th .t-link"), function (index, elem) {
            $(elem).html(GridDurchlaufStatistikRenameColumnTitle($(elem).html()));
        });
    }

    function TryGridsRefresh() {
        // Refresh grid only
        try {
            FilterGridPreservePage("GridDurchlaufDetails");
            FilterGridPreservePage("GridDurchlaufStatistik");
        }
        catch(e){}
    }


    function OnDataBound_GridDurchlaufDetails() {
        FilteredData_Grid_OnDataBound($(this));
        jQuery('.tooltips').tooltip();
        LoadingHide();
    }

    function OnColumnShowHide_GridDurchlaufDetails() {
        FilteredData_Grid_OnColumnShowHide($(this));
    }

    function OnColumnReorder_GridDurchlaufDetails() {
        FilteredData_Grid_OnColumnReorder($(this));
    }


    function OnDataBound_GridDurchlaufStatistik() {

        $.each($("#GridDurchlaufStatistik").data("tGrid").columns, function (index, elem) {
            elem.title = GridDurchlaufStatistikRenameColumnTitle(elem.title);
        });

        FilteredData_Grid_OnDataBound($(this));
        jQuery('.tooltips').tooltip();
        LoadingHide();
    }

    function OnColumnShowHide_GridDurchlaufStatistik() {
        FilteredData_Grid_OnColumnShowHide($(this));
    }

    function OnColumnReorder_GridDurchlaufStatistik() {
        FilteredData_Grid_OnColumnReorder($(this));
    }

    function ShowChart() {
        
        $.ajax(
        {
            type: "POST",
            url: "GetChartData",
            data: { },
            loadingShow: false,
            success: function (result) {
                
                console.log(result.data.data);
                console.log(result.options);

                var chartData = result.data.data;
                var chartOptions = jQuery.parseJSON(result.options);
                chartOptions.xaxis.ticks = [[1.5, 'Walter'], [5.5, 'Zabel'], [9.5, 'Göster']];

                var container = document.getElementById("chart");

                // Draw the graph
                Flotr.draw(
                  container,
                  chartData,
                  chartOptions
                );
            }
        });
    }

    ShowChart();


</script>