
<style type="text/css">
    .grid-column-overall-quick-filter-pick-cancel .text {
        margin-left: 5px;
        font-weight: bold;
    }
    
    .grid-column-overall-quick-filter-highlighted {
        color: white!important;
        background-color: #d84a38!important;
    }
</style>

<div class="GridAllColumnFilter hide">
    <div>
        <div class="grid-toolbar">
            <!-- Paging Size -->
            <div class="dataTables_length">
                <label>
                    <select class="grid-page-sizer" size="1">
                        <option value="5">5</option>
                        <option value="10" selected="selected">10</option>
                        <option value="20">20</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                        <option value="200">200</option>
                    </select> 
                    <div class="grid-rows-per-page-label">
                        <span class="smartphone-inline">@Localize.RowsToShowSmall</span>
                        <span class="tablet-or-wider-inline">@Localize.RowsToShow</span>
                    </div>
                </label>
            </div>
            
            <!-- Tools, export options, etc -->
            <div class="outer-export-menu pull-right margin-left-15">
				<button class="btn dropdown-toggle" data-toggle="dropdown">Export <i class="icon-angle-down"></i></button>
				<ul class="dropdown-menu pull-right">
				    <li><a class="outer-export-link-excel" href="#"><i class="menu-item excel-export">Excel</i></a></li>
					<li><a class="outer-export-link-pdf" href="#"><i class="menu-item pdf-export">PDF</i></a></li>
				</ul>
			</div>

            <!-- Overall Column Filter -->
            <div class="dataTables_filter smartphone">
                <label>@Localize.ColumnOverallFilterSmall: <input type="text" class="grid-column-overall-filter"></label>
            </div>
            <div class="dataTables_filter tablet-or-wider">
                <label>@Localize.ColumnOverallFilter: <input type="text" class="grid-column-overall-filter"></label>
            </div>
            <div class="dataTables_filter tablet-or-wider margin-right-10 margin-top-5">
                
                <button class="grid-column-overall-quick-filter-pick-start btn grey mini tooltips" onclick="GridAllColumnFilterQuickMouseClickFilterSwapPickingMode()" 
                        data-original-title="@Localize.GridFilterCameraTooltip" data-placement="bottom">
                    <i class='icon-filter'></i><i class='icon-camera margin-left-5'></i>
                </button>
                <button class="grid-column-overall-quick-filter-pick-cancel btn red mini tooltips hide" onclick="GridAllColumnFilterQuickMouseClickFilterSwapPickingMode()" 
                        data-original-title="@Localize.GridFilterCameraAbbrechen" data-placement="bottom">
                        <i class='icon-filter'></i><i class='icon-camera margin-left-5'></i> <span class="text"> Abbrechen</span>
                </button>

                <button class="grid-column-overall-quick-filter-reset btn blue mini tooltips hide" 
                        data-original-title="@Localize.GridFilterCameraZuruecksetzen" data-placement="bottom">
                    <i class='icon-filter'></i><i class='icon-remove margin-left-5'></i>
                </button>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    var _gridAllColumnFilterQuickMouseClickFilter_isActive = false;

    function GridAllColumnFilterApplyToGrid(gridName, exportExcelAndPdfAvailable) {

        var columnFilter = $(".GridAllColumnFilter");

        $("#" + gridName + " > .t-grid-toolbar").append(columnFilter.html());

        // build grid export menu (excel + pdf)
        if (typeof (exportExcelAndPdfAvailable) == 'undefined')
            exportExcelAndPdfAvailable = true;
        if (!exportExcelAndPdfAvailable)
            $("#" + gridName + " .outer-export-menu").hide();

        // build grid page sizer
        setTimeout(function () {
            var grid = $("#" + gridName).data("tGrid");
            $("#" + gridName + " .grid-page-sizer").val(grid.pageSize);
            $("#" + gridName + " .grid-page-sizer").change(function () {
                var thatGrid = $("#" + gridName).data("tGrid");
                thatGrid.pageSize = $(this).val();
                thatGrid.pageTo(1);
            });
        }, 500);

        $("#" + gridName + " .grid-column-overall-quick-filter-reset").click(function () {
            GridAllColumnFilterQuickMouseClickFilterReset($(this));
        });

        FilterGridInit(gridName);
        setTimeout(function () {
            GridColumnTranslationInit(gridName);
        }, 50);
    }

    function GridAllColumnFilterQuickMouseClickFilterReset(btn) {
        var gridID = btn.parents(".t-widget").first().attr("id");
        $("#" + gridID + " .grid-column-overall-filter").val("");
        FilterGridAllColumns($("#" + gridID + " .grid-column-overall-filter"));
        $(".grid-column-overall-quick-filter-reset").hide();
    }

    function GridAllColumnFilterQuickMouseClickFilterSwapPickingMode() {
        _gridAllColumnFilterQuickMouseClickFilter_isActive = !_gridAllColumnFilterQuickMouseClickFilter_isActive;

        if (_gridAllColumnFilterQuickMouseClickFilter_isActive) {
            $(".grid-column-overall-quick-filter-pick-start").hide();
            $(".grid-column-overall-quick-filter-pick-cancel").show();
        } else {
            $(".grid-column-overall-quick-filter-pick-start").show();
            $(".grid-column-overall-quick-filter-pick-cancel").hide();
        }

        if (_gridAllColumnFilterQuickMouseClickFilter_isActive) {

            $(".t-grid table td")
                .css("cursor", "crosshair")
                .on("click",
                    function () {
                        var gridID = $(this).parents(".t-widget").first().attr("id");
                        $("#" + gridID + " .grid-column-overall-filter").val($(this).text());
                        FilterGridAllColumns($("#" + gridID + " .grid-column-overall-filter"));
                        $(".grid-column-overall-quick-filter-reset").show();
                        $(this).removeClass("grid-column-overall-quick-filter-highlighted");
                        GridAllColumnFilterQuickMouseClickFilterSwapPickingMode();
                    })
                .hover(
                    function () {
                        $(this).addClass("grid-column-overall-quick-filter-highlighted");
                    },
                    function () {
                        $(this).removeClass("grid-column-overall-quick-filter-highlighted");
                    }
                );

        } else {
            $(".t-grid table td").off("click").unbind("hover").css("cursor", "default");
        }

        return false;
    }

    function TrySetOuterExportLink(grid, exportLink, href, exportType) {
        if (href.toLowerCase().indexOf(exportType) == -1)
            return;

        var gridElement = $(grid.element);
        var outerExportLink = gridElement.find('.outer-export-link-' + exportType);
        if (outerExportLink != null) {
            outerExportLink.attr('href', href);
        }
    }
    
</script>