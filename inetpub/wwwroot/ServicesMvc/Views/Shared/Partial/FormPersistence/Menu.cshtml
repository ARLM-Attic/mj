@using GeneralTools.Contracts
@model IPersistableObject

@{
    var selectors = new List<IPersistableObject>();
    var controller = (ViewContext.Controller as IPersistableSelectorProvider);
    if (controller != null)
    {
        selectors = controller.PersistableSelectors;
    }
}

@Html.Partial("Partial/FormPersistence/Common")

@if (!Model.PersistablePropertiesAvailable)
{
    <div class="alert alert-error margin-top-10">
        <i class="icon-bell margin-right-5"></i> 
        Achtung, für diesen Selektor vom Typ <strong>@Model.GetType().Name</strong> scheinen keine als persistierbar deklarierten Properties vorhanden zu sein. <br/>
        Es sollte mindestens eine Property mit dem Attribut <strong>[FormPersistable]</strong> dekoriert werden, damit ein Persistieren des Such-Formulars überhaupt Sinn macht!
    </div>
}

@Html.HiddenFor(m => m.ObjectKey)

<div class="report-generator-wrapper">
    <li class="dropdown user persistable-form-dropdown-menu">
        <a href="#" class="dropdown-toggle" data-toggle="dropdown">
            <span id="badgeVisibleItemsCount" class="badge">@selectors.Count</span>
            <i class="icon-cog"></i>
            <i class="icon-angle-down"></i>
        </a>
        <ul class="dropdown-menu">

            @foreach (var selector in selectors)
            {
                var isCurrentSelector = (selector.ObjectKey == Model.ObjectKey);
                var liCssClass = (isCurrentSelector ? "current" : "");

                <li class="loadable @liCssClass" id="li_dropdown_@selector.ObjectKey">
                    <span class="li-button" title="@Localize.FormPersistableSelector_FormLoad" onclick="PersistableSelectorLoad('@selector.ObjectKey')">
                        <span class="margin-left-10 margin-right-5">@selector.ObjectName</span>
                    </span>
                    @if (!isCurrentSelector)
                {
                        <span class="li-button" title="@Localize.FormPersistableSelector_FormDelete" onclick="PersistableSelectorDelete('@selector.ObjectKey')">
                            <i class="icon-remove"></i>
                        </span>
                    }
                </li>
            }
            @if (selectors.None())
            {
                <li class="" id="li_dropdown_none">
                    <span class="li-button">
                        <span class="li-item margin-left-10 margin-right-5">@Localize.FormPersistableSelector_NoFormsAvailable</span>
                    </span>
                </li>
            }

        </ul>
    </li>

    @Html.TextBoxFor(m => m.ObjectName, new { @class = "m-wrap large persistable-selector-current-textbox placeholder-no-fix", placeholder = Localize.FormPersistableSelector_FormNamePlaceholderHint })

    <div class="report-generator-buttons">
        <span class='btn mini yellow report-generator' title="@Localize.FormPersistableSelector_FormSave" onclick="PersistableSelectorSave($(this), '@Model.ObjectKey')">
            <i class='icon-save'></i>
        </span>
        <span class='btn mini yellow report-generator' title="@Localize.FormPersistableSelector_FormSaveAs" onclick="PersistableSelectorSaveAs($(this), '@Model.ObjectKey')">
            <i class='icon-copy'></i>
        </span>
        <span class='btn mini yellow report-generator' title="@Localize.FormPersistableSelector_FormReset" onclick="PersistableSelectorClear($(this))">
            <i class='icon-remove'></i>
        </span>
    </div>
</div>
