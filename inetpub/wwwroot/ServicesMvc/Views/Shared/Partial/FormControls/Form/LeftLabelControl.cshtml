@using MvcTools.Contracts
@using MvcTools.Models
@model FormControlModel

@{
    var additionalClass = (Model.IsCollapsed ? " hide" : "");
    var formSettingsAdminMode = ViewContext.Controller.GetPropertyValueIfIs<IGridSettingsAdministrationProvider, bool>(o => o.GridSettingsAdminMode);
}

@if (Model.ColumnMode != FormMultiColumnMode.None)
{
    if (!Model.IsCollapsed && (Model.ColumnMode == FormMultiColumnMode.Left || Model.ColumnMode == FormMultiColumnMode.Left3))
    {
        @Html.Raw("<div class=\"row-fluid\">") 
    }

    if (Model.ColumnMode == FormMultiColumnMode.Left || Model.ColumnMode == FormMultiColumnMode.Right)
    {
        @Html.Raw("<div class=\"span6" + additionalClass + "\">")
    }

    if (Model.ColumnMode == FormMultiColumnMode.Left3 || Model.ColumnMode == FormMultiColumnMode.Middle3 || Model.ColumnMode == FormMultiColumnMode.Right3)
    {
        @Html.Raw("<div class=\"span4" + additionalClass + "\">")
    }
}

<div class="control-group">
    
    <label class="control-label">
        @if (!Model.LabelHidden)
        {
            @Model.DisplayNameHtml @Model.RequiredIndicatorHtml @Model.PerstistenceIndicatorHtml
        }
        @if (formSettingsAdminMode && Model.ControlHtml != null && !Model.ModelTypeName.NotNullOrEmpty().ToLower().Contains("gridadminviewmodel"))
        {
            <span>
                <i class="icon-wrench" 
                     data-model-type-name="@Model.ModelTypeName" data-property-name="@Model.PropertyName" 
                     onclick="return FormSettingsAdminMode_EditFormControls($(this));">
                </i>
            </span>
        }
    </label>

    <div class="controls">
        
        @if (Model.PreControlHtml != null)
        {
            @Model.PreControlHtml
        }
           
       
        @if (Model.IsCheckBox && Model.LabelHidden && Model.PostControlHtml == null)
        {
            <label class="checkbox">
                @Model.ControlHtml
                @Model.DisplayNameHtml @Model.PerstistenceIndicatorHtml
            </label>
        }
        else
        {
            @Model.ControlHtml
            if (Model.IsCheckBox)
             {
                 <span>&nbsp;</span>
             }
        }


        @if (Model.ValidationMessageHtml != null)
        {
            @Model.ValidationMessageHtml
        }
        

        @if (Model.PostControlHtml != null)
        {
            @Model.PostControlHtml
        }

    </div>

</div>

@if (Model.ColumnMode != FormMultiColumnMode.None)
{
    @Html.Raw("</div>")

    if (!Model.IsCollapsed && (Model.ColumnMode == FormMultiColumnMode.Right || Model.ColumnMode == FormMultiColumnMode.Right3))
    {
        @Html.Raw("</div>")
    }
}
