@model CkgDomainLogic.KroschkeZulassung.ViewModels.KroschkeZulassungViewModel 

<script type="text/javascript">

    var _modelIsValid = false;
    var _customButtonText = '@(Model.ObjectKey.IsNullOrEmpty() ? Localize.AddToShoppingCart : Localize.Save)';
    var _skipBankAddressData = false;

    function KroschkeZulassungFormPreparePrivate() {
        FormPreparePrivate();
    }

    function FormPreparePrivate() {
        try { FormWizardInitPrivate(); } catch (e) { }
        try { MultiSelectPreparePrivate(); } catch (e) { }
        ShoppingCartMenuRefreshCount();
    };

    function FormPreparePrivateAjax() {
        FormPrepareAjax();
        $('.tooltips').tooltip();
        setTimeout('LoadingHide()', 1000);
    }

    function FormWizardShowHideSaveButton(show, delay) {
        setTimeout(function () {
            $(".button-custom1 i").removeClass("m-icon-swapright").addClass("icon-shopping-cart");
            FormWizard.ButtonCustom1Show(show, _customButtonText);
        }, (typeof (buttonText) !== 'undefined' ? delay : 0));
    }
    
    function FormWizardInitPrivate() {
        FormWizard.Init(function () {
            FormWizard.ActionsShow(true);
            FormWizard.tabClickDisabled = true;
        });

        FormWizard.OnNext(function (step, maxSteps) {
            var stepName = FormWizard.GetStepKey(step - 1);

            try {
                $("#AjaxForm" + stepName).submit();
                window.scrollTo(0, 0);
                return false;
            }
            catch (e) {
                return true;
            }
        });

        FormWizard.OnPrev(function (step, maxSteps) {
            FormWizardShowHideSaveButton(step == 7, 500);

            if (step == 2 && _skipBankAddressData) {
                FormWizard.ButtonPrevInvoke();
            }

            window.scrollTo(0, 0);
            return true;
        });

        FormWizard.OnCustom1(function (step, maxSteps) {
            SaveZulassung();

            return true;
        });

        FormWizard.OnSubmit(function () {

            AjaxRequestNextStep();

            return true;
        });

        FormWizard.OnRestart(function () {
            LocationReloadWithoutQueryString();
        });
    }

    function GetGrid(gridName) {
        return $("#" + gridName).data("tGrid");
    }

    function GridRefresh(gridName) {
        GetGrid(gridName).pageTo(1);
    }

    function AjaxRequestNextStep() {
        var nextTabKey = FormWizard.GetNextTabKey();
        $.ajax({
            type: "POST",
            url: nextTabKey,
            data: {},
            loadingShow: true,
            success: function (result) {
                if (typeof (result.message) !== "undefined") {
                    alert(result.message);
                    return;
                }
                FormWizard.SetNextTabHtmlAndMoveNext(result);
                FormPreparePrivateAjax();
                
                if (nextTabKey.toLowerCase() == "receipt")
                    ShoppingCartMenuRefreshCount();
            }
        });
    }

    function SaveZulassung() {
        var nextTabKey = FormWizard.GetNextTabKey();
        $.ajax({
            type: "POST",
            url: "Save",
            data: {},
            loadingShow: true,
            success: function (result) {
                if (typeof (result.message) !== "undefined") {
                    alert(result.message);
                    return;
                }
                FormWizard.SetNextTabHtmlAndMoveNext(result);
                FormPreparePrivateAjax();

                if (nextTabKey.toLowerCase() == "receipt") 
                    ShoppingCartMenuRefreshCount();
            },
            error: function (jqXhr, exception) {
                alert(jqXhr.responseText);
            }
        });
    } 

    function ShoppingCartSubmitFinished(result) {
        $(".form-wizard").html(result);
        ShoppingCartHide();
    }

    // Rechnungsdaten
    function AjaxFormRechnungsdatenComplete() {
        FormPrepareAjax();

        if (_modelIsValid) {
            AjaxRequestNextStep();
            return;
        }
    }

    function TrySkipBankAddressData() {
        if (FormWizard.GetNextTabKey() == "BankAdressdaten" && _skipBankAddressData) {
            $("#AjaxFormBankAdressdaten").submit();
        }
    }

    // BankAdressdaten
    function AjaxFormBankAdressdatenComplete() {
        FormPrepareAjax();

        if (_modelIsValid) {
            AjaxRequestNextStep();
            return;
        }
    }

    function LoadBankdatenAusIban() {

        var iban = $("#Iban").val();

        $.ajax(
            {
                type: "POST",
                url: "LoadBankdatenAusIban",
                data: { iban: iban },
                loadingShow: true,
                success: function (result) {
                    if (result.Swift == null || result.Swift == '') {
                        $("#Swift").attr("readonly", false);
                        $("#Swift").attr("placeholder", "");
                        $("#Swift").val("");
                        $("#Geldinstitut").attr("readonly", false);
                        $("#Geldinstitut").attr("placeholder", "");
                        $("#Geldinstitut").val("");
                        SpanAlertWarning("bankDataHint", '@Localize.BankDataCouldNotBeRetrievedFromIban.ToJavascriptString()', 1800);
                        return;
                    }

                    $("#Swift").val(result.Swift);
                    $("#Swift").attr("readonly", true);
                    $("#KontoNr").val(result.KontoNr);
                    $("#Bankleitzahl").val(result.Bankleitzahl);
                    $("#Geldinstitut").val(result.Geldinstitut);
                    SpanAlertSuccess("bankDataHint", '@Localize.BankDataSuccessfullyRetrievedFromIban.ToJavascriptString()', 1800);
                }
            });

        return false;

    }

    // Fahrzeugdaten
    function AjaxFormFahrzeugdatenComplete() {
        FormPrepareAjax();

        if (_modelIsValid) {
            AjaxRequestNextStep();
            return;
        }
    }

    // HalterAdresse
    function AjaxFormHalterAdresseComplete() {
        FormPrepareAjax();

        if (_modelIsValid) {
            AjaxRequestNextStep();
            return;
        }

        var detailWindow = $("#Adressen").data("tWindow");
        detailWindow.center().close();
    }

    function OnDataBound_HalterAdressenAuswahlGrid() {
        FilteredData_Grid_OnDataBound($(this));
        $('.tooltips').tooltip();
    }

    function OnColumnShowHide_HalterAdressenAuswahlGrid() {
        FilteredData_Grid_OnColumnShowHide($(this));
    }

    function OnColumnReorder_HalterAdressenAuswahlGrid() {
        FilteredData_Grid_OnColumnReorder($(this));
    }

    function GridHalterAdresseOnSelect(id) {
        $("#TmpSelectionKey").val(id);
        $("#AjaxFormHalterAdresse").submit();
    }

    // Zulassungsdaten
    function AjaxFormZulassungsdatenComplete() {
        FormPrepareAjax();

        if (_modelIsValid) {
            AjaxRequestNextStep();
            return;
        }
    }

    function LoadKfzKreisAusHalterAdresse() {

        $.ajax(
            {
                type: "POST",
                url: "LoadKfzKreisAusHalterAdresse",
                data: {},
                loadingShow: true,
                success: function (result) {
                    if (result.kfzKreis == '') {
                        SpanAlertWarning("kfzKreisHint", '@Localize.RegDistrictCouldNotBeRetrievedFromCarOwnerAddr.ToJavascriptString()', 1800);
                        return;
                    }

                    $("#Zulassungskreis").val(result.kfzKreis);
                    SpanAlertSuccess("kfzKreisHint", '@Localize.RegDistrictSuccessfullyRetrievedFromCarOwnerAddr.ToJavascriptString()', 1800);
                }
            });

        return false;

    }

    function CheckKennzeichenReserviert() {
        var wkz2 = $("#Wunschkennzeichen2");
        var wkz3 = $("#Wunschkennzeichen3");
        var resName = $("#ReservierungsName");
        var resNr = $("#ReservierungsNr");

        var kennzReserv = $("#KennzeichenReserviert").is(":checked");
        if (kennzReserv) {
            wkz2.attr('readonly', true);
            wkz3.attr('readonly', true);
            resName.attr('readonly', false);
            resNr.attr('readonly', false);
        } else {
            wkz2.attr('readonly', false);
            wkz3.attr('readonly', false);
            resName.attr('readonly', true);
            resNr.attr('readonly', true);
        }
    }

    // OptionenDienstleistungen
    function AjaxFormOptionenDienstleistungenComplete() {
        FormPrepareAjax();

        if (_modelIsValid) {
            AjaxRequestNextStep();
            return;
        }
    }

    function CheckKennzeichenSondergroesse() {
        var kennzGr = $("#KennzeichenGroesseId");

        var kennzSondergr = $("#KennzeichenSondergroesse").is(":checked");
        if (kennzSondergr) {
            kennzGr.attr('disabled', false);
        } else {
            kennzGr.attr('disabled', true);
        }
    }

    function CheckSaisonkennzeichen() {
        var sais1 = $("#SaisonBeginn");
        var sais2 = $("#SaisonEnde");

        var saisKennz = $("#Saisonkennzeichen").is(":checked");
        if (saisKennz) {
            sais1.attr('disabled', false);
            sais2.attr('disabled', false);
        } else {
            sais1.attr('disabled', true);
            sais2.attr('disabled', true);
        }
    }

    // Adressen allgemein
    function AjaxFormAdressePrepareAutoCompleteReset(formID) {
        var form = $("#" + formID);
        form.find("input:text").each(function () {
            if ($(this).attr('id') != 'Name1')
                $(this).bind('keyup', function () { $("#Name1").autocomplete("disable"); });
        });
    }

    function AjaxFormAdressePrepareAutoComplete(tb, url) {

        var form = tb.closest("form");
        var textboxValues = '';
        form.find("input:text").each(function () {
            if ($(this).attr('id') != 'Name1')
                textboxValues = $(this).val();
        });
        if (textboxValues != '')
            return;

        $.ajax({
            type: "POST",
            url: url,
            data: {},
            loadingShow: false,
            success: function (result) {
                AjaxFormAdresseInitAutoComplete(tb, result.items);
            }
        });
    }

    function AjaxFormAdresseInitAutoComplete(tb, items) {
        tb.autocomplete({
            minLength: 0,
            source: items,
            select: function (event, ui) {
                $("#TmpSelectionKey").val(ui.item.value);
                var form = tb.closest("form");
                form.submit();
            }
        });
        tb.autocomplete("enable");
    }

    function AjaxFormAdresseEmpty(formID, url) {
        var form = $("#" + formID);
        form.find(":input").each(function () {
            switch (this.type) {
                case 'password':
                case 'select-multiple':
                case 'text':
                case 'textarea':
                    $(this).val('');
                    break;
                case 'select-one':
                    $(this).val('DE');
                    break;
                case 'checkbox':
                case 'radio':
                    this.checked = false;
            }
        });

        AjaxFormAdressePrepareAutoComplete($("#Name1"), url);
        return false;
    }

    function AjaxFormAdressenShowGrid(addressType) {

        $.ajax(
            {
                type: "POST",
                url: addressType + "AdressenShowGrid",
                data: {},
                loadingShow: true,
                success: function (result) {
                    var detailWindow = $("#Adressen").data("tWindow");
                    $("#InnerAdressen").html(result);
                    GridAllColumnFilterApplyToGrid(addressType + "AdressenAuswahlGrid");
                    detailWindow.center().open();
                }
            });

        return false;
    }

    function OnComplete_AdressenAuswahlGrid() {
        var grid = $(this);
        setTimeout(function () {
            var gridHeight = parseInt(grid.css('height').replace(/px/, ""));
            var newHeight = (gridHeight + 80) + 'px';
            grid.closest('.t-window-content').animate({ height: newHeight }, 200); // .css('height', newHeight);
        }, 300);
    }

    function CleanUpKennzeichen(e) {
        var evt = (e) ? e : window.event;
        var key = (evt.keyCode) ? evt.keyCode : evt.which;

        // 0-9
        if (key >= 48 && key <= 57) {
            return true;
        }
        // A-Z
        if (key >= 65 && key <= 90) {
            return true;
        }
        // a-z
        if (key >= 97 && key <= 122) {
            return true;
        }
        // ä,ö,ü,Ä,Ö,Ü,-
        if (key == 132 || key == 148 || key == 129 || key == 142 || key == 153 || key == 154 || key == 45) {
            return true;
        }

        // alle anderen Zeichen nicht zulassen
        return false;
    }

</script>


@(Html.Telerik().Window()
    .Name("Adressen")
    .Visible(false)
    .Title("Auswahl Adressen")
    .Modal(true)
    .Draggable(true)
    .Scrollable(false)
    .Width(900)
    .Height(700)
    .Content(@<text><div id="InnerAdressen"></div></text>))

