@using CkgDomainLogic.ZldPartner.Models
@using CkgDomainLogic.ZldPartner.ViewModels
@model ZldPartnerZulassungenViewModel

@Html.ValidationSummary()

@{ var gridName = "GridOffeneZulassungen"; }

@(Html.Telerik()
    .Grid<OffeneZulassung>()
    .Name(gridName)
    .Editable(editing => editing.Mode(GridEditMode.InCell))
    .DataKeys(d => d.Add(a => a.DatensatzId).RouteKey("DatensatzId"))
    .XAjaxDataBindingWithUpdate("OffeneZulassungenAjaxBinding", "OffeneZulassungenAjaxSaveChanges", "ZldPartner")
    .Columns(columns =>
    {
        columns.Command(c => c.Edit()).Visible(false);
        columns.XBound(c => c.DatensatzId).Visible(false);
        columns.XBound(c => c.BelegNrShow);
        columns.XBound(c => c.BelegPositionShow);
        columns.XBound(c => c.HalterShow);
        columns.XBound(c => c.FahrgestellNrShow);
        columns.XBound(c => c.Zb2NrShow);
        columns.XBound(c => c.MaterialTextShow);
        columns.XBound(c => c.ZulassungsKreisShow);
        columns.XBound(c => c.ZulassungsDatum).Format("{0:dd.MM.yyyy}");
        columns.XBound(c => c.Kennzeichen);
        columns.XBound(c => c.Gebuehr);
        columns.XBound(c => c.PreisShow);
        columns.XBound(c => c.Status);
        columns.XBound(c => c.BearbeitungsStatus).HtmlAttributes(new { @class = "fontBold fontItalic" });
    })
    .XAutoColumnConfiguration()
    .ClientEvents(events => events.XAutoClientEvents(gridName).OnRowDataBound("OnRowDataBound_" + gridName).OnEdit("OnEdit_" + gridName).OnDataBinding("OnDataBinding_" + gridName))
    .XPageSize(10)
    .XSort(sortOrder => sortOrder.Add(c => c.DatensatzId).Ascending())
    .ToolBar(commands =>
    {
        commands.FilteredDataCommand("ExportOffeneZulassungenFilteredExcel", "ZldPartner");
        commands.FilteredDataCommand("ExportOffeneZulassungenFilteredPDF", "ZldPartner");
    })
)

<script type="text/javascript">
    _modelStateValid = @ViewContext.ViewData.ModelState.IsValid.ToString().ToLower();
</script>

<div class="form-horizontal">
    <div class="form-actions">
        <button class="btn green @(@Model.EditMode ? "" : "hide")" onclick="ApplyGridChangesAndSaveOffeneZulassungen(false);"> @Localize.Save <i class="m-icon-swapright m-icon-white"></i></button>
        <button class="btn green @(@Model.SendingEnabled ? "" : "hide")" onclick="ApplyGridChangesAndSaveOffeneZulassungen(true);"> @Localize.Send <i class="m-icon-swapright m-icon-white"></i></button>
        <button class="btn green @(@Model.EditMode ? "hide" : "")" onclick="location.reload(); "> @Localize.Continue <i class="m-icon-swapright m-icon-white"></i></button>
    </div>
</div>
