<script type="text/javascript">

    var ladeHinweis = '@Localize.LoadingData';
    var _modelIsValid = false;

    function FormPreparePrivate() {

        try { FormWizardInitPrivate(); } catch (e) { }

        // move our grid filter form into grid's toolbar:
        GridAllColumnFilterApplyToGrid("GridFahrzeugAuswahl");

        try { MultiSelectPreparePrivate(); } catch (e) { }

        InitCsvUploadButton();
    };

    function FormPreparePrivateAjax() {
        FormPrepareAjax();
        $('.tooltips').tooltip();
    }
    
    function FormWizardInitPrivate() {
        FormWizard.Init(function () {
            FormWizard.ActionsShow(!FormWizard.HasStepKey('FahrzeugAuswahl') && typeof(_formErrorHint) == 'undefined');
        });

        FormWizard.OnNext(function (step, maxSteps) {
            if ('FahrzeugAuswahl' == FormWizard.GetStepKey(step - 1)) {
                return FahrzeugAuswahl();
            }
            if ('VersandartOptionen' == FormWizard.GetStepKey(step - 1)) {
                $("#AjaxFormVersandartOptionen").submit();
                return false;
            }
            if ('VersandAdresse' == FormWizard.GetStepKey(step - 1)) {
                $("#VersandAdresseAjaxForm").submit();
                return false;
            }
            if ('VersandOptionen' == FormWizard.GetStepKey(step - 1)) {
                $("#AjaxFormVersandOptionen").submit();
                return false;
            }

            return true;
        });

        FormWizard.OnPrev(function (step, maxSteps) {
            if ('FahrzeugAuswahl' == FormWizard.GetStepKey(step)) 
                FormWizard.ActionsShow(true);
            return true;
        });

        FormWizard.OnSubmit(function () {
            
            AjaxRequestNextStep();

            return true;
        });

        FormWizard.OnRestart(function () {
            //alert('Ok, let´s restart! :)');
            location.reload();
        });
    }

    function GetGrid(gridName) {
        return $("#" + gridName).data("tGrid");
    }

    function GridRefresh(gridName) {
        GetGrid(gridName).pageTo(1);
    }

    function AjaxRequestNextStep() {
        $.ajax({
            type: "POST",
            url: FormWizard.GetNextTabKey(),
            data: {},
            loadingShow: true,
            success: function (result) {
                if (typeof (result.message) !== "undefined") {
                    alert(result.message);
                    return;
                }
                FormWizard.SetNextTabHtmlAndMoveNext(result);
            }
        });    
    }

    function FahrzeugAuswahl() {
        AjaxRequestNextStep();
        return false;
    }

    function InitCsvUploadButton() {
        $(".t-upload").addClass("file-upload-wrapper-div");
        $(".t-dropzone").addClass("file-upload-wrapper-div");
        $(".t-dropzone em").html("");

        var wrapperButton = $(".t-upload-button");
        wrapperButton.css("width", 120);
        wrapperButton.attr("title", "Filtern Sie alternativ die Fahrzeugliste auf Basis Ihrer eigenen CSV Daten!");
        
        var span = $(".t-upload-button span");
        span.addClass("file-upload tooltips");
        span.html("CSV Upload <i class='icon-upload-alt margin-left-5'></i>");
    }

    function AjaxCsvTemplateShow() {
        $.ajax(
            {
                type: "POST",
                url: "CsvTemplate",
                data: {},
                loadingShow: true,
                success: function (result) {
                    var detailWindow = $("#CsvTemplateHint").data("tWindow");
                    $("#CsvTemplateHintDetail").html(result);
                    detailWindow.center().open();
                }
            });

        return false;
    }
    
    function AjaxFormVersandartOptionenComplete() {
        FormPrepareAjax();

        if (_modelIsValid)
            AjaxRequestNextStep();
    }

    function AjaxFormVersandOptionenComplete() {
        FormPrepareAjax();

        if (_modelIsValid)
            AjaxRequestNextStep();
    }

    
    //    
    // <Adressen, Versandadressen, Halteradressen, etc>
    //

    function AjaxFormAdressePrepareAutoCompleteReset(formID) {
        var form = $("#" + formID);
        form.find("input:text").each(function() {
            if ($(this).attr('id') != 'Name1')
                $(this).bind('keyup', function() { $("#Name1").autocomplete("disable"); });
        });
    }
    
    function AjaxFormAdressePrepareAutoComplete(tb, url) {

        var form = tb.closest("form"); 
        var textboxValues = '';
        form.find("input:text").each(function() {
            if ($(this).attr('id') != 'Name1')
                textboxValues = $(this).val();
        });
        if (textboxValues != '')
            return;

        $.ajax({
            type: "POST",
            url: url,
            data: { },
            loadingShow: false,
            success: function (result) {
                AjaxFormAdresseInitAutoComplete(tb, result.items);
            }
        });      
    }
    
    function AjaxFormAdresseInitAutoComplete(tb, items) {
        tb.autocomplete({
            minLength: 0,
            source: items,
            select: function (event, ui) {
                $("#TmpSelectionKey").val(ui.item.value);
                var form = tb.closest("form");
                form.submit();
            }
        });
        tb.autocomplete("enable");
    }

    function AjaxFormAdresseEmpty(formID, url) {
        var form = $("#" + formID);
        form.find(":input").each(function() {
            switch(this.type) {
                case 'password':
                case 'select-multiple':
                case 'text':
                case 'textarea':
                    $(this).val('');
                    break;
                case 'select-one':
                    $(this).val('DE');
                    break;
                case 'checkbox':
                case 'radio':
                    this.checked = false;
            }        
        });

        AjaxFormAdressePrepareAutoComplete($("#Name1"), url);
        return false;
    }

    function AjaxFormAdressenShowGrid(addressType) {

        //alert(addressType);
        //return false;

        $.ajax(
            {
                type: "POST",
                url: addressType + "AdressenShowGrid",
                data: {},
                loadingShow: true,
                success: function (result) {
                    var detailWindow = $("#Adressen").data("tWindow");
                    $("#InnerAdressen").html(result);
                    GridAllColumnFilterApplyToGrid(addressType + "AdressenAuswahlGrid");
                    detailWindow.center().open();
                }
            });

        return false;
    }

    function AjaxFormAdresseEdit(addressType) {

        $.ajax(
            {
                type: "POST",
                url: "Adresse",
                data: { addressType: addressType },
                loadingShow: true,
                success: function (result) {
                    var detailWindow = $("#AdresseBearbeiten").data("tWindow");
                    $("#InnerAdresseBearbeiten").html(result);
                    detailWindow.center().open();
                }
            });

        return false;
    }
    
    function AjaxFormAdresseClose() {
        $("#AdresseBearbeiten").data("tWindow").close();
    }

    function GridAdresseOnSelect(id, formID, addressType) {
        var form = $("#" + formID);

        if (typeof(form.attr('id')) != 'undefined') {
            $("#TmpSelectionKey").val(id);
            form.submit();
        }

        // no form available, so we assume that we are inside the "summary" context:
        UpdateAddressAndGetSummary(id, addressType);
    }

    function UpdateAddressAndGetSummary(id, addressType) {
        $.ajax(
        {
            type: "POST",
            url: "UpdateAddressAndGetSummary",
            data: { updateAddressid: id, addressType: addressType },
            loadingShow: false,
            success: function (result) {
                FormWizard.SetTabHtml("Summary", result);
                AjaxFormAdresseClose();
                $("#Adressen").data("tWindow").close();
                SpanAlertSuccess(addressType, "Adresse aktualisiert.", 1800);
            },
            error: function (jqXhr, exception) {
                alert(jqXhr.responseText);
            }
        });
    }
    
    //    
    // </Adressen, Versandadressen, Halteradressen, etc>
    //


    //    
    // <Versandadressen>
    //

    function VersandAdresseAjaxFormComplete() {
        FormPrepareAjax();

        if (_modelIsValid) {
            AjaxRequestNextStep();
            return;
        }

        var detailWindow = $("#Adressen").data("tWindow");
        detailWindow.center().close();
    }

    function OnDataBound_VersandAdressenAuswahlGrid() {
        FilteredData_Grid_OnDataBound($(this));
        $('.tooltips').tooltip();
    }

    function OnColumnShowHide_VersandAdressenAuswahlGrid() {
        FilteredData_Grid_OnColumnShowHide($(this));
    }

    function OnColumnReorder_VersandAdressenAuswahlGrid() {
        FilteredData_Grid_OnColumnReorder($(this));
    }
    
    function OnDataBound_ZulassungAdressenAuswahlGrid() {
        FilteredData_Grid_OnDataBound($(this));
        $('.tooltips').tooltip();
    }

    function OnColumnShowHide_ZulassungAdressenAuswahlGrid() {
        FilteredData_Grid_OnColumnShowHide($(this));
    }

    function OnColumnReorder_ZulassungAdressenAuswahlGrid() {
        FilteredData_Grid_OnColumnReorder($(this));
    }

    //    
    // </Versandadressen>
    //


    //
    // <Adressen generell>
    //

    _adresseAjaxFormAddressType = '';
    function AdresseAjaxFormComplete() {
        FormPrepareAjax();

        if (_modelIsValid) {
            UpdateAddressAndGetSummary(-1, _adresseAjaxFormAddressType);
            return;
        }
    }

    function OnComplete_AdressenAuswahlGridX() {
        var grid = $(this);
        grid.resize(function () {
            alert($(this));
        });
    }

    function OnComplete_AdressenAuswahlGrid() {
        var grid = $(this);
        setTimeout(function () {
            var gridHeight = parseInt(grid.css('height').replace(/px/, ""));
            var newHeight = (gridHeight + 80) + 'px';
            grid.closest('.t-window-content').animate({height: newHeight}, 200); // .css('height', newHeight);
        }, 300);
    }

    //
    // </Adressen generell>
    //
    

    function OnDataBound_GridFahrzeugAuswahl() {
        FilteredData_Grid_OnDataBound($(this));
        $('.tooltips').tooltip();

        // prepare multi row selection
        App.initUniform();
        Grid_PrepareMultiRowSelected("GridFahrzeugAuswahl");
    }

    function OnLoad_GridFahrzeugAuswahl() {
        $('.t-no-data td').text(ladeHinweis);
    }

    function OnRowDataBound_GridFahrzeugAuswahl(e) {
        var isMissing = e.dataItem["IsMissing"];

        if (isMissing)
            $(e.row).addClass((e.row.sectionRowIndex % 2 == 0) ? "t-grid-error" : "t-grid-error-alt");
    }

    function OnColumnShowHide_GridFahrzeugAuswahl() {
        FilteredData_Grid_OnColumnShowHide($(this));
    }

    function OnColumnReorder_GridFahrzeugAuswahl() {
        FilteredData_Grid_OnColumnReorder($(this));
    }

    function OnSelectionChange_GridFahrzeugAuswahl(cb) {

        Grid_FormatMultiRowSelected(cb);

        $.ajax({
            type: "POST",
            url: "FahrzeugAuswahlSelectionChanged",
            data: { vin: cb.val(), isChecked: cb.is(':checked') },
            loadingShow: false,
            success: function (result) {
                var count = result.allSelectionCount;
                GridFahrzeugAuswahl_MultiSelectUpdate(result.allSelectionCount);
                FormWizard.ActionsShow(count > 0);
                if (count == 0) {
                    $("#FahrzeugAuswahlCount").addClass('hide');
                    return;
                }

                $("#FahrzeugAuswahlCount").removeClass('hide');
                $("#FahrzeugAuswahlCount > span").html('Sie haben ' + count + ' Fahrzeug' + (count == 1 ? '' : 'e') + ' ausgewählt!');
            }
        });
    }

    function GridFahrzeugAuswahl_OnAllSelectionChange(check) {
        $.ajax({
            type: "POST",
            url: "FahrzeugAuswahlSelectionChanged",
            data: { id: "", isChecked: check },
            loadingShow: true,
            success: function (result) {
                var count = result.allSelectionCount;
                GridFahrzeugAuswahl_MultiSelectUpdate(result.allSelectionCount);
                FormWizard.ActionsShow(count > 0);
                
                $("#csv-upload-reset > span.found-count").text(result.allFoundCount);
                $("#csv-upload-reset > span.all-count").text(result.allCount);
                FilterGrid("GridFahrzeugAuswahl");
            }
        });
    }

    function GridFahrzeugAuswahl_MultiSelectUpdate(count) {
        if (count == 0) {
            $("#FahrzeugAuswahlCount").addClass('hide');
            $("#uncheckAllRecords").attr("checked", false);
            $.uniform.update($("#uncheckAllRecords"));
            return;
        }

        $("#FahrzeugAuswahlCount").removeClass('hide');
        $("#FahrzeugAuswahlCount > span").html('Sie haben ' + count + ' Fahrzeug' + (count == 1 ? '' : 'e') + ' ausgewählt!');
        $("#uncheckAllRecords").attr("checked", true);
        $.uniform.update($("#uncheckAllRecords"));
    }    
    
    function UploadStart(e) {

        // clear only the UI of our Upload Control:
        //$(this).children(".t-upload-files").remove();

        // because we are uploading in async mode, our "e.files" collection always has exact 1 entry:
        var fileName = e.files[0].name;

        if (fileName.toLowerCase().indexOf('.csv') <= 0) {
            alert('Bitte nur CSV-Dateien hochladen!');
            return false;
        }

        LoadingShow();

        return true;
    }

    function UploadFinished(e) {

        // clear only the UI of our Upload Control:
        $(this).children(".t-upload-files").remove();

        if (!e.response.success) {
            alert(e.response.message);
            return;
        }

        setTimeout(function() { $("#csv-upload-reset").show(); }, 1000);
        GridFahrzeugAuswahl_OnAllSelectionChange(true);
    }

    function UploadError(e) {
        e.preventDefault();
        SpanAlertError("Message", "Es gab ein Problem beim Speichern Ihrer Datei!", 2000);
        LoadingHide();
    }

    function CsvUploadReset() {

        $.ajax({
            type: "POST",
            url: "CsvUploadReset",
            data: {  },
            loadingShow: true,
            success: function (result) {
                $("#csv-upload-reset").hide();
                GridFahrzeugAuswahl_OnAllSelectionChange(false);
            }
        });
    }

</script>


@(Html.Telerik().Window()
    .Name("Adressen")
    .Visible(false)
    .Title("Auswahl Adressen")
    .Modal(true)
    .Draggable(true)
    .Scrollable(false)
    .Width(900)
    .Height(700)
    .Content(@<text><div id="InnerAdressen"></div></text>))


@(Html.Telerik().Window()
    .Name("AdresseBearbeiten")
    .Visible(false)
    .Title("Adresse bearbeiten")
    .Modal(true)
    .Draggable(true)
    .Scrollable(false)
    .Width(500)
    .Height(550)
    .Content(@<text><div id="InnerAdresseBearbeiten"></div></text>))
