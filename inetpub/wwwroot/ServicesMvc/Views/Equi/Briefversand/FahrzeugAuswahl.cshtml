@model CkgDomainLogic.Equi.ViewModels.BriefversandViewModel
@using CkgDomainLogic.Equi.Contracts
@using CkgDomainLogic.Equi.Models
@{ var gridName = "GridFahrzeugAuswahl"; }

<style type="text/css">

.file-upload-wrapper-div {
    display: inline!important;
}    
.file-upload {
    font-size: 0.8em;
    font-weight: 500;
}
</style>

@if (Model.VersandModus == BriefversandModus.Stueckliste)
{
    <script type="text/javascript">
        _fahrzeugCount = @Model.Fahrzeuge.Count ;
    </script>
}
else
{
    <h4 class="margin-bottom-20">

        @(Html.Telerik().Upload()
              .Name("fileUpload")
              .Multiple(false)
              .Localizable("de-DE")
              .Async(async => async
                  .Save("CsvUploadStart", "Equi")
                  .SaveField("uploadFiles")
                  .AutoUpload(true))
              .Multiple(false)
              .ShowFileList(false)
              .ClientEvents(events => events
                  .OnUpload("UploadStart")
                  .OnSuccess("UploadFinished")
                  .OnError("UploadError"))
              )

        <button id="csv-upload-reset" class="btn black tooltips margin-right-10 hide" onclick="CsvUploadReset()" data-original-title="Setzt die Filterung über Ihren CSV Upload zurück und listet wieder den kompletten Fahrzeugbestand" data-placement="right">
            <span class="found-count"></span> / <span class="all-count"></span> gefunden <i class="icon-upload-alt margin-left-15"></i><i class="icon-remove margin-left-5"></i>
        </button>

        <a href="DownloadCsvTemplate" class="btn white tooltips" data-original-title="@Localize.DownloadCsvFileTemplateTitle" data-placement="top">@Localize.DownloadCsvFileTemplate <i class="icon-chevron-right"></i></a>
    </h4>
}

<h4>
    @Model.FahrzeugAuswahlTitleHint: 
    <span id="FahrzeugAuswahlCount" class="alert alert-success margin-left-15 hide">
        <i class="icon-check"></i><span class="padding-left-5 bold"></span>
    </span>
</h4> 
<label id="count" style="display: none"></label>
@Html.SpanAlert("Message")

@(Html.XTelerik()
    .XGrid<Fahrzeugbrief>()
    .Name(gridName)
    .XAjaxDataBinding("FahrzeugAuswahlAjaxBinding", "Equi")
    .Columns(columns =>
        {
            columns.XBound(c => c.Action)
                .ClientTemplate("<# if (data.IsMissing) { #> <span><i class='icon-bell margin-left-5'></i></span> <# } else { #><input type='checkbox' name='checkedRecords' <# if (data.IsSelected) { #> checked <# } #> value='<#= data.Fahrgestellnummer #>' onchange='OnSelectionChange_GridFahrzeugAuswahl($(this))' /> <# } #>")
                .HeaderTemplate("<input type='checkbox' id='uncheckAllRecords' onchange='GridFahrzeugAuswahl_OnAllSelectionChange($(this).is(\":checked\"))' />" +
                 "<i class='icon-remove cursor-pointer tooltips' data-original-title='" + Localize.MultiSelectUncheckAllFilteredItems + "' data-placement='right' id='uncheckAllRecords' onclick='GridFahrzeugAuswahl_OnAllSelectionChange(false)'></i>"
                )
                .Filterable(false);

            columns.XBound(c => c.Kennzeichen);
            columns.XBound(c => c.Fahrgestellnummer);
            columns.XBound(c => c.TechnIdentnummer).Visible(Model.TechnIdentnummerIsVisible);
            columns.XBound(c => c.Vertragsnummer);
            columns.XBound(c => c.Referenz1);
            columns.XBound(c => c.Referenz2);
            columns.XBound(c => c.StandortText);
            columns.XBound(c => c.Eingangsdatum).Format("{0:dd.MM.yyyy}");
            columns.XBound(c => c.Stilllegungsdatum).Format("{0:dd.MM.yyyy}");
        })

    .XAutoColumnConfiguration()
    .ClientEvents(events => events.XAutoClientEvents(gridName).OnLoad("OnLoad_GridFahrzeugAuswahl").OnRowDataBound("OnRowDataBound_GridFahrzeugAuswahl"))
    .XPageSize(10)
    .XSort(sortOrder => sortOrder.Add(c => c.Fahrgestellnummer).Ascending())

    .ToolBar(commands =>
        {
            commands.FilteredDataCommand("FahrzeugAuswahlExportFilteredExcel", "Equi").HtmlAttributes(new { @class = "hide btn mini gray tooltips excel a_btn_mini", data_original_title = "Excel Export", data_placement = "right" });
            commands.FilteredDataCommand("FahrzeugAuswahlExportFilteredPDF", "Equi").HtmlAttributes(new { @class = "hide btn mini gray tooltips pdf a_btn_mini", data_original_title = "PDF Export", data_placement = "right" });
        })
)


@(Html.Telerik().Window()
    .Name("CsvTemplateHint")
    .Visible(false)
    .Title("CSV Upload")
    .Modal(true)
    .Draggable(true)
    .Scrollable(false)
    .Width(600)
    .Height(300)
    .Content(@<text><div id="CsvTemplateHintDetail" class="margin-left-15 margin-right-15"></div></text>))

