@using CkgDomainLogic.Equi.ViewModels
@model DatenOhneDokumenteViewModel

<h3 class="page-title" id="headerTitle">@Localize.Equi_DatenOhneDokumente <small></small></h3>

@section LayoutScript { _controlGroupValidationType = "individual"; }

@Html.SpanAlert("spanAlertDatenOhneDokumente")

<div id="divDatenOhneDokumenteFilter" class="form-horizontal label-width-100">
    @Html.FormRadioButtonListFor(m => m.DatenFilter.Selektion, Model.DatenFilter.Selektionstypen.ToSelectList())
</div>

<div id="divDatenOhneDokumenteGrid">
    @Html.Partial("DatenOhneDokumente/DatenOhneDokumenteGrid", Model)
</div>

<script type="text/javascript">

    var ladeHinweis = '@Localize.LoadingData';
    var selectedVinsDatenOhneDokumente;

    function InitGridSelectionPersister() {
        // Selektion merken (wichtig bei Paging etc.)
        $('#GridDatenOhneDokumente').on('change', ':checkbox[name=cbxCheckRow]', function (e) {
            var cbx = $(this);
            var grid = $('#GridDatenOhneDokumente').data("tGrid");
            var vin = grid.dataItem(cbx.closest('tr')).Fahrgestellnummer;
            if (cbx.is(':checked')) {
                selectedVinsDatenOhneDokumente.push(vin);
            } else {
                selectedVinsDatenOhneDokumente = $.grep(selectedVinsDatenOhneDokumente, function (item, index) {
                    return item != vin;
                });
            }
        });
    }

    function FormPreparePrivate() {
        GridAllColumnFilterApplyToGrid("GridDatenOhneDokumente");
        selectedVinsDatenOhneDokumente = [];
        InitGridSelectionPersister();

        $('#divDatenOhneDokumenteFilter').on('change', ':radio', function (e) {
            FilterDatenOhneDokumenteData();
        });
    }

    function FormPreparePrivateAjax() {
        FormPrepareAjax();
    }

    function GetGrid() {
        return $("#GridDatenOhneDokumente").data("tGrid");
    }

    function GridLoadingHide() {
        // needed for chrome browser: Explicitely hide grids loading icon on multiple subsequent grid ajax requests (because of filter control initializing)
        setTimeout('$("#GridDatenOhneDokumenteItems .t-grid-pager .t-status .t-icon").removeClass("t-loading")', 500);
    }

    function GridRefresh() {
        GetGrid().ajaxRequest();
    }

    function OnDataBound_GridDatenOhneDokumente() {
        // Selektion rekonstruieren
        $('#GridDatenOhneDokumente :checkbox[name=cbxCheckRow]').each(function () {
            var cbx = $(this);
            var vin = $('#GridDatenOhneDokumente').data("tGrid").dataItem(cbx.closest('tr')).Fahrgestellnummer;
            cbx.attr('checked', jQuery.inArray(vin, selectedVinsDatenOhneDokumente) > -1);
        });

        FilteredData_Grid_OnDataBound($(this));
        $('.tooltips').tooltip();
    }

    function OnLoad_GridDatenOhneDokumente() {
        $('.t-no-data td').text(ladeHinweis);
    }

    function OnColumnShowHide_GridDatenOhneDokumente() {
        FilteredData_Grid_OnColumnShowHide($(this));
    }

    function OnColumnReorder_GridDatenOhneDokumente() {
        FilteredData_Grid_OnColumnReorder($(this));
    }

    function ApplyDatenOhneDokumenteGridPartialView(result) {
        $("#divDatenOhneDokumenteGrid").html(result);
        GridAllColumnFilterApplyToGrid("GridDatenOhneDokumente");
        InitGridSelectionPersister();
    }

    function FilterDatenOhneDokumenteData() {
        $.ajax({
            type: "POST",
            url: "FilterDatenOhneDokumenteData",
            data: { Selektionsfilter: $(':radio[name="DatenFilter.Selektion"]:checked').val() },
            success: function (result) {
                FormPreparePrivateAjax();
                GridRefresh();
            }
        });
    }

    function SaveDatenOhneDokumente(mode) {
        $.ajax(
        {
            type: "POST",
            url: "SaveDatenOhneDokumente",
            loadingShow: true,
            data: { mode: mode, selectedItems: JSON.stringify(selectedVinsDatenOhneDokumente) },
            success: function (result) {
                ApplyDatenOhneDokumenteGridPartialView(result);
                if (_modelStateValid == 'true') {
                    var successMessage = '@Localize.SaveSuccessful.ToJavascriptString()';
                    SpanAlertSuccess("spanAlertDatenOhneDokumente", successMessage, 1800);
                }
                FormPreparePrivateAjax();
            },
            error: function (result) {
                SpanAlertWarning("spanAlertDatenOhneDokumente", result.data, 5000);
            }
        });

        return false;
    }

</script>
