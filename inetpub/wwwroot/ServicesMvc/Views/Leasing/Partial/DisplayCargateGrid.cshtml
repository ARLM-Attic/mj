@using CkgDomainLogic.Leasing.Models
@(Html.Telerik()
      .Grid<CargateDisplayModel>()
      .Name("GridCargateAnzeige")
      .DataBinding(dataBinding => dataBinding.Ajax().Select("DisplayCargateAjaxBinding", "Leasing"))
      .XAjaxDataBinding("DisplayCargateAjaxBinding", "Leasing")
      .ClientEvents(events => events.XAutoClientEvents("GridCargateAnzeige").OnRowDataBound("OnRowDataBound_GridCargateAnzeige"))
      .XToolBar("Leasing")
      .Columns(columns =>
      {
          columns.XBound(c => c.VorgangsId);
          columns.XBound(c => c.VertragsNrHla);
          columns.XBound(c => c.FahrgestellNr);
          columns.XBound(c => c.Standort);
          columns.XBound(c => c.Prozess);
          columns.XBound(c => c.BeauftragungRuecknahme).Format("{0:dd.MM.yyyy}");
          columns.XBound(c => c.WunschLieferDatum).Format("{0:dd.MM.yyyy}");
          columns.XBound(c => c.VereinbarungRuecknahmeTermin).Format("{0:dd.MM.yyyy}");
          columns.XBound(c => c.RuecknahmeFahrzeug).Format("{0:dd.MM.yyyy}");
          columns.XBound(c => c.BereitstellungRuecknahmeProtokoll).Format("{0:dd.MM.yyyy}");
          columns.XBound(c => c.UebergabeFahrzeug).Format("{0:dd.MM.yyyy}");
          columns.XBound(c => c.GutachtenErstellen);
          columns.XBound(c => c.BeauftragungGutachten).Format("{0:dd.MM.yyyy}");
          columns.XBound(c => c.BereitstellungUebergabeProtokoll).Format("{0:dd.MM.yyyy}");
          columns.XBound(c => c.AbmeldungFahrzeug).Format("{0:dd.MM.yyyy}");
          columns.XBound(c => c.BereitstellungFahrzeug).Format("{0:dd.MM.yyyy}");
          columns.XBound(c => c.BereitstellungGutachten).Format("{0:dd.MM.yyyy}");
          columns.XBound(c => c.VerwertungsEntscheidung);
          columns.XBound(c => c.BereitstellungInserat).Format("{0:dd.MM.yyyy}");
          columns.XBound(c => c.BeauftragungAufbereitung).Format("{0:dd.MM.yyyy}");
          columns.XBound(c => c.AufbereitungFertig).Format("{0:dd.MM.yyyy}");
          columns.XBound(c => c.AusgangPlatz).Format("{0:dd.MM.yyyy}");
          columns.XBound(c => c.ServiceLevel2_3);
          columns.XBound(c => c.ServiceLevel5_7);
          columns.XBound(c => c.ServiceLevel7_14);
          columns.XBound(c => c.ServiceLevel8_16);
          columns.XBound(c => c.ServiceLevel2_7);
          columns.XBound(c => c.ServiceLevel19_21);
      })
      
        .Groupable(g => g.Enabled(true))
        .Filterable(g => g.Enabled(true))
        .Sortable(g => g.Enabled(true))
        .Reorderable(r => r.Columns(true))
        .Resizable(r => r.Columns(true))
        .ColumnContextMenu()
        .Pageable(paging => paging.PageSize(10))
        .ToolBar(commands =>
        {
            commands.FilteredDataCommand("ExportCsvUploadFilteredExcel", "Leasing");
            commands.FilteredDataCommand("ExportCsvUploadFilteredPdf", "Leasing");
        })
    )
