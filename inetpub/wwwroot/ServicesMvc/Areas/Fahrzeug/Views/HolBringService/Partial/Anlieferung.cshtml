@using CkgDomainLogic.Fahrzeuge.ViewModels
@model CkgDomainLogic.Fahrzeuge.Models.HolBringService.Anlieferung 

@{
    var dropDownHourList = (List<HolBringServiceViewModel.DropDownTimeItem>)ViewData["DropDownHourList"];
    var dropDownMinuteList = (List<HolBringServiceViewModel.DropDownTimeItem>)ViewData["DropDownMinuteList"];
}

<div id="DivAbholung" class="margin-top-20">
    @using (Ajax.BeginForm("Anlieferung", "HolBringService", null,
                new MvcAjaxOptions { UpdateTargetId = "DivAnlieferung", OnComplete = "AjaxFormAnlieferungComplete();" },
                    htmlAttributes: new { @class = "form-horizontal", id = "AjaxFormAnlieferung" }))
    {
        @Html.FormValidationSummary()
        @Html.Hidden("formSubmit", "ok")

        <div class="row-fluid">
            <div class="span6 ">
                @Html.FormTextBoxFor(m => m.AnlieferungKunde, new { @class = "m-wrap " })
                @Html.FormTextBoxFor(m => m.AnlieferungStrasseHausNr, new { @class = "m-wrap " })
        
                @Html.FormTextBoxFor(m => m.AnlieferungPlz, new { @class = "m-wrap xsmall" })
                @Html.FormTextBoxFor(m => m.AnlieferungOrt, new { @class = "m-wrap " })
                @Html.HiddenFor(m => m.Land, new { @class = "m-wrap medium" })

                @*<div class="control-group">
                    <label class="control-label">PLZ / Ort</label>
                    <div class="controls">
                        @Html.TextBoxFor(m => m.AnlieferungPlz, new { @class = "m-wrap xsmall" })
                        @Html.TextBoxFor(m => m.AnlieferungOrt, new { @class = "m-wrap small" })
                    </div>
                </div>*@

            </div>
            
            <div class="span6 ">
                @Html.FormTextAreaFor(m => m.AnlieferungHinweis, new { @class = "m-wrap" }, rows: 9)
            </div>
        </div>
            @Html.FormTextBoxFor(m => m.AnlieferungAnsprechpartner, new { @class = "m-wrap ", col = "left" })
            @Html.FormTextBoxFor(m => m.AnlieferungTel, new { @class = "m-wrap ", col = "right" })
        
        <div class="control-group">
            <label class="control-label">Abholung ab</label>
            <div class="controls">
                @Html.DropDownListFor(m => m.AbholungAbUhrzeitStunden, dropDownHourList.ToSelectList(), new { @class = "dropdownwidth transporttime" })
                @Html.DropDownListFor(m => m.AbholungAbUhrzeitMinuten, dropDownMinuteList.ToSelectList(), new { @class = " dropdownwidth transporttime" })
                
                <div class="input-append datepickerX">
                    <input id="AnlieferungDatum" name="AnlieferungDatum" type="text" class="m-wrap small " />
                    <span class="add-on">
                        <i class="icon-calendar"></i>
                    </span>
                </div>
            </div>
        </div>
        
        <div class="control-group">
            <label class="control-label">Anlieferung bis</label>
            <div class="controls">
                @Html.DropDownListFor(m => m.AnlieferungBisUhrzeitStunden, dropDownHourList.ToSelectList(), new { @class = "dropdownwidth transporttime" })
                @Html.DropDownListFor(m => m.AnlieferungBisUhrzeitMinuten, dropDownMinuteList.ToSelectList(), new { @class = " dropdownwidth transporttime" })
            </div>
        </div>

        <div id="DivTransportTimeInfo" class="alert margin-top-20 alert-danger">Anlieferung darf nicht vor Abholung liegen</div>
        
        @Html.FormCheckBoxFor(m => m.AnlieferungMobilitaetsfahrzeug, new { @class = "m-wrap", col = "left" }, labelHidden: true, postControlHtml: @<text><label class="checkbox">Mobilitätsfahrzeug</label></text>)

        <script type="text/javascript">
            _modelIsValid = @ViewContext.ViewData.ModelState.IsValid.ToString().ToLower();
        </script>
        }
    </div>
    
<script>

    $(function () {
        // feiertageAsString = "14.07.2015,15.07.2015";

        ShowHideTransportTimeInfo();

        $("#AnlieferungDatum").datepicker({
            minDate: new Date(2015, 5, 1),
            beforeShowDay: function (date) {
                var dateIsSelectable = !(date.getDay() == 0 || date.getDay() == 6);     // Keine Wochenenden

                if (dateIsSelectable) // Datum ab heute
                    dateIsSelectable = (date >= Date.today());

                var istFeiertag = feiertageAsString.indexOf(date.toString(dateFormat)) >= 0;
                if (dateIsSelectable)
                    dateIsSelectable = !istFeiertag;
                return [dateIsSelectable, ""];
            }
        });

        $(".transporttime").change(function () {
            ShowHideTransportTimeInfo();
        });

        function ShowHideTransportTimeInfo() {
            var result = true;

            var fromHour = parseInt($('#AbholungAbUhrzeitStunden').val());
            var fromMinute = parseInt($('#AbholungAbUhrzeitMinuten').val());

            var toHour = parseInt($('#AnlieferungBisUhrzeitStunden').val());
            var toMinute = parseInt($('#AnlieferungBisUhrzeitMinuten').val());

            var fromTime = (fromHour * 100) + fromMinute;
            var toTime = (toHour * 100) + toMinute;

            if (fromTime > toTime) {
                result = false;
            }

            if (result == true) {
                $('#DivTransportTimeInfo').addClass('hidden');
            } else {
                $('#DivTransportTimeInfo').removeClass('hidden');
            }

        }

    })
</script>