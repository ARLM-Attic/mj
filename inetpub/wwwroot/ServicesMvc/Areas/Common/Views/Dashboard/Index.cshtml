@model CkgDomainLogic.DomainCommon.ViewModels.DashboardViewModel

@Html.Partial("Partial/Common")

<h3 class="page-title">Dashboard <small>Charts</small>

    <li class="dropdown user dashboard-dropdown-menu">
        <a href="#" class="dropdown-toggle" data-toggle="dropdown">
            <span id="badgeVisibleItemsCount" class="badge">@Model.HiddenDashboardItems.Count</span>
            <i class="icon-bar-chart"></i>
            <i class="icon-angle-down"></i>
        </a>
        <ul class="dropdown-menu">
            
            @{ var cssClassEmptyItem = (@Model.HiddenDashboardItems.None() ? "" : "hide"); }
            <li id="li_dropdown_empty" class="@cssClassEmptyItem"><a href="#" onclick="return false;"><i class="icon-bar-chart"></i> (aktuell keine Einträge zum Einblenden verfügbar) </a></li>
            
            @foreach (var dashBoardItem in Model.DashboardItems)
            {
                var cssClass = (dashBoardItem.IsUserVisible ? "hide" : "");

                <li id="li_dropdown_@dashBoardItem.ID" class="@cssClass"><a href="#" onclick="return ShowDashboardItem(@dashBoardItem.ID, '@dashBoardItem.ItemKey', '@dashBoardItem.Title', '@JSon.Serialize(dashBoardItem.Options)')"><i class="icon-bar-chart"></i> @dashBoardItem.Title </a></li>
            }

        </ul>
    </li> 
</h3>

@foreach (var dashBoardItem in Model.DashboardItems)
{
    <a class="hide margin-right-10" id="report_href_@dashBoardItem.ID" target="report_@dashBoardItem.ID" href="ShowReportForDashboardItem?id=@dashBoardItem.ID&token=@Guid.NewGuid()">Report @dashBoardItem.ID</a>
}

<ul id="myDashboard">
</ul>

<script type="text/javascript">
    var _dashboardJson = [];
</script>
@foreach (var dashBoardItem in Model.VisibleSortedDashboardItems)
{
    <script type="text/javascript">

        var wWidgetOptionsAsString = "@JSon.Serialize(dashBoardItem.Options)";
        wWidgetOptionsAsString = wWidgetOptionsAsString.replace(/&quot;/g, "\"");
        var widgetOptions = jQuery.parseJSON(wWidgetOptionsAsString);

        _dashboardJson.push(
            {
                widgetKey: "@dashBoardItem.ItemKey",
                widgetTitle: "@dashBoardItem.Title",
                widgetId: "id_@dashBoardItem.ID",
                widgetType: "chart",
                enableRefresh: true,
                refreshCallBack: function (widgetId) {
                    return _dashboardData;
                },
                widgetOptions: widgetOptions,
                widgetContent: {
                    data: null,
                    options: null
                }
            }
        );
    </script>
}

<script type="text/javascript">

    var _dashboardChainIndex = 0;

    function FormPreparePrivate() {
        FormPrepareDashboard();
    }

    function FormPreparePrivateAjax() {
        FormPrepareAjax();
    }

    var _dashboardData = { data: null, options: null, dashboardItemOptions: null };

    function FormPrepareDashboard() {

        //basic initialization example
        $("#myDashboard").sDashboard({
            dashboardData: _dashboardJson
        });

        DashboardChainInit();
    }

    function DashboardChainInit() {

        var dashboardWidgets = $("#myDashboard li");
        _dashboardChainIndex = 0;

        $.each(dashboardWidgets, function (i, elem) {
            var widgetId = "#" + $(elem).attr("id");
            var busyHintDiv = $(widgetId + " .sDashboardWidgetContentBusyHint");
            showBusy(busyHintDiv, 0, 0);
        });

        DashboardChainExecute(dashboardWidgets);
    }

    function DashboardChainExecute(dashboardWidgets) {

        if (_dashboardChainIndex >= dashboardWidgets.length)
            return;

        var widget = dashboardWidgets.eq(_dashboardChainIndex);
        var widgetId = "#" + widget.attr("id");
        var busyHintDiv = $(widgetId + " .sDashboardWidgetContentBusyHint");

        $.ajax(
            {
                type: "POST",
                url: "GetChartData",
                data: { id: widgetId, clearDataCache: false },
                loadingShow: false,
                success: function (result) {

                    var isChart = (typeof (result.data) !== "undefined");

                    if (!isChart) {
                        $(widgetId + " .sDashboardChart").html(result);
                    }
                    else {
                        _ChartPrepareJsonResult(result, $(widgetId).data("widgetDefinition").widgetKey);
                        _dashboardData.data = _chartData;
                        _dashboardData.options = _chartOptions;
                    }

                    hideBusy(busyHintDiv);
                    busyHintDiv.hide();

                    if (isChart)
                        $(widgetId + " .sDashboard-refresh-icon").trigger("click");

                    SetupWidgetToolbar(widgetId);

                    _dashboardChainIndex++;
                    setTimeout(function () { DashboardChainExecute(dashboardWidgets); }, 200);
                }
            });
    }

    function SaveDashboardItems(numberOfItemsChanged) {

        var commaSeparatedIds = $.map($("#myDashboard li"), function (item) {
            return $(item).attr("id").replace(/id_/g, "");
        }).join(",");

        $.ajax(
            {
                type: "POST",
                url: "DashboardItemsSave",
                data: { commaSeparatedIds: commaSeparatedIds },
                loadingShow: false,
                success: function (result) {
                    $("#badgeVisibleItemsCount").html(result.hiddenItemsCount);

                    if (numberOfItemsChanged){
                        $(".badge").toggle("highlight", function () {
                            $(".badge").show();
                        });

                        if (result.hiddenItemsCount == 0)
                            $("#li_dropdown_empty").show();
                        else
                            $("#li_dropdown_empty").hide();
                    }
                }
            });

        return false;
    }

    function ShowDashboardItem(id, key, title, wWidgetOptionsAsString) {

        AddWidget(id, key, title, wWidgetOptionsAsString);

        return false;
    }

    function AddWidget(rawWidgetId, widgetKey, widgetTitle, wWidgetOptionsAsString) {

        var widgetOptions = jQuery.parseJSON(wWidgetOptionsAsString);

        $("#myDashboard").sDashboard("addWidget",
            {
                widgetKey: widgetKey,
                widgetTitle: widgetTitle,
                widgetId: "id_" + rawWidgetId,
                widgetType: "chart",
                enableRefresh: true,
                refreshCallBack: function () {
                    return _dashboardData;
                },
                widgetOptions: widgetOptions,
                widgetContent: {
                    data: null,
                    options: null,
                    dashboardItemOptions: null
                }
            });

        ShowWidget(rawWidgetId);

        return false;
    }

    function ShowWidget(rawWidgetId, clearDataCache, afterRefreshFunction) {

        clearDataCache = clearDataCache || false;

        var widgetId = "#id_" + rawWidgetId;
        var busyHintDiv = $(widgetId + " .sDashboardWidgetContentBusyHint");
        busyHintDiv.show();
        showBusy(busyHintDiv, 0, 0);

        $.ajax(
            {
                type: "POST",
                url: "GetChartData",
                data: { id: "#id_" + rawWidgetId, clearDataCache: clearDataCache },
                loadingShow: false,
                success: function (result) {

                    var isChart = (typeof (result.data) !== "undefined");

                    if (!isChart) {
                        $(widgetId + " .sDashboardChart").html(result);
                    }
                    else {
                        _ChartPrepareJsonResult(result, $(widgetId).data("widgetDefinition").widgetKey);
                        _dashboardData.data = _chartData;
                        _dashboardData.options = _chartOptions;
                    }

                    if (isChart)
                        $(widgetId + " .sDashboard-refresh-icon").trigger("click");

                    if (!clearDataCache)
                        SetupWidgetToolbar(widgetId);

                    hideBusy(busyHintDiv);
                    busyHintDiv.hide();

                    if (typeof(afterRefreshFunction) !== 'undefined')
                        afterRefreshFunction();
                }
            });
    }

    function SetupWidgetToolbar(widgetId) {
        var rawId = widgetId.replace(/#id_/g, "");

        var widgetDefinition = $(widgetId).data("widgetDefinition");
        var isPartialView = widgetDefinition.widgetOptions.IsPartialView;
        var settingsScriptFunction = widgetDefinition.widgetOptions.SettingsScriptFunction;

        if (isPartialView) {
            if (settingsScriptFunction !== null && settingsScriptFunction !== '') {
                //console.log(widgetDefinition.widgetOptions);
                var settingsButton = $("<a class='dashboard-toolbar-item' onclick='return " + settingsScriptFunction +  "($(this), \"" + widgetId + "\");' href='#' title='Einstellungen ändern ...'><img class='dashboard-item-settings' src='/ServicesMvc/Images/Commands/dashboard-item-settings.png'></a>");
                settingsButton.attr("href", $("#settings_href_" + rawId).attr("href"));
                settingsButton.attr("target", $("#settings_href_" + rawId).attr("target"));
                settingsButton.insertAfter($(widgetId + " .sDashboardWidgetHeader .sDashboard-remove-icon"));
            }
        }
        else
        {
            var printButton = $("<a class='dashboard-toolbar-item' href='#' title='Report öffnen'><i class='icon-stack-overflow'></i></a>");
            printButton.attr("href", $("#report_href_" + rawId).attr("href"));
            printButton.attr("target", $("#report_href_" + rawId).attr("target"));
            printButton.insertAfter($(widgetId + " .sDashboardWidgetHeader .sDashboard-remove-icon"));
        }

        var refreshButton = $("<a class='dashboard-toolbar-item' href='#' onclick='return DashboardWidgetClearCacheAndReload(" + rawId + ")' title='Widget aktualisieren'><i class='icon-refresh'></i></a>");
        refreshButton.insertAfter($(widgetId + " .sDashboardWidgetHeader .sDashboard-remove-icon"));
    }

    function DashboardWidgetClearCacheAndReload(id) {
        ShowWidget(id, true, function() {
            var anchor = $("#id_" + id + " .sDashboardWidgetContent .sDashboardWidgetContentBusyHint");
            var hint = $("<div></div>").addClass("alert").addClass("alert-success").addClass("dashboard-widget-hint").text("Widget erfolgreich aktualisiert!");
            hint.insertBefore(anchor);
            setTimeout(function() {
                hint.remove();
            }, 2000);
        });

        return false;
    }

    function DashboardWidgetEventAdd(id) {
        $("#li_dropdown_" + id).hide();
        SaveDashboardItems(true);
    }

    function DashboardWidgetEventRemove(id) {
        $("#li_dropdown_" + id).show();
        SaveDashboardItems(true);
    }

    function DashboardWidgetEventOrderChanged(id) {
        SaveDashboardItems(false);
    }

</script>
