@model CkgDomainLogic.DomainCommon.ViewModels.WeatherViewModel

@{ var _widgetCount = 3; }

<style type="text/css">
    
    .weather-widget {
        display: table;
        float: none;
        margin: 0 0 10px 0;
    }
    .wd-content {
        height: 200px;    
    }

    .wd-day {
        float: left;
        font-size: 0.7em;
        display: inline-block;
        margin: 5px 0 15px 20px;
        text-align: center;
    }
    #wd-0 .wd-day {
        margin-left: 0;
    }

    .day-info {
        margin: 0 0 2px 0;
    }
    .day-info div.day {
        font-size: 1.0em;
        color: #808080!important;
    }
    .day-info div.wkday {
        font-size: 1.3em;
        font-weight: bold;
        margin: 0 0 0 0;
    }

    .temp-info {
        margin: 0 0 -7px 0;
    }
    .temp-info hr {
        margin: -1px 0 -3px -1px; 
    }
    .temp-info div.tlabel {
        color: #808080!important;
        display: inline-block;
        font-size: 0.95em;
        width: 6px;
        text-align: left;
    }
    .temp-info div.tlabel-degree {
        display: inline-block;
        vertical-align: 2px;
        font-size: 1.5em;
    }
    .temp-info div.celsius {
        display: inline-block;
        width: 30px;
        text-align: right;
        font-weight: bold;
        font-size: 1.5em;
    }
    .temp-info div {
        color: green;
    }
    .temp-info div.leq-zero * {
        color: blue;
    }

</style>


<h3 class="page-title">Weather <small>Widget</small></h3>

@for (var i = 0; i < _widgetCount; i++)
{
    <div id="weather-widget-@i" class="weather-widget">
        <div class="form-horizontal selection-div">

            <div class="control-group">
                <label class="control-label">@Localize.City</label>
                <div class="controls">
                    <input class="m-wrap medium tb-city" type="text" value="">
                </div>
            </div>

        </div>

        <div class="wd-content">
        </div>
    </div>
}


<div id="wd-template" class="hide">
    <div class="wd-day">

        <div class="day-info">
            <div class="day">
            </div>
            <div class="wkday">
            </div>
        </div>

        <div class="temp-info">
            <div class="max-info">
                <div class="tlabel">max</div> <div class="celsius"></div><div class="tlabel-degree">°</div>
            </div>
            <hr />
            <div class="min-info">
                <div class="tlabel">min</div> <div class="celsius"></div><div class="tlabel-degree">°</div>
            </div>
        </div>

        <div class="picture">
            <img src="" />
        </div>

    </div>
</div>


<script type="text/javascript">


    function FormPreparePrivate() {
        InitControls();

        //PrepareWeatherWidget("hamburg,de");
        //PrepareWeatherCityDropdown(_country);
    }

    function FormPreparePrivateAjax() {
        FormPrepareAjax();
    }

    function InitControls() {
        $.each($(".weather-widget .tb-city"), function (index, tbCity) {
            InitControl($(tbCity), index);
        });
    }

    function InitControl(tbCity, index)
    {
        //var tbCity = $("#tb-city");
        //console.log(tbCity);
        if (index == 0)
            tbCity.focus();

        tbCity.on("keyup", function (e) {
            //console.log(e.keyCode);

            if (e.keyCode === 13) {
                PrepareWeatherWidget(tbCity.val(), index);
            }

            var autoCompleteMinLength = 3;

            if (tbCity.val().length < autoCompleteMinLength && tbCity.data('ui-autocomplete') != undefined) {
                tbCity.autocomplete("destroy");
                tbCity.removeData("autocomplete");
            }

            if (tbCity.val().length >= autoCompleteMinLength && tbCity.data('ui-autocomplete') == undefined)
            {
                if (!tbCity.data('insideAutoComplete')) {
                    tbCity.data('insideAutoComplete', true);
                    $.ajax({
                        type: "POST",
                        url: "PrepareWeatherCityDropdown",
                        data: { city: tbCity.val() },
                        success: function (result) {
                            //console.log(result.data.length);
                            InitAutoComplete(tbCity, result.data);
                        }
                    });
                }
            }
        });

        setTimeout(function () {
        }, 100);
    }

    function InitAutoComplete(tb, items) {
        tb.autocomplete({
            minLength: 2,
            source: items
        });
        tb.autocomplete("enable");
        if (tb.val() !== "")
            tb.autocomplete("search");

        tb.data('insideAutoComplete', false);
    }

    function OnCityChanged(city) {
        alert(city);
    }

    function PrepareWeatherWidget(city, index) {

        var imagePath = '@Url.ContentArea("Content/Weather/images/")';
        var widgetId = "#weather-widget-" + index;

        $(widgetId + " .wd-content").html("");

        $.ajax(
        {
            type: "POST",
            url: "PrepareWeatherWidget",
            data: { city: city },
            loadingShow: false,
            success: function (result) {

                for (var i = 0; i < result.data.list.length; i++) {
                    var wd = result.data.list[i];
                    //console.log(wd);

                    var content = $("#wd-template").clone();
                    content.removeClass("hide");

                    var subId = ((index * 100) + i);
                    content.attr("id", "wd-" + subId);
                    $(widgetId + " .wd-content").append(content);

                    var minTemperature = toCelsiusTemperature(wd.main.temp_min) - 0;
                    var maxTemperature = toCelsiusTemperature(wd.main.temp_max) + 0;

                    $("#wd-" + subId + " .wd-day .day-info div.day").html(wd.dateHeaderTop);
                    $("#wd-" + subId + " .wd-day .day-info div.wkday").html(wd.dateHeaderBottomBold);

                    $("#wd-" + subId + " .wd-day .min-info div.celsius").html(minTemperature).parent().addClass(minTemperature <= 0 ? "leq-zero" : "");
                    $("#wd-" + subId + " .wd-day .max-info div.celsius").html(maxTemperature).parent().addClass(maxTemperature <= 0 ? "leq-zero" : "");

                    $("#wd-" + subId + " .wd-day .picture img").attr("src", imagePath + wd.weatherFirst.icon + ".png");
                }

                $(widgetId + " .wd-content").removeClass("hide");
            }
        });

        return false;
    }

    function toCelsiusTemperature(kelvin) {
        var celsius = Math.round(parseFloat(kelvin)) - 273.0;

        return celsius;
    }

</script>
