@using CkgDomainLogic.DomainCommon.Models
@using DocumentFormat.OpenXml.Wordprocessing
@using GeneralTools.Resources
@{
    var gridName = "GridAdresse";
    var currentController = ViewContext.RouteData.GetRequiredString("controller");
    var addressSelectorAvailable = (bool)(ViewData["AddressSelectorAvailable"] ?? false);
    var backButtonAvailable = (bool)(ViewData["BackButtonAvailable"] ?? false);
    var zulassungAvailable = (bool)(ViewData["ZulassungAvailable"] ?? false); 
}

<div class="portlet">
    <div id="divGridEditStart">

        <h4>
            <span>@Localize.PleaseChooseOneOrMoreVehicles</span>
            <span id="AdressenAuswahlCount" class="alert alert-success margin-left-15 hide">
                <i class="icon-check"></i><span class="padding-left-5 bold"></span>
            </span>
        </h4>


        @(Html.Telerik()
              .Grid<Adresse>()
                .Name(gridName)

                .XAjaxDataBinding("AdressenAjaxBinding", currentController)
                .Columns(columns =>
                {
                    columns.XBound(c => c.KundenNr).Width(145).Title("").Filterable(false).Sortable(false)                    
                    .ClientTemplate(                  
                         "<input type='checkbox' name='checkedRecords' <# if (data.IsSelected) { #> checked <# } #> value='<#= data.KundenNr #>' onchange='OnSelectionChange_GridAdresse($(this))' />" +
                            (!addressSelectorAvailable ?
                                    "" : "<a href='#' onclick='return AddressSelect(\"<#= data.KundenNr #>\");' class='btn mini blue margin-right-5 tooltips' data-original-title='" + CommonResources.PickAddress + "' data-placement='right'><i class='halflings-icon white ok'></i></a>")
                              + "<a href='#' onclick='return AddressEdit(\"<#= data.KundenNr #>\");' class='btn mini gray tooltips' data-original-title='" + CommonResources.EditAddress + "' data-placement='right'><i class='halflings-icon white pencil'></i></a>"
                              + (!zulassungAvailable ?
                                    "" : "<a href='../../autohaus/zulassung/index?halterNr=<#= data.KundenNr #>' class='btn mini gray margin-left-10 tooltips' data-original-title='" + Localize.VehicleRegister + "' data-placement='right'><i class='halflings-icon white tag'></i></a>")
                        ).HeaderTemplate(
                         "<span class='tooltips' data-original-title='" + Localize.MultiSelectCheckAllFilteredItems + "' data-placement='right'><input type='checkbox' id='checkAllRecords' onchange='GridAdresse_OnAllSelectionChange($(this))' /></span>" +
                            (backButtonAvailable ?
                                "<a href='#' onclick='return ClosePartnerAddressGrid();' class='btn mini black margin-right-5 tooltips' data-original-title='" + Localize.Back + "' data-placement='right'><i class='halflings-icon white chevron-left'></i></a>" : "")
                            + "<a href='#' onclick='return AddressNew();' class='btn mini black tooltips' data-original-title='" + CommonResources.NewAddress + "' data-placement='right'><i class='halflings-icon white plus'></i></a>"
                        );

                    columns.XBound(c => c.KundenNr);
                    columns.XBound(c => c.Name1);
                    columns.XBound(c => c.Name2);
                    columns.XBound(c => c.StrasseHausNr);
                    columns.XBound(c => c.PLZ);
                    columns.XBound(c => c.Ort);
                    columns.XBound(c => c.Land);
                    columns.XBound(c => c.Email);
                    columns.XBound(c => c.Iban);
                })
                .XAutoColumnConfiguration()
                .ClientEvents(events => events.XAutoClientEvents(gridName))
                .XPageSize(10)
                .XSort(sortOrder => sortOrder.Add(c => c.Name1).Ascending())
                .ToolBar(commands =>
                {
                    commands.FilteredDataCommand("ExportFilteredExcel", currentController).HtmlAttributes(new { @class = "hide btn mini gray tooltips a_btn_mini excel", data_original_title = "Excel Export", data_placement = "right" });
                    commands.FilteredDataCommand("ExportFilteredPDF", currentController).HtmlAttributes(new { @class = "hide btn mini gray tooltips a_btn_mini pdf", data_original_title = "PDF Export", data_placement = "right" });
                })
              )

    </div>
</div>

<div id="divGridItemDetails"></div>




