@using CkgDomainLogic.Autohaus.Models
@using CkgDomainLogic.Fahrzeugbestand.Models
@model Fahrzeugdaten
@{
    var isMassenzulassung = Convert.ToBoolean(ViewData["IsMassenzulassung"]) || Convert.ToBoolean(Request["IsMassenzulassung"]);    // MMA Info, ob Massenzulassung oder nicht, wird mit InputForm "IsMassenzulassung" über Ajax.BeginForm hinweg durchgeschleift
    var isMassenabmeldung = Convert.ToBoolean(ViewData["IsMassenabmeldung"]) || Convert.ToBoolean(Request["IsMassenabmeldung"]);   
    
    if (isMassenzulassung) { Model.FahrgestellNr = "MASSENZULASSUNG"; }
    if (isMassenabmeldung) { Model.FahrgestellNr = "MASSENABMELDUNG"; }
}
<script>
    
    _modelIsValid = @ViewContext.ViewData.ModelState.IsValid.ToString().ToLower();
    
    var _selectedItemsCount = 0;

    function AjaxFormFahrzeugdatenComplete() {
        FormPrepareAjax();
        if (_modelIsValid) {
            AjaxRequestNextStep();
            return;
        }
    }
    
//    function OnDataBound_GridFahrzeugAuswahl() {
//        alert(6);
//        FilteredData_Grid_OnDataBound($(this));
//        $('.tooltips').tooltip();
//        // prepare multi row selection
//        Grid_PrepareMultiRowSelected("GridFahrzeugAuswahlZulassung");
//    }
//    function OnColumnReorder_GridFahrzeugAuswahl() {
//        alert(5);
//        FilteredData_Grid_OnColumnReorder($(this));
//    }
//    function OnColumnShowHide_GridFahrzeugAuswahl() {
//        alert(4);
//        FilteredData_Grid_OnColumnShowHide($(this));
//    }
    
    function OnSelectionChange_GridFahrzeugAuswahl(cb) {
        Grid_FormatMultiRowSelected(cb);
        $.ajax({
            type: "POST",
            url: "FahrzeugAuswahlSelectionChanged",
            data: { vin: cb.val(), isChecked: cb.is(':checked') },
            loadingShow: false,
            success: function (result) {
                UpdateGridInfo(result.allSelectionCount);
            }
        });
    }
    
    // function GridFahrzeugAuswahl_OnAllSelectionChange(check) {        
    function OnAllSelectionChange_GridFahrzeugAuswahl(check) {        
        $.ajax({
            type: "POST",
            url: "FahrzeugAuswahlSelectionChanged",
            data: { vin: "", isChecked: check },
            loadingShow: true,
            success: function (result) {
                UpdateGridInfo(result.allSelectionCount);
                FilterGrid("GridFahrzeugAuswahl");
            }
        });
    }
    
    function UpdateGridInfo(count) {        
        if (count == 0) {
            $("#FahrzeugAuswahlCount").addClass('hide');
            $("#uncheckAllRecords").attr("checked", false);
            $.uniform.update($("#uncheckAllRecords"));
            return;
        }
        $("#FahrzeugAuswahlCount").removeClass('hide');
        $("#FahrzeugAuswahlCount > span").html('Sie haben ' + count + ' Fahrzeug' + (count == 1 ? '' : 'e') + ' ausgewählt!');
        $("#uncheckAllRecords").attr("checked", true);
        $.uniform.update($("#uncheckAllRecords"));
    }

    $(function() {        
        GridAllColumnFilterApplyToGrid("GridFahrzeugAuswahl");
    });
    
//    function OnLoad_GridFahrzeugAuswahl() {
//        alert("OnLoad_GridFahrzeugAuswahl");
//    }
    
    function OnDataBound_GridFahrzeugAuswahl() {
        FilteredData_Grid_OnDataBound($(this));
        $('.tooltips').tooltip();
        // prepare multi row selection
        App.initUniform();
        Grid_PrepareMultiRowSelected("GridFahrzeugAuswahl");
    }
    function OnRowDataBound_GridFahrzeugAuswahl(e) {
        $(e.row).addClass((e.row.sectionRowIndex % 2 == 0) ? "t-grid-selected" : "t-grid-selected-alt");
    }

</script>

<div id="DivFahrzeugdaten" class="margin-top-20">    
    @using (Ajax.BeginForm("FahrzeugdatenForm", "Zulassung", null,
                           new MvcAjaxOptions { UpdateTargetId = "DivFahrzeugdaten", OnComplete = "AjaxFormFahrzeugdatenComplete();" },
                           htmlAttributes: new { @class = "form-horizontal", id = "AjaxFormFahrzeugdaten" }))
    {
        @Html.FormValidationSummary()

        if (isMassenzulassung || isMassenabmeldung)
        {
            @Html.Hidden("IsMassenzulassung", isMassenzulassung)
            @Html.Hidden("IsMassenabmeldung", isMassenabmeldung)
            @Html.HiddenFor(m => m.Zb2Nr, new { @class = "m-wrap medium uppercase" })
            @Html.HiddenFor(m => m.FahrgestellNr, new { @class = "m-wrap medium uppercase", maxlength = 17 })

            @Html.FormTextBoxFor(m => m.AuftragsNr, new { @class = "m-wrap medium uppercase", col = "left" })
            @Html.FormTextBoxFor(m => m.VerkaeuferKuerzel, new { @class = "m-wrap small", col = "right" })

            @Html.FormTextBoxFor(m => m.BestellNr, new { @class = "m-wrap medium uppercase", col = "left" })
        
            @Html.HiddenFor(m => m.KostenstelleVisible)
            if (Model.KostenstelleVisible)
            {
                @Html.FormTextBoxFor(m => m.Kostenstelle, new { @class = "m-wrap small uppercase", col = "right" })
            }
            
            @Html.FormDropDownListFor(m => m.FahrzeugartId, Fahrzeugdaten.FahrzeugartList.ToSelectList(), new { @class = "m-wrap small" })
        }
        else
        {
            @Html.FormTextBoxFor(m => m.AuftragsNr, new { @class = "m-wrap medium uppercase", col = "left" })
            @Html.FormDropDownListFor(m => m.FahrzeugartId, Fahrzeugdaten.FahrzeugartList.ToSelectList(), new { @class = "m-wrap small", col = "right" })

            @Html.FormTextBoxFor(m => m.VerkaeuferKuerzel, new { @class = "m-wrap small", col = "left" })
            @Html.FormTextBoxFor(m => m.FahrgestellNr, new { @class = "m-wrap medium uppercase", maxlength = 17, col = "right" })

            @Html.FormTextBoxFor(m => m.BestellNr, new { @class = "m-wrap medium uppercase", col = "left" })
            @Html.FormTextBoxFor(m => m.Zb2Nr, new { @class = "m-wrap medium uppercase", col = "right" })

            @Html.HiddenFor(m => m.KostenstelleVisible)
            if (Model.KostenstelleVisible)
            {
                @Html.FormTextBoxFor(m => m.Kostenstelle, new { @class = "m-wrap medium uppercase" })
            }
        }
    }
    
    @if (isMassenzulassung || isMassenabmeldung)
    {
        using (@Html.PortletBox("Fahrzeugauswahl", "icon-table", "light-grey", false))
            {
                <h4>
                    <span id="FahrzeugAuswahlCount" class="alert alert-success margin-left-15 hide">
                        <i class="icon-check"></i><span class="padding-left-5 bold"></span>
                    </span>
                </h4>
            
                var gridName = "GridFahrzeugAuswahl";
                @(Html.Telerik()
                      .Grid<FahrzeugAkteBestand>()
                      .Name(gridName)
                      .XAjaxDataBinding("FahrzeugAuswahlAjaxBinding", "Zulassung")    // Vorausgewählte Fahrzeugliste anzeigen
                      .Columns(columns =>
                      {
                          columns.XBound(c => c.Aktion)
                        .ClientTemplate("<input type='checkbox' name='checkedRecords' <# if (data.IsSelected) { #> checked <# } #> value='<#= data.FIN #>' onchange='OnSelectionChange_GridFahrzeugAuswahl($(this))' />")
                        .HeaderTemplate(
                            "<span class='tooltips' data-original-title='" + Localize.MultiSelectCheckAllFilteredItems + "' data-placement='right'><input type='checkbox' id='checkAllRecords' onchange='OnAllSelectionChange_GridFahrzeugAuswahl(true)' /></span>" +
                            "<i class='icon-remove cursor-pointer tooltips' data-original-title='" + Localize.MultiSelectUncheckAllFilteredItems + "' data-placement='right' id='uncheckAllRecords' onclick='OnAllSelectionChange_GridFahrzeugAuswahl(false)'></i>"
                        ).Filterable(false);
                          //columns.XBound("")
                          //       .ClientTemplate("<input type='checkbox' class='checker' name='checkedRecords' <# if (data.IsSelected) { #> checked <# } #> value='<#= data.FIN #>' onchange='OnSelectionChange_GridFahrzeugAuswahl($(this))' />")
                          //       .HeaderTemplate("<input type='checkbox' id='uncheckAllRecords' onchange='OnAllSelectionChange_GridFahrzeugAuswahl($(this).is(\":checked\"))' />")
                          //       .Filterable(false);
                          columns.XBound(c => c.FIN);
                          columns.XBound(c => c.HandelsName);
                         columns.XBound(c => c.FahrzeugArt);
                      })
                      .XPageSize(10)
                      .ClientEvents(events => events.OnDataBound("OnDataBound_" + gridName).OnRowDataBound("OnRowDataBound_" + gridName))
                      .XSort(sortOrder => sortOrder.Add(c => c.FIN).Ascending())
                      .XToolBar(gridName)
                          )
            }
    }
    
</div>
