@using CkgDomainLogic.Autohaus.Models
@using CkgDomainLogic.Fahrzeugbestand.Models
@model Zulassungsdaten
@{
    var materialList = (List<Material>)ViewData["MaterialList"];
}

<style>
    .inputwidth {
        width: 100px;
    }
</style>

<div id="DivZulassungsdaten" class="margin-top-20">
    @using (Ajax.BeginForm("ZulassungsdatenForm", "Zulassung", null,
                new MvcAjaxOptions { UpdateTargetId = "DivZulassungsdaten", OnComplete = "AjaxFormZulassungsdatenComplete();" },
                    htmlAttributes: new { @class = "form-horizontal label-width-175", id = "AjaxFormZulassungsdaten" }))
    {
        @Html.FormValidationSummary()

        
        @Html.HiddenFor(m => m.ModusAbmeldung)
        @Html.HiddenFor(m => m.ZulassungskreisBezeichnung)

        if (Model.ModusAbmeldung)
        {
            @Html.HiddenFor(m => m.ZulassungsartMatNr)
            @Html.FormDatePickerFor(m => m.Abmeldedatum, new { @class = "m-wrap small" })
            @Html.HiddenFor(m => m.Zulassungskreis)

            @Html.FormTextBoxFor(m => m.Kennzeichen, new { @class = "m-wrap medium uppercase", @onkeypress = "return CleanUpKennzeichen();", col = "left" })
            @Html.FormCheckBoxFor(m => m.VorhandenesKennzeichenReservieren, new { @class = "m-wrap", col = "right" }, labelHidden: true)
        }
        else
        {
            @Html.FormDropDownListFor(m => m.ZulassungsartMatNr, materialList.ToSelectList(), new { @class = "m-wrap medium" })
            @Html.FormDatePickerFor(m => m.Zulassungsdatum, new { @class = "m-wrap small" })

            @Html.FormTextBoxFor(m => m.Zulassungskreis, new { @class = "m-wrap xsmall uppercase", @onchange = "return ZulassungskreisOnChange();" },
                                postControlHtml: @<text>
                                                        <a href="#" onclick="return LoadKfzKreisAusHalterAdresse()" class="btn white mini margin-left-10 margin-right-20"><i class="icon-chevron-left margin-right-5"></i> @Localize.LoadDistrictFromOwnerAddress</a>
                                                        @Html.SpanAlert("kfzKreisHint")
                                                    </text>)

            @Html.FormTextBoxFor(m => m.EvbNr, new { @class = "m-wrap small uppercase", maxlength = 7 })

            if (Model.IsMassenzulassung)
            {
                <div>MASSENZULASSUNG</div>
        
            var gridName = "GridFahrzeugAuswahlZulassung";
            @(Html.Telerik()
                .Grid<FahrzeugAkteBestand>()
                .Name(gridName)
                .XAjaxDataBinding("FahrzeugAuswahlAjaxBinding", "Zulassung")
                .Columns(columns =>
                {
                    columns.XBound(c => c.FIN);
                    columns.XBound(c => c.FahrzeugArt);
                    columns.XBound(c => c.HandelsName);
                    columns.XBound(c => c.WunschKennz1).ClientTemplate("<input id='WunschKennz1_<#= data.FIN #>' type='text' class='inputwidth uppercase' value='<#= data.WunschKennz1 #>' />"); ;
                    columns.XBound(c => c.WunschKennz2).ClientTemplate("<input id='WunschKennz2_<#= data.FIN #>' type='text' class='inputwidth uppercase' value='<#= data.WunschKennz2 #>' />"); ;
                    columns.XBound(c => c.WunschKennz3).ClientTemplate("<input id='WunschKennz3_<#= data.FIN #>' type='text' class='inputwidth uppercase' value='<#= data.WunschKennz3 #>' />"); ;
                    columns.XBound(c => c.ResKennz);
                    columns.XBound(c => c.ReservationNr);
                    columns.XBound(c => c.ReservationName);
                    columns.XBound(c => c.Evb).ClientTemplate("<input id='Evb_<#= data.FIN #>' type='text' class='inputwidth' value='<#= data.Evb #>' />");
                })

                .XAutoColumnConfiguration()
                .ClientEvents(events => events.XAutoClientEvents(gridName))
                .XPageSize(10)
                .XSort(sortOrder => sortOrder.Add(c => c.FIN).Ascending())
                  )
        
            }
            else
            {
                @Html.FormTextBoxFor(m => m.Kennzeichen, new { @class = "m-wrap medium uppercase", @onkeypress = "return CleanUpKennzeichen();", col = "left" })
                @Html.FormCheckBoxFor(m => m.KennzeichenReserviert, new { @class = "m-wrap", onchange = "CheckKennzeichenReserviert()", col = "right" }, labelHidden: true)
        
                @Html.FormTextBoxFor(m => m.Wunschkennzeichen2, new { @class = "m-wrap medium uppercase", @onkeypress = "return CleanUpKennzeichen();", col = "left" })
                @Html.FormTextBoxFor(m => m.ReservierungsName, new { @class = "m-wrap medium", col = "right" })
        
                @Html.FormTextBoxFor(m => m.Wunschkennzeichen3, new { @class = "m-wrap medium uppercase", @onkeypress = "return CleanUpKennzeichen();", col = "left" })
                @Html.FormTextBoxFor(m => m.ReservierungsNr, new { @class = "m-wrap medium", col = "right" })
            }
        }

                
        @Html.FormRequiredFieldsSummary()
        
        <script type="text/javascript">
            
            _modelIsValid = @ViewContext.ViewData.ModelState.IsValid.ToString().ToLower();
            
            CheckKennzeichenReserviert();
            
        </script>
    }
</div>
